"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@babylonjs";
exports.ids = ["vendor-chunks/@babylonjs"];
exports.modules = {

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/glTFBinaryExtension.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/glTFBinaryExtension.js ***!
  \*************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFBinaryExtension: () => (/* binding */ GLTFBinaryExtension)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js\");\n/* harmony import */ var _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glTFLoaderUtils.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js\");\n/* harmony import */ var _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./glTFLoaderInterfaces.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst BinaryExtensionBufferName = \"binary_glTF\";\n/**\n * @internal\n * @deprecated\n */\nclass GLTFBinaryExtension extends _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoaderExtension {\n    constructor() {\n        super(\"KHR_binary_glTF\");\n    }\n    loadRuntimeAsync(scene, data, rootUrl, onSuccess) {\n        const extensionsUsed = data.json.extensionsUsed;\n        if (!extensionsUsed || extensionsUsed.indexOf(this.name) === -1 || !data.bin) {\n            return false;\n        }\n        this._bin = data.bin;\n        onSuccess(_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoaderBase.CreateRuntime(data.json, scene, rootUrl));\n        return true;\n    }\n    loadBufferAsync(gltfRuntime, id, onSuccess, onError) {\n        if (gltfRuntime.extensionsUsed.indexOf(this.name) === -1) {\n            return false;\n        }\n        if (id !== BinaryExtensionBufferName) {\n            return false;\n        }\n        this._bin.readAsync(0, this._bin.byteLength).then(onSuccess, (error) => onError(error.message));\n        return true;\n    }\n    loadTextureBufferAsync(gltfRuntime, id, onSuccess) {\n        const texture = gltfRuntime.textures[id];\n        const source = gltfRuntime.images[texture.source];\n        if (!source.extensions || !(this.name in source.extensions)) {\n            return false;\n        }\n        const sourceExt = source.extensions[this.name];\n        const bufferView = gltfRuntime.bufferViews[sourceExt.bufferView];\n        const buffer = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__.GLTFUtils.GetBufferFromBufferView(gltfRuntime, bufferView, 0, bufferView.byteLength, _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__.EComponentType.UNSIGNED_BYTE);\n        onSuccess(buffer);\n        return true;\n    }\n    loadShaderStringAsync(gltfRuntime, id, onSuccess) {\n        const shader = gltfRuntime.shaders[id];\n        if (!shader.extensions || !(this.name in shader.extensions)) {\n            return false;\n        }\n        const binaryExtensionShader = shader.extensions[this.name];\n        const bufferView = gltfRuntime.bufferViews[binaryExtensionShader.bufferView];\n        const shaderBytes = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__.GLTFUtils.GetBufferFromBufferView(gltfRuntime, bufferView, 0, bufferView.byteLength, _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__.EComponentType.UNSIGNED_BYTE);\n        setTimeout(() => {\n            const shaderString = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_1__.GLTFUtils.DecodeBufferToText(shaderBytes);\n            onSuccess(shaderString);\n        });\n        return true;\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(new GLTFBinaryExtension());\n//# sourceMappingURL=glTFBinaryExtension.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMS4wL2dsVEZCaW5hcnlFeHRlbnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRjtBQUNqQztBQUNVO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0MsK0RBQW1CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwwREFBYztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBEQUFTLDRFQUE0RSxvRUFBYztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwwREFBUyw0RUFBNEUsb0VBQWM7QUFDL0g7QUFDQSxpQ0FBaUMsMERBQVM7QUFDMUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esc0RBQVU7QUFDViwrQyIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMS4wL2dsVEZCaW5hcnlFeHRlbnNpb24uanM/OWE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTFRGTG9hZGVyRXh0ZW5zaW9uLCBHTFRGTG9hZGVyLCBHTFRGTG9hZGVyQmFzZSB9IGZyb20gXCIuL2dsVEZMb2FkZXIuanNcIjtcbmltcG9ydCB7IEdMVEZVdGlscyB9IGZyb20gXCIuL2dsVEZMb2FkZXJVdGlscy5qc1wiO1xuaW1wb3J0IHsgRUNvbXBvbmVudFR5cGUgfSBmcm9tIFwiLi9nbFRGTG9hZGVySW50ZXJmYWNlcy5qc1wiO1xuY29uc3QgQmluYXJ5RXh0ZW5zaW9uQnVmZmVyTmFtZSA9IFwiYmluYXJ5X2dsVEZcIjtcbi8qKlxuICogQGludGVybmFsXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY2xhc3MgR0xURkJpbmFyeUV4dGVuc2lvbiBleHRlbmRzIEdMVEZMb2FkZXJFeHRlbnNpb24ge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihcIktIUl9iaW5hcnlfZ2xURlwiKTtcbiAgICB9XG4gICAgbG9hZFJ1bnRpbWVBc3luYyhzY2VuZSwgZGF0YSwgcm9vdFVybCwgb25TdWNjZXNzKSB7XG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbnNVc2VkID0gZGF0YS5qc29uLmV4dGVuc2lvbnNVc2VkO1xuICAgICAgICBpZiAoIWV4dGVuc2lvbnNVc2VkIHx8IGV4dGVuc2lvbnNVc2VkLmluZGV4T2YodGhpcy5uYW1lKSA9PT0gLTEgfHwgIWRhdGEuYmluKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYmluID0gZGF0YS5iaW47XG4gICAgICAgIG9uU3VjY2VzcyhHTFRGTG9hZGVyQmFzZS5DcmVhdGVSdW50aW1lKGRhdGEuanNvbiwgc2NlbmUsIHJvb3RVcmwpKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGxvYWRCdWZmZXJBc3luYyhnbHRmUnVudGltZSwgaWQsIG9uU3VjY2Vzcywgb25FcnJvcikge1xuICAgICAgICBpZiAoZ2x0ZlJ1bnRpbWUuZXh0ZW5zaW9uc1VzZWQuaW5kZXhPZih0aGlzLm5hbWUpID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpZCAhPT0gQmluYXJ5RXh0ZW5zaW9uQnVmZmVyTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Jpbi5yZWFkQXN5bmMoMCwgdGhpcy5fYmluLmJ5dGVMZW5ndGgpLnRoZW4ob25TdWNjZXNzLCAoZXJyb3IpID0+IG9uRXJyb3IoZXJyb3IubWVzc2FnZSkpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbG9hZFRleHR1cmVCdWZmZXJBc3luYyhnbHRmUnVudGltZSwgaWQsIG9uU3VjY2Vzcykge1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gZ2x0ZlJ1bnRpbWUudGV4dHVyZXNbaWRdO1xuICAgICAgICBjb25zdCBzb3VyY2UgPSBnbHRmUnVudGltZS5pbWFnZXNbdGV4dHVyZS5zb3VyY2VdO1xuICAgICAgICBpZiAoIXNvdXJjZS5leHRlbnNpb25zIHx8ICEodGhpcy5uYW1lIGluIHNvdXJjZS5leHRlbnNpb25zKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNvdXJjZUV4dCA9IHNvdXJjZS5leHRlbnNpb25zW3RoaXMubmFtZV07XG4gICAgICAgIGNvbnN0IGJ1ZmZlclZpZXcgPSBnbHRmUnVudGltZS5idWZmZXJWaWV3c1tzb3VyY2VFeHQuYnVmZmVyVmlld107XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEdMVEZVdGlscy5HZXRCdWZmZXJGcm9tQnVmZmVyVmlldyhnbHRmUnVudGltZSwgYnVmZmVyVmlldywgMCwgYnVmZmVyVmlldy5ieXRlTGVuZ3RoLCBFQ29tcG9uZW50VHlwZS5VTlNJR05FRF9CWVRFKTtcbiAgICAgICAgb25TdWNjZXNzKGJ1ZmZlcik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBsb2FkU2hhZGVyU3RyaW5nQXN5bmMoZ2x0ZlJ1bnRpbWUsIGlkLCBvblN1Y2Nlc3MpIHtcbiAgICAgICAgY29uc3Qgc2hhZGVyID0gZ2x0ZlJ1bnRpbWUuc2hhZGVyc1tpZF07XG4gICAgICAgIGlmICghc2hhZGVyLmV4dGVuc2lvbnMgfHwgISh0aGlzLm5hbWUgaW4gc2hhZGVyLmV4dGVuc2lvbnMpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYmluYXJ5RXh0ZW5zaW9uU2hhZGVyID0gc2hhZGVyLmV4dGVuc2lvbnNbdGhpcy5uYW1lXTtcbiAgICAgICAgY29uc3QgYnVmZmVyVmlldyA9IGdsdGZSdW50aW1lLmJ1ZmZlclZpZXdzW2JpbmFyeUV4dGVuc2lvblNoYWRlci5idWZmZXJWaWV3XTtcbiAgICAgICAgY29uc3Qgc2hhZGVyQnl0ZXMgPSBHTFRGVXRpbHMuR2V0QnVmZmVyRnJvbUJ1ZmZlclZpZXcoZ2x0ZlJ1bnRpbWUsIGJ1ZmZlclZpZXcsIDAsIGJ1ZmZlclZpZXcuYnl0ZUxlbmd0aCwgRUNvbXBvbmVudFR5cGUuVU5TSUdORURfQllURSk7XG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2hhZGVyU3RyaW5nID0gR0xURlV0aWxzLkRlY29kZUJ1ZmZlclRvVGV4dChzaGFkZXJCeXRlcyk7XG4gICAgICAgICAgICBvblN1Y2Nlc3Moc2hhZGVyU3RyaW5nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24obmV3IEdMVEZCaW5hcnlFeHRlbnNpb24oKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbFRGQmluYXJ5RXh0ZW5zaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/glTFBinaryExtension.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js ***!
  \****************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFLoader: () => (/* binding */ GLTFLoader),\n/* harmony export */   GLTFLoaderBase: () => (/* binding */ GLTFLoaderBase),\n/* harmony export */   GLTFLoaderExtension: () => (/* binding */ GLTFLoaderExtension)\n/* harmony export */ });\n/* harmony import */ var _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFLoaderInterfaces.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\n/* harmony import */ var _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Cameras/camera.js */ \"@babylonjs/core/Cameras/camera.js\");\n/* harmony import */ var _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Cameras/freeCamera.js */ \"@babylonjs/core/Cameras/freeCamera.js\");\n/* harmony import */ var _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babylonjs/core/Animations/animation.js */ \"@babylonjs/core/Animations/animation.js\");\n/* harmony import */ var _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babylonjs/core/Bones/bone.js */ \"@babylonjs/core/Bones/bone.js\");\n/* harmony import */ var _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babylonjs/core/Bones/skeleton.js */ \"@babylonjs/core/Bones/skeleton.js\");\n/* harmony import */ var _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babylonjs/core/Materials/effect.js */ \"@babylonjs/core/Materials/effect.js\");\n/* harmony import */ var _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babylonjs/core/Materials/material.js */ \"@babylonjs/core/Materials/material.js\");\n/* harmony import */ var _babylonjs_core_Materials_multiMaterial_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babylonjs/core/Materials/multiMaterial.js */ \"@babylonjs/core/Materials/multiMaterial.js\");\n/* harmony import */ var _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @babylonjs/core/Materials/standardMaterial.js */ \"@babylonjs/core/Materials/standardMaterial.js\");\n/* harmony import */ var _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @babylonjs/core/Materials/shaderMaterial.js */ \"@babylonjs/core/Materials/shaderMaterial.js\");\n/* harmony import */ var _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/texture.js */ \"@babylonjs/core/Materials/Textures/texture.js\");\n/* harmony import */ var _babylonjs_core_Meshes_mesh_vertexData_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @babylonjs/core/Meshes/mesh.vertexData.js */ \"@babylonjs/core/Meshes/mesh.vertexData.js\");\n/* harmony import */ var _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @babylonjs/core/Buffers/buffer.js */ \"@babylonjs/core/Buffers/buffer.js\");\n/* harmony import */ var _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @babylonjs/core/Meshes/geometry.js */ \"@babylonjs/core/Meshes/geometry.js\");\n/* harmony import */ var _babylonjs_core_Meshes_subMesh_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @babylonjs/core/Meshes/subMesh.js */ \"@babylonjs/core/Meshes/subMesh.js\");\n/* harmony import */ var _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @babylonjs/core/Meshes/abstractMesh.js */ \"@babylonjs/core/Meshes/abstractMesh.js\");\n/* harmony import */ var _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @babylonjs/core/Meshes/mesh.js */ \"@babylonjs/core/Meshes/mesh.js\");\n/* harmony import */ var _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @babylonjs/core/Lights/hemisphericLight.js */ \"@babylonjs/core/Lights/hemisphericLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @babylonjs/core/Lights/directionalLight.js */ \"@babylonjs/core/Lights/directionalLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @babylonjs/core/Lights/pointLight.js */ \"@babylonjs/core/Lights/pointLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @babylonjs/core/Lights/spotLight.js */ \"@babylonjs/core/Lights/spotLight.js\");\n/* harmony import */ var _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./glTFLoaderUtils.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js\");\n/* harmony import */ var _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../glTFFileLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js\");\n/* harmony import */ var _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @babylonjs/core/Engines/constants.js */ \"@babylonjs/core/Engines/constants.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_Materials_multiMaterial_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_13__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_14__, _babylonjs_core_Meshes_mesh_vertexData_js__WEBPACK_IMPORTED_MODULE_15__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_16__, _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_17__, _babylonjs_core_Meshes_subMesh_js__WEBPACK_IMPORTED_MODULE_18__, _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_19__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__, _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_21__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_22__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_23__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_24__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__, _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__, _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__]);\n([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_Materials_multiMaterial_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_13__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_14__, _babylonjs_core_Meshes_mesh_vertexData_js__WEBPACK_IMPORTED_MODULE_15__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_16__, _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_17__, _babylonjs_core_Meshes_subMesh_js__WEBPACK_IMPORTED_MODULE_18__, _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_19__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__, _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_21__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_22__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_23__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_24__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__, _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__, _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Tokenizer. Used for shaders compatibility\n * Automatically map world, view, projection, worldViewProjection, attributes and so on\n */\nvar ETokenType;\n(function (ETokenType) {\n    ETokenType[ETokenType[\"IDENTIFIER\"] = 1] = \"IDENTIFIER\";\n    ETokenType[ETokenType[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    ETokenType[ETokenType[\"END_OF_INPUT\"] = 3] = \"END_OF_INPUT\";\n})(ETokenType || (ETokenType = {}));\nclass Tokenizer {\n    constructor(toParse) {\n        this._pos = 0;\n        this.currentToken = ETokenType.UNKNOWN;\n        this.currentIdentifier = \"\";\n        this.currentString = \"\";\n        this.isLetterOrDigitPattern = /^[a-zA-Z0-9]+$/;\n        this._toParse = toParse;\n        this._maxPos = toParse.length;\n    }\n    getNextToken() {\n        if (this.isEnd()) {\n            return ETokenType.END_OF_INPUT;\n        }\n        this.currentString = this.read();\n        this.currentToken = ETokenType.UNKNOWN;\n        if (this.currentString === \"_\" || this.isLetterOrDigitPattern.test(this.currentString)) {\n            this.currentToken = ETokenType.IDENTIFIER;\n            this.currentIdentifier = this.currentString;\n            while (!this.isEnd() && (this.isLetterOrDigitPattern.test((this.currentString = this.peek())) || this.currentString === \"_\")) {\n                this.currentIdentifier += this.currentString;\n                this.forward();\n            }\n        }\n        return this.currentToken;\n    }\n    peek() {\n        return this._toParse[this._pos];\n    }\n    read() {\n        return this._toParse[this._pos++];\n    }\n    forward() {\n        this._pos++;\n    }\n    isEnd() {\n        return this._pos >= this._maxPos;\n    }\n}\n/**\n * Values\n */\nconst glTFTransforms = [\"MODEL\", \"VIEW\", \"PROJECTION\", \"MODELVIEW\", \"MODELVIEWPROJECTION\", \"JOINTMATRIX\"];\nconst babylonTransforms = [\"world\", \"view\", \"projection\", \"worldView\", \"worldViewProjection\", \"mBones\"];\nconst glTFAnimationPaths = [\"translation\", \"rotation\", \"scale\"];\nconst babylonAnimationPaths = [\"position\", \"rotationQuaternion\", \"scaling\"];\n/**\n * Parse\n * @param parsedBuffers\n * @param gltfRuntime\n */\nconst parseBuffers = (parsedBuffers, gltfRuntime) => {\n    for (const buf in parsedBuffers) {\n        const parsedBuffer = parsedBuffers[buf];\n        gltfRuntime.buffers[buf] = parsedBuffer;\n        gltfRuntime.buffersCount++;\n    }\n};\nconst parseShaders = (parsedShaders, gltfRuntime) => {\n    for (const sha in parsedShaders) {\n        const parsedShader = parsedShaders[sha];\n        gltfRuntime.shaders[sha] = parsedShader;\n        gltfRuntime.shaderscount++;\n    }\n};\nconst parseObject = (parsedObjects, runtimeProperty, gltfRuntime) => {\n    for (const object in parsedObjects) {\n        const parsedObject = parsedObjects[object];\n        gltfRuntime[runtimeProperty][object] = parsedObject;\n    }\n};\n/**\n * Utils\n * @param buffer\n */\nconst normalizeUVs = (buffer) => {\n    if (!buffer) {\n        return;\n    }\n    for (let i = 0; i < buffer.length / 2; i++) {\n        buffer[i * 2 + 1] = 1.0 - buffer[i * 2 + 1];\n    }\n};\nconst getAttribute = (attributeParameter) => {\n    if (attributeParameter.semantic === \"NORMAL\") {\n        return \"normal\";\n    }\n    else if (attributeParameter.semantic === \"POSITION\") {\n        return \"position\";\n    }\n    else if (attributeParameter.semantic === \"JOINT\") {\n        return \"matricesIndices\";\n    }\n    else if (attributeParameter.semantic === \"WEIGHT\") {\n        return \"matricesWeights\";\n    }\n    else if (attributeParameter.semantic === \"COLOR\") {\n        return \"color\";\n    }\n    else if (attributeParameter.semantic && attributeParameter.semantic.indexOf(\"TEXCOORD_\") !== -1) {\n        const channel = Number(attributeParameter.semantic.split(\"_\")[1]);\n        return \"uv\" + (channel === 0 ? \"\" : channel + 1);\n    }\n    return null;\n};\n/**\n * Loads and creates animations\n * @param gltfRuntime\n */\nconst loadAnimations = (gltfRuntime) => {\n    for (const anim in gltfRuntime.animations) {\n        const animation = gltfRuntime.animations[anim];\n        if (!animation.channels || !animation.samplers) {\n            continue;\n        }\n        let lastAnimation = null;\n        for (let i = 0; i < animation.channels.length; i++) {\n            // Get parameters and load buffers\n            const channel = animation.channels[i];\n            const sampler = animation.samplers[channel.sampler];\n            if (!sampler) {\n                continue;\n            }\n            let inputData = null;\n            let outputData = null;\n            if (animation.parameters) {\n                inputData = animation.parameters[sampler.input];\n                outputData = animation.parameters[sampler.output];\n            }\n            else {\n                inputData = sampler.input;\n                outputData = sampler.output;\n            }\n            const bufferInput = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetBufferFromAccessor(gltfRuntime, gltfRuntime.accessors[inputData]);\n            const bufferOutput = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetBufferFromAccessor(gltfRuntime, gltfRuntime.accessors[outputData]);\n            const targetId = channel.target.id;\n            let targetNode = gltfRuntime.scene.getNodeById(targetId);\n            if (targetNode === null) {\n                targetNode = gltfRuntime.scene.getNodeByName(targetId);\n            }\n            if (targetNode === null) {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Warn(\"Creating animation named \" + anim + \". But cannot find node named \" + targetId + \" to attach to\");\n                continue;\n            }\n            const isBone = targetNode instanceof _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__.Bone;\n            // Get target path (position, rotation or scaling)\n            let targetPath = channel.target.path;\n            const targetPathIndex = glTFAnimationPaths.indexOf(targetPath);\n            if (targetPathIndex !== -1) {\n                targetPath = babylonAnimationPaths[targetPathIndex];\n            }\n            // Determine animation type\n            let animationType = _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__.Animation.ANIMATIONTYPE_MATRIX;\n            if (!isBone) {\n                if (targetPath === \"rotationQuaternion\") {\n                    animationType = _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__.Animation.ANIMATIONTYPE_QUATERNION;\n                    targetNode.rotationQuaternion = new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion();\n                }\n                else {\n                    animationType = _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__.Animation.ANIMATIONTYPE_VECTOR3;\n                }\n            }\n            // Create animation and key frames\n            let babylonAnimation = null;\n            const keys = [];\n            let arrayOffset = 0;\n            let modifyKey = false;\n            if (isBone && lastAnimation && lastAnimation.getKeys().length === bufferInput.length) {\n                babylonAnimation = lastAnimation;\n                modifyKey = true;\n            }\n            if (!modifyKey) {\n                gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n                babylonAnimation = new _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__.Animation(anim, isBone ? \"_matrix\" : targetPath, 1, animationType, _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_6__.Animation.ANIMATIONLOOPMODE_CYCLE);\n                gltfRuntime.scene._blockEntityCollection = false;\n            }\n            // For each frame\n            for (let j = 0; j < bufferInput.length; j++) {\n                let value = null;\n                if (targetPath === \"rotationQuaternion\") {\n                    // VEC4\n                    value = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray([bufferOutput[arrayOffset], bufferOutput[arrayOffset + 1], bufferOutput[arrayOffset + 2], bufferOutput[arrayOffset + 3]]);\n                    arrayOffset += 4;\n                }\n                else {\n                    // Position and scaling are VEC3\n                    value = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray([bufferOutput[arrayOffset], bufferOutput[arrayOffset + 1], bufferOutput[arrayOffset + 2]]);\n                    arrayOffset += 3;\n                }\n                if (isBone) {\n                    const bone = targetNode;\n                    let translation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero();\n                    let rotationQuaternion = new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion();\n                    let scaling = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero();\n                    // Warning on decompose\n                    let mat = bone.getBaseMatrix();\n                    if (modifyKey && lastAnimation) {\n                        mat = lastAnimation.getKeys()[j].value;\n                    }\n                    mat.decompose(scaling, rotationQuaternion, translation);\n                    if (targetPath === \"position\") {\n                        translation = value;\n                    }\n                    else if (targetPath === \"rotationQuaternion\") {\n                        rotationQuaternion = value;\n                    }\n                    else {\n                        scaling = value;\n                    }\n                    value = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Compose(scaling, rotationQuaternion, translation);\n                }\n                if (!modifyKey) {\n                    keys.push({\n                        frame: bufferInput[j],\n                        value: value,\n                    });\n                }\n                else if (lastAnimation) {\n                    lastAnimation.getKeys()[j].value = value;\n                }\n            }\n            // Finish\n            if (!modifyKey && babylonAnimation) {\n                babylonAnimation.setKeys(keys);\n                targetNode.animations.push(babylonAnimation);\n            }\n            lastAnimation = babylonAnimation;\n            gltfRuntime.scene.stopAnimation(targetNode);\n            gltfRuntime.scene.beginAnimation(targetNode, 0, bufferInput[bufferInput.length - 1], true, 1.0);\n        }\n    }\n};\n/**\n * @returns the bones transformation matrix\n * @param node\n */\nconst configureBoneTransformation = (node) => {\n    let mat = null;\n    if (node.translation || node.rotation || node.scale) {\n        const scale = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.scale || [1, 1, 1]);\n        const rotation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(node.rotation || [0, 0, 0, 1]);\n        const position = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.translation || [0, 0, 0]);\n        mat = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Compose(scale, rotation, position);\n    }\n    else {\n        mat = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.FromArray(node.matrix);\n    }\n    return mat;\n};\n/**\n * Returns the parent bone\n * @param gltfRuntime\n * @param skins\n * @param jointName\n * @param newSkeleton\n * @returns the parent bone\n */\nconst getParentBone = (gltfRuntime, skins, jointName, newSkeleton) => {\n    // Try to find\n    for (let i = 0; i < newSkeleton.bones.length; i++) {\n        if (newSkeleton.bones[i].name === jointName) {\n            return newSkeleton.bones[i];\n        }\n    }\n    // Not found, search in gltf nodes\n    const nodes = gltfRuntime.nodes;\n    for (const nde in nodes) {\n        const node = nodes[nde];\n        if (!node.jointName) {\n            continue;\n        }\n        const children = node.children;\n        for (let i = 0; i < children.length; i++) {\n            const child = gltfRuntime.nodes[children[i]];\n            if (!child.jointName) {\n                continue;\n            }\n            if (child.jointName === jointName) {\n                const mat = configureBoneTransformation(node);\n                const bone = new _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__.Bone(node.name || \"\", newSkeleton, getParentBone(gltfRuntime, skins, node.jointName, newSkeleton), mat);\n                bone.id = nde;\n                return bone;\n            }\n        }\n    }\n    return null;\n};\n/**\n * Returns the appropriate root node\n * @param nodesToRoot\n * @param id\n * @returns the root node\n */\nconst getNodeToRoot = (nodesToRoot, id) => {\n    for (let i = 0; i < nodesToRoot.length; i++) {\n        const nodeToRoot = nodesToRoot[i];\n        for (let j = 0; j < nodeToRoot.node.children.length; j++) {\n            const child = nodeToRoot.node.children[j];\n            if (child === id) {\n                return nodeToRoot.bone;\n            }\n        }\n    }\n    return null;\n};\n/**\n * Returns the node with the joint name\n * @param gltfRuntime\n * @param jointName\n * @returns the node with the joint name\n */\nconst getJointNode = (gltfRuntime, jointName) => {\n    const nodes = gltfRuntime.nodes;\n    let node = nodes[jointName];\n    if (node) {\n        return {\n            node: node,\n            id: jointName,\n        };\n    }\n    for (const nde in nodes) {\n        node = nodes[nde];\n        if (node.jointName === jointName) {\n            return {\n                node: node,\n                id: nde,\n            };\n        }\n    }\n    return null;\n};\n/**\n * Checks if a nodes is in joints\n * @param skins\n * @param id\n * @returns true if the node is in joints, else false\n */\nconst nodeIsInJoints = (skins, id) => {\n    for (let i = 0; i < skins.jointNames.length; i++) {\n        if (skins.jointNames[i] === id) {\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Fills the nodes to root for bones and builds hierarchy\n * @param gltfRuntime\n * @param newSkeleton\n * @param skins\n * @param nodesToRoot\n */\nconst getNodesToRoot = (gltfRuntime, newSkeleton, skins, nodesToRoot) => {\n    // Creates nodes for root\n    for (const nde in gltfRuntime.nodes) {\n        const node = gltfRuntime.nodes[nde];\n        const id = nde;\n        if (!node.jointName || nodeIsInJoints(skins, node.jointName)) {\n            continue;\n        }\n        // Create node to root bone\n        const mat = configureBoneTransformation(node);\n        const bone = new _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__.Bone(node.name || \"\", newSkeleton, null, mat);\n        bone.id = id;\n        nodesToRoot.push({ bone: bone, node: node, id: id });\n    }\n    // Parenting\n    for (let i = 0; i < nodesToRoot.length; i++) {\n        const nodeToRoot = nodesToRoot[i];\n        const children = nodeToRoot.node.children;\n        for (let j = 0; j < children.length; j++) {\n            let child = null;\n            for (let k = 0; k < nodesToRoot.length; k++) {\n                if (nodesToRoot[k].id === children[j]) {\n                    child = nodesToRoot[k];\n                    break;\n                }\n            }\n            if (child) {\n                child.bone._parent = nodeToRoot.bone;\n                nodeToRoot.bone.children.push(child.bone);\n            }\n        }\n    }\n};\n/**\n * Imports a skeleton\n * @param gltfRuntime\n * @param skins\n * @param mesh\n * @param newSkeleton\n * @returns the bone name\n */\nconst importSkeleton = (gltfRuntime, skins, mesh, newSkeleton) => {\n    if (!newSkeleton) {\n        newSkeleton = new _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_8__.Skeleton(skins.name || \"\", \"\", gltfRuntime.scene);\n    }\n    if (!skins.babylonSkeleton) {\n        return newSkeleton;\n    }\n    // Find the root bones\n    const nodesToRoot = [];\n    const nodesToRootToAdd = [];\n    getNodesToRoot(gltfRuntime, newSkeleton, skins, nodesToRoot);\n    newSkeleton.bones = [];\n    // Joints\n    for (let i = 0; i < skins.jointNames.length; i++) {\n        const jointNode = getJointNode(gltfRuntime, skins.jointNames[i]);\n        if (!jointNode) {\n            continue;\n        }\n        const node = jointNode.node;\n        if (!node) {\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Warn(\"Joint named \" + skins.jointNames[i] + \" does not exist\");\n            continue;\n        }\n        const id = jointNode.id;\n        // Optimize, if the bone already exists...\n        const existingBone = gltfRuntime.scene.getBoneById(id);\n        if (existingBone) {\n            newSkeleton.bones.push(existingBone);\n            continue;\n        }\n        // Search for parent bone\n        let foundBone = false;\n        let parentBone = null;\n        for (let j = 0; j < i; j++) {\n            const jointNode = getJointNode(gltfRuntime, skins.jointNames[j]);\n            if (!jointNode) {\n                continue;\n            }\n            const joint = jointNode.node;\n            if (!joint) {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Warn(\"Joint named \" + skins.jointNames[j] + \" does not exist when looking for parent\");\n                continue;\n            }\n            const children = joint.children;\n            if (!children) {\n                continue;\n            }\n            foundBone = false;\n            for (let k = 0; k < children.length; k++) {\n                if (children[k] === id) {\n                    parentBone = getParentBone(gltfRuntime, skins, skins.jointNames[j], newSkeleton);\n                    foundBone = true;\n                    break;\n                }\n            }\n            if (foundBone) {\n                break;\n            }\n        }\n        // Create bone\n        const mat = configureBoneTransformation(node);\n        if (!parentBone && nodesToRoot.length > 0) {\n            parentBone = getNodeToRoot(nodesToRoot, id);\n            if (parentBone) {\n                if (nodesToRootToAdd.indexOf(parentBone) === -1) {\n                    nodesToRootToAdd.push(parentBone);\n                }\n            }\n        }\n        const bone = new _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_7__.Bone(node.jointName || \"\", newSkeleton, parentBone, mat);\n        bone.id = id;\n    }\n    // Polish\n    const bones = newSkeleton.bones;\n    newSkeleton.bones = [];\n    for (let i = 0; i < skins.jointNames.length; i++) {\n        const jointNode = getJointNode(gltfRuntime, skins.jointNames[i]);\n        if (!jointNode) {\n            continue;\n        }\n        for (let j = 0; j < bones.length; j++) {\n            if (bones[j].id === jointNode.id) {\n                newSkeleton.bones.push(bones[j]);\n                break;\n            }\n        }\n    }\n    newSkeleton.prepare();\n    // Finish\n    for (let i = 0; i < nodesToRootToAdd.length; i++) {\n        newSkeleton.bones.push(nodesToRootToAdd[i]);\n    }\n    return newSkeleton;\n};\n/**\n * Imports a mesh and its geometries\n * @param gltfRuntime\n * @param node\n * @param meshes\n * @param id\n * @param newMesh\n * @returns the new mesh\n */\nconst importMesh = (gltfRuntime, node, meshes, id, newMesh) => {\n    if (!newMesh) {\n        gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n        newMesh = new _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__.Mesh(node.name || \"\", gltfRuntime.scene);\n        newMesh._parentContainer = gltfRuntime.assetContainer;\n        gltfRuntime.scene._blockEntityCollection = false;\n        newMesh.id = id;\n    }\n    if (!node.babylonNode) {\n        return newMesh;\n    }\n    const subMaterials = [];\n    let vertexData = null;\n    const verticesStarts = [];\n    const verticesCounts = [];\n    const indexStarts = [];\n    const indexCounts = [];\n    for (let meshIndex = 0; meshIndex < meshes.length; meshIndex++) {\n        const meshId = meshes[meshIndex];\n        const mesh = gltfRuntime.meshes[meshId];\n        if (!mesh) {\n            continue;\n        }\n        // Positions, normals and UVs\n        for (let i = 0; i < mesh.primitives.length; i++) {\n            // Temporary vertex data\n            const tempVertexData = new _babylonjs_core_Meshes_mesh_vertexData_js__WEBPACK_IMPORTED_MODULE_15__.VertexData();\n            const primitive = mesh.primitives[i];\n            if (primitive.mode !== 4) {\n                // continue;\n            }\n            const attributes = primitive.attributes;\n            let accessor = null;\n            let buffer = null;\n            // Set positions, normal and uvs\n            for (const semantic in attributes) {\n                // Link accessor and buffer view\n                accessor = gltfRuntime.accessors[attributes[semantic]];\n                buffer = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetBufferFromAccessor(gltfRuntime, accessor);\n                if (semantic === \"NORMAL\") {\n                    tempVertexData.normals = new Float32Array(buffer.length);\n                    tempVertexData.normals.set(buffer);\n                }\n                else if (semantic === \"POSITION\") {\n                    if (_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader.HomogeneousCoordinates) {\n                        tempVertexData.positions = new Float32Array(buffer.length - buffer.length / 4);\n                        for (let j = 0; j < buffer.length; j += 4) {\n                            tempVertexData.positions[j] = buffer[j];\n                            tempVertexData.positions[j + 1] = buffer[j + 1];\n                            tempVertexData.positions[j + 2] = buffer[j + 2];\n                        }\n                    }\n                    else {\n                        tempVertexData.positions = new Float32Array(buffer.length);\n                        tempVertexData.positions.set(buffer);\n                    }\n                    verticesCounts.push(tempVertexData.positions.length);\n                }\n                else if (semantic.indexOf(\"TEXCOORD_\") !== -1) {\n                    const channel = Number(semantic.split(\"_\")[1]);\n                    const uvKind = _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_16__.VertexBuffer.UVKind + (channel === 0 ? \"\" : channel + 1);\n                    const uvs = new Float32Array(buffer.length);\n                    uvs.set(buffer);\n                    normalizeUVs(uvs);\n                    tempVertexData.set(uvs, uvKind);\n                }\n                else if (semantic === \"JOINT\") {\n                    tempVertexData.matricesIndices = new Float32Array(buffer.length);\n                    tempVertexData.matricesIndices.set(buffer);\n                }\n                else if (semantic === \"WEIGHT\") {\n                    tempVertexData.matricesWeights = new Float32Array(buffer.length);\n                    tempVertexData.matricesWeights.set(buffer);\n                }\n                else if (semantic === \"COLOR\") {\n                    tempVertexData.colors = new Float32Array(buffer.length);\n                    tempVertexData.colors.set(buffer);\n                }\n            }\n            // Indices\n            accessor = gltfRuntime.accessors[primitive.indices];\n            if (accessor) {\n                buffer = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetBufferFromAccessor(gltfRuntime, accessor);\n                tempVertexData.indices = new Int32Array(buffer.length);\n                tempVertexData.indices.set(buffer);\n                indexCounts.push(tempVertexData.indices.length);\n            }\n            else {\n                // Set indices on the fly\n                const indices = [];\n                for (let j = 0; j < tempVertexData.positions.length / 3; j++) {\n                    indices.push(j);\n                }\n                tempVertexData.indices = new Int32Array(indices);\n                indexCounts.push(tempVertexData.indices.length);\n            }\n            if (!vertexData) {\n                vertexData = tempVertexData;\n            }\n            else {\n                vertexData.merge(tempVertexData);\n            }\n            // Sub material\n            const material = gltfRuntime.scene.getMaterialById(primitive.material);\n            subMaterials.push(material === null ? _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetDefaultMaterial(gltfRuntime.scene) : material);\n            // Update vertices start and index start\n            verticesStarts.push(verticesStarts.length === 0 ? 0 : verticesStarts[verticesStarts.length - 1] + verticesCounts[verticesCounts.length - 2]);\n            indexStarts.push(indexStarts.length === 0 ? 0 : indexStarts[indexStarts.length - 1] + indexCounts[indexCounts.length - 2]);\n        }\n    }\n    let material;\n    gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n    if (subMaterials.length > 1) {\n        material = new _babylonjs_core_Materials_multiMaterial_js__WEBPACK_IMPORTED_MODULE_11__.MultiMaterial(\"multimat\" + id, gltfRuntime.scene);\n        material.subMaterials = subMaterials;\n    }\n    else {\n        material = new _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_12__.StandardMaterial(\"multimat\" + id, gltfRuntime.scene);\n    }\n    if (subMaterials.length === 1) {\n        material = subMaterials[0];\n    }\n    material._parentContainer = gltfRuntime.assetContainer;\n    if (!newMesh.material) {\n        newMesh.material = material;\n    }\n    // Apply geometry\n    new _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_17__.Geometry(id, gltfRuntime.scene, vertexData, false, newMesh);\n    newMesh.computeWorldMatrix(true);\n    gltfRuntime.scene._blockEntityCollection = false;\n    // Apply submeshes\n    newMesh.subMeshes = [];\n    let index = 0;\n    for (let meshIndex = 0; meshIndex < meshes.length; meshIndex++) {\n        const meshId = meshes[meshIndex];\n        const mesh = gltfRuntime.meshes[meshId];\n        if (!mesh) {\n            continue;\n        }\n        for (let i = 0; i < mesh.primitives.length; i++) {\n            if (mesh.primitives[i].mode !== 4) {\n                //continue;\n            }\n            _babylonjs_core_Meshes_subMesh_js__WEBPACK_IMPORTED_MODULE_18__.SubMesh.AddToMesh(index, verticesStarts[index], verticesCounts[index], indexStarts[index], indexCounts[index], newMesh, newMesh, true);\n            index++;\n        }\n    }\n    // Finish\n    return newMesh;\n};\n/**\n * Configure node transformation from position, rotation and scaling\n * @param newNode\n * @param position\n * @param rotation\n * @param scaling\n */\nconst configureNode = (newNode, position, rotation, scaling) => {\n    if (newNode.position) {\n        newNode.position = position;\n    }\n    if (newNode.rotationQuaternion || newNode.rotation) {\n        newNode.rotationQuaternion = rotation;\n    }\n    if (newNode.scaling) {\n        newNode.scaling = scaling;\n    }\n};\n/**\n * Configures node from transformation matrix\n * @param newNode\n * @param node\n */\nconst configureNodeFromMatrix = (newNode, node) => {\n    if (node.matrix) {\n        const position = new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 0, 0);\n        const rotation = new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion();\n        const scaling = new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 0, 0);\n        const mat = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.FromArray(node.matrix);\n        mat.decompose(scaling, rotation, position);\n        configureNode(newNode, position, rotation, scaling);\n    }\n    else if (node.translation && node.rotation && node.scale) {\n        configureNode(newNode, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.translation), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(node.rotation), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.scale));\n    }\n    newNode.computeWorldMatrix(true);\n};\n/**\n * Imports a node\n * @param gltfRuntime\n * @param node\n * @param id\n * @returns the newly imported node\n */\nconst importNode = (gltfRuntime, node, id) => {\n    let lastNode = null;\n    if (gltfRuntime.importOnlyMeshes && (node.skin || node.meshes)) {\n        if (gltfRuntime.importMeshesNames && gltfRuntime.importMeshesNames.length > 0 && gltfRuntime.importMeshesNames.indexOf(node.name || \"\") === -1) {\n            return null;\n        }\n    }\n    // Meshes\n    if (node.skin) {\n        if (node.meshes) {\n            const skin = gltfRuntime.skins[node.skin];\n            const newMesh = importMesh(gltfRuntime, node, node.meshes, id, node.babylonNode);\n            newMesh.skeleton = gltfRuntime.scene.getLastSkeletonById(node.skin);\n            if (newMesh.skeleton === null) {\n                newMesh.skeleton = importSkeleton(gltfRuntime, skin, newMesh, skin.babylonSkeleton);\n                if (!skin.babylonSkeleton) {\n                    skin.babylonSkeleton = newMesh.skeleton;\n                }\n            }\n            lastNode = newMesh;\n        }\n    }\n    else if (node.meshes) {\n        /**\n         * Improve meshes property\n         */\n        const newMesh = importMesh(gltfRuntime, node, node.mesh ? [node.mesh] : node.meshes, id, node.babylonNode);\n        lastNode = newMesh;\n    }\n    // Lights\n    else if (node.light && !node.babylonNode && !gltfRuntime.importOnlyMeshes) {\n        const light = gltfRuntime.lights[node.light];\n        if (light) {\n            if (light.type === \"ambient\") {\n                const ambienLight = light[light.type];\n                const hemiLight = new _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_21__.HemisphericLight(node.light, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), gltfRuntime.scene);\n                hemiLight.name = node.name || \"\";\n                if (ambienLight.color) {\n                    hemiLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(ambienLight.color);\n                }\n                lastNode = hemiLight;\n            }\n            else if (light.type === \"directional\") {\n                const directionalLight = light[light.type];\n                const dirLight = new _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_22__.DirectionalLight(node.light, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), gltfRuntime.scene);\n                dirLight.name = node.name || \"\";\n                if (directionalLight.color) {\n                    dirLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(directionalLight.color);\n                }\n                lastNode = dirLight;\n            }\n            else if (light.type === \"point\") {\n                const pointLight = light[light.type];\n                const ptLight = new _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_23__.PointLight(node.light, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), gltfRuntime.scene);\n                ptLight.name = node.name || \"\";\n                if (pointLight.color) {\n                    ptLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(pointLight.color);\n                }\n                lastNode = ptLight;\n            }\n            else if (light.type === \"spot\") {\n                const spotLight = light[light.type];\n                const spLight = new _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_24__.SpotLight(node.light, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), 0, 0, gltfRuntime.scene);\n                spLight.name = node.name || \"\";\n                if (spotLight.color) {\n                    spLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(spotLight.color);\n                }\n                if (spotLight.fallOfAngle) {\n                    spLight.angle = spotLight.fallOfAngle;\n                }\n                if (spotLight.fallOffExponent) {\n                    spLight.exponent = spotLight.fallOffExponent;\n                }\n                lastNode = spLight;\n            }\n        }\n    }\n    // Cameras\n    else if (node.camera && !node.babylonNode && !gltfRuntime.importOnlyMeshes) {\n        const camera = gltfRuntime.cameras[node.camera];\n        if (camera) {\n            gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n            if (camera.type === \"orthographic\") {\n                const orthoCamera = new _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__.FreeCamera(node.camera, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), gltfRuntime.scene, false);\n                orthoCamera.name = node.name || \"\";\n                orthoCamera.mode = _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__.Camera.ORTHOGRAPHIC_CAMERA;\n                orthoCamera.attachControl();\n                lastNode = orthoCamera;\n                orthoCamera._parentContainer = gltfRuntime.assetContainer;\n            }\n            else if (camera.type === \"perspective\") {\n                const perspectiveCamera = camera[camera.type];\n                const persCamera = new _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__.FreeCamera(node.camera, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), gltfRuntime.scene, false);\n                persCamera.name = node.name || \"\";\n                persCamera.attachControl();\n                if (!perspectiveCamera.aspectRatio) {\n                    perspectiveCamera.aspectRatio = gltfRuntime.scene.getEngine().getRenderWidth() / gltfRuntime.scene.getEngine().getRenderHeight();\n                }\n                if (perspectiveCamera.znear && perspectiveCamera.zfar) {\n                    persCamera.maxZ = perspectiveCamera.zfar;\n                    persCamera.minZ = perspectiveCamera.znear;\n                }\n                lastNode = persCamera;\n                persCamera._parentContainer = gltfRuntime.assetContainer;\n            }\n            gltfRuntime.scene._blockEntityCollection = false;\n        }\n    }\n    // Empty node\n    if (!node.jointName) {\n        if (node.babylonNode) {\n            return node.babylonNode;\n        }\n        else if (lastNode === null) {\n            gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n            const dummy = new _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__.Mesh(node.name || \"\", gltfRuntime.scene);\n            dummy._parentContainer = gltfRuntime.assetContainer;\n            gltfRuntime.scene._blockEntityCollection = false;\n            node.babylonNode = dummy;\n            lastNode = dummy;\n        }\n    }\n    if (lastNode !== null) {\n        if (node.matrix && lastNode instanceof _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_20__.Mesh) {\n            configureNodeFromMatrix(lastNode, node);\n        }\n        else {\n            const translation = node.translation || [0, 0, 0];\n            const rotation = node.rotation || [0, 0, 0, 1];\n            const scale = node.scale || [1, 1, 1];\n            configureNode(lastNode, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(translation), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(rotation), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(scale));\n        }\n        lastNode.updateCache(true);\n        node.babylonNode = lastNode;\n    }\n    return lastNode;\n};\n/**\n * Traverses nodes and creates them\n * @param gltfRuntime\n * @param id\n * @param parent\n * @param meshIncluded\n */\nconst traverseNodes = (gltfRuntime, id, parent, meshIncluded = false) => {\n    const node = gltfRuntime.nodes[id];\n    let newNode = null;\n    if (gltfRuntime.importOnlyMeshes && !meshIncluded && gltfRuntime.importMeshesNames) {\n        if (gltfRuntime.importMeshesNames.indexOf(node.name || \"\") !== -1 || gltfRuntime.importMeshesNames.length === 0) {\n            meshIncluded = true;\n        }\n        else {\n            meshIncluded = false;\n        }\n    }\n    else {\n        meshIncluded = true;\n    }\n    if (!node.jointName && meshIncluded) {\n        newNode = importNode(gltfRuntime, node, id);\n        if (newNode !== null) {\n            newNode.id = id;\n            newNode.parent = parent;\n        }\n    }\n    if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n            traverseNodes(gltfRuntime, node.children[i], newNode, meshIncluded);\n        }\n    }\n};\n/**\n * do stuff after buffers, shaders are loaded (e.g. hook up materials, load animations, etc.)\n * @param gltfRuntime\n */\nconst postLoad = (gltfRuntime) => {\n    // Nodes\n    let currentScene = gltfRuntime.currentScene;\n    if (currentScene) {\n        for (let i = 0; i < currentScene.nodes.length; i++) {\n            traverseNodes(gltfRuntime, currentScene.nodes[i], null);\n        }\n    }\n    else {\n        for (const thing in gltfRuntime.scenes) {\n            currentScene = gltfRuntime.scenes[thing];\n            for (let i = 0; i < currentScene.nodes.length; i++) {\n                traverseNodes(gltfRuntime, currentScene.nodes[i], null);\n            }\n        }\n    }\n    // Set animations\n    loadAnimations(gltfRuntime);\n    for (let i = 0; i < gltfRuntime.scene.skeletons.length; i++) {\n        const skeleton = gltfRuntime.scene.skeletons[i];\n        gltfRuntime.scene.beginAnimation(skeleton, 0, Number.MAX_VALUE, true, 1.0);\n    }\n};\n/**\n * onBind shaderrs callback to set uniforms and matrices\n * @param mesh\n * @param gltfRuntime\n * @param unTreatedUniforms\n * @param shaderMaterial\n * @param technique\n * @param material\n * @param onSuccess\n */\nconst onBindShaderMaterial = (mesh, gltfRuntime, unTreatedUniforms, shaderMaterial, technique, material, onSuccess) => {\n    const materialValues = material.values || technique.parameters;\n    for (const unif in unTreatedUniforms) {\n        const uniform = unTreatedUniforms[unif];\n        const type = uniform.type;\n        if (type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT2 || type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT3 || type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT4) {\n            if (uniform.semantic && !uniform.source && !uniform.node) {\n                _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.SetMatrix(gltfRuntime.scene, mesh, uniform, unif, shaderMaterial.getEffect());\n            }\n            else if (uniform.semantic && (uniform.source || uniform.node)) {\n                let source = gltfRuntime.scene.getNodeByName(uniform.source || uniform.node || \"\");\n                if (source === null) {\n                    source = gltfRuntime.scene.getNodeById(uniform.source || uniform.node || \"\");\n                }\n                if (source === null) {\n                    continue;\n                }\n                _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.SetMatrix(gltfRuntime.scene, source, uniform, unif, shaderMaterial.getEffect());\n            }\n        }\n        else {\n            const value = materialValues[technique.uniforms[unif]];\n            if (!value) {\n                continue;\n            }\n            if (type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.SAMPLER_2D) {\n                const texture = gltfRuntime.textures[material.values ? value : uniform.value].babylonTexture;\n                if (texture === null || texture === undefined) {\n                    continue;\n                }\n                shaderMaterial.getEffect().setTexture(unif, texture);\n            }\n            else {\n                _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.SetUniform(shaderMaterial.getEffect(), unif, value, type);\n            }\n        }\n    }\n    onSuccess(shaderMaterial);\n};\n/**\n * Prepare uniforms to send the only one time\n * Loads the appropriate textures\n * @param gltfRuntime\n * @param shaderMaterial\n * @param technique\n * @param material\n */\nconst prepareShaderMaterialUniforms = (gltfRuntime, shaderMaterial, technique, material, unTreatedUniforms) => {\n    const materialValues = material.values || technique.parameters;\n    const techniqueUniforms = technique.uniforms;\n    /**\n     * Prepare values here (not matrices)\n     */\n    for (const unif in unTreatedUniforms) {\n        const uniform = unTreatedUniforms[unif];\n        const type = uniform.type;\n        let value = materialValues[techniqueUniforms[unif]];\n        if (value === undefined) {\n            // In case the value is the same for all materials\n            value = uniform.value;\n        }\n        if (!value) {\n            continue;\n        }\n        const onLoadTexture = (uniformName) => {\n            return (texture) => {\n                if (uniform.value && uniformName) {\n                    // Static uniform\n                    shaderMaterial.setTexture(uniformName, texture);\n                    delete unTreatedUniforms[uniformName];\n                }\n            };\n        };\n        // Texture (sampler2D)\n        if (type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.SAMPLER_2D) {\n            GLTFLoaderExtension.LoadTextureAsync(gltfRuntime, material.values ? value : uniform.value, onLoadTexture(unif), () => onLoadTexture(null));\n        }\n        // Others\n        else {\n            if (uniform.value && _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.SetUniform(shaderMaterial, unif, material.values ? value : uniform.value, type)) {\n                // Static uniform\n                delete unTreatedUniforms[unif];\n            }\n        }\n    }\n};\n/**\n * Shader compilation failed\n * @param program\n * @param shaderMaterial\n * @param onError\n * @returns callback when shader is compiled\n */\nconst onShaderCompileError = (program, shaderMaterial, onError) => {\n    return (effect, error) => {\n        shaderMaterial.dispose(true);\n        onError(\"Cannot compile program named \" + program.name + \". Error: \" + error + \". Default material will be applied\");\n    };\n};\n/**\n * Shader compilation success\n * @param gltfRuntime\n * @param shaderMaterial\n * @param technique\n * @param material\n * @param unTreatedUniforms\n * @param onSuccess\n * @returns callback when shader is compiled\n */\nconst onShaderCompileSuccess = (gltfRuntime, shaderMaterial, technique, material, unTreatedUniforms, onSuccess) => {\n    return (_) => {\n        prepareShaderMaterialUniforms(gltfRuntime, shaderMaterial, technique, material, unTreatedUniforms);\n        shaderMaterial.onBind = (mesh) => {\n            onBindShaderMaterial(mesh, gltfRuntime, unTreatedUniforms, shaderMaterial, technique, material, onSuccess);\n        };\n    };\n};\n/**\n * Returns the appropriate uniform if already handled by babylon\n * @param tokenizer\n * @param technique\n * @param unTreatedUniforms\n * @returns the name of the uniform handled by babylon\n */\nconst parseShaderUniforms = (tokenizer, technique, unTreatedUniforms) => {\n    for (const unif in technique.uniforms) {\n        const uniform = technique.uniforms[unif];\n        const uniformParameter = technique.parameters[uniform];\n        if (tokenizer.currentIdentifier === unif) {\n            if (uniformParameter.semantic && !uniformParameter.source && !uniformParameter.node) {\n                const transformIndex = glTFTransforms.indexOf(uniformParameter.semantic);\n                if (transformIndex !== -1) {\n                    delete unTreatedUniforms[unif];\n                    return babylonTransforms[transformIndex];\n                }\n            }\n        }\n    }\n    return tokenizer.currentIdentifier;\n};\n/**\n * All shaders loaded. Create materials one by one\n * @param gltfRuntime\n */\nconst importMaterials = (gltfRuntime) => {\n    // Create materials\n    for (const mat in gltfRuntime.materials) {\n        GLTFLoaderExtension.LoadMaterialAsync(gltfRuntime, mat, () => { }, () => { });\n    }\n};\n/**\n * Implementation of the base glTF spec\n * @internal\n */\nclass GLTFLoaderBase {\n    static CreateRuntime(parsedData, scene, rootUrl) {\n        const gltfRuntime = {\n            extensions: {},\n            accessors: {},\n            buffers: {},\n            bufferViews: {},\n            meshes: {},\n            lights: {},\n            cameras: {},\n            nodes: {},\n            images: {},\n            textures: {},\n            shaders: {},\n            programs: {},\n            samplers: {},\n            techniques: {},\n            materials: {},\n            animations: {},\n            skins: {},\n            extensionsUsed: [],\n            scenes: {},\n            buffersCount: 0,\n            shaderscount: 0,\n            scene: scene,\n            rootUrl: rootUrl,\n            loadedBufferCount: 0,\n            loadedBufferViews: {},\n            loadedShaderCount: 0,\n            importOnlyMeshes: false,\n            dummyNodes: [],\n            assetContainer: null,\n        };\n        // Parse\n        if (parsedData.extensions) {\n            parseObject(parsedData.extensions, \"extensions\", gltfRuntime);\n        }\n        if (parsedData.extensionsUsed) {\n            parseObject(parsedData.extensionsUsed, \"extensionsUsed\", gltfRuntime);\n        }\n        if (parsedData.buffers) {\n            parseBuffers(parsedData.buffers, gltfRuntime);\n        }\n        if (parsedData.bufferViews) {\n            parseObject(parsedData.bufferViews, \"bufferViews\", gltfRuntime);\n        }\n        if (parsedData.accessors) {\n            parseObject(parsedData.accessors, \"accessors\", gltfRuntime);\n        }\n        if (parsedData.meshes) {\n            parseObject(parsedData.meshes, \"meshes\", gltfRuntime);\n        }\n        if (parsedData.lights) {\n            parseObject(parsedData.lights, \"lights\", gltfRuntime);\n        }\n        if (parsedData.cameras) {\n            parseObject(parsedData.cameras, \"cameras\", gltfRuntime);\n        }\n        if (parsedData.nodes) {\n            parseObject(parsedData.nodes, \"nodes\", gltfRuntime);\n        }\n        if (parsedData.images) {\n            parseObject(parsedData.images, \"images\", gltfRuntime);\n        }\n        if (parsedData.textures) {\n            parseObject(parsedData.textures, \"textures\", gltfRuntime);\n        }\n        if (parsedData.shaders) {\n            parseShaders(parsedData.shaders, gltfRuntime);\n        }\n        if (parsedData.programs) {\n            parseObject(parsedData.programs, \"programs\", gltfRuntime);\n        }\n        if (parsedData.samplers) {\n            parseObject(parsedData.samplers, \"samplers\", gltfRuntime);\n        }\n        if (parsedData.techniques) {\n            parseObject(parsedData.techniques, \"techniques\", gltfRuntime);\n        }\n        if (parsedData.materials) {\n            parseObject(parsedData.materials, \"materials\", gltfRuntime);\n        }\n        if (parsedData.animations) {\n            parseObject(parsedData.animations, \"animations\", gltfRuntime);\n        }\n        if (parsedData.skins) {\n            parseObject(parsedData.skins, \"skins\", gltfRuntime);\n        }\n        if (parsedData.scenes) {\n            gltfRuntime.scenes = parsedData.scenes;\n        }\n        if (parsedData.scene && parsedData.scenes) {\n            gltfRuntime.currentScene = parsedData.scenes[parsedData.scene];\n        }\n        return gltfRuntime;\n    }\n    static LoadBufferAsync(gltfRuntime, id, onSuccess, onError, onProgress) {\n        const buffer = gltfRuntime.buffers[id];\n        if (_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.IsBase64(buffer.uri)) {\n            setTimeout(() => onSuccess(new Uint8Array(_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.DecodeBase64(buffer.uri))));\n        }\n        else {\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.LoadFile(gltfRuntime.rootUrl + buffer.uri, (data) => onSuccess(new Uint8Array(data)), onProgress, undefined, true, (request) => {\n                if (request) {\n                    onError(request.status + \" \" + request.statusText);\n                }\n            });\n        }\n    }\n    static LoadTextureBufferAsync(gltfRuntime, id, onSuccess, onError) {\n        const texture = gltfRuntime.textures[id];\n        if (!texture || !texture.source) {\n            onError(\"\");\n            return;\n        }\n        if (texture.babylonTexture) {\n            onSuccess(null);\n            return;\n        }\n        const source = gltfRuntime.images[texture.source];\n        if (_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.IsBase64(source.uri)) {\n            setTimeout(() => onSuccess(new Uint8Array(_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.DecodeBase64(source.uri))));\n        }\n        else {\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.LoadFile(gltfRuntime.rootUrl + source.uri, (data) => onSuccess(new Uint8Array(data)), undefined, undefined, true, (request) => {\n                if (request) {\n                    onError(request.status + \" \" + request.statusText);\n                }\n            });\n        }\n    }\n    static CreateTextureAsync(gltfRuntime, id, buffer, onSuccess) {\n        const texture = gltfRuntime.textures[id];\n        if (texture.babylonTexture) {\n            onSuccess(texture.babylonTexture);\n            return;\n        }\n        const sampler = gltfRuntime.samplers[texture.sampler];\n        const createMipMaps = sampler.minFilter === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.NEAREST_MIPMAP_NEAREST ||\n            sampler.minFilter === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.NEAREST_MIPMAP_LINEAR ||\n            sampler.minFilter === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.LINEAR_MIPMAP_NEAREST ||\n            sampler.minFilter === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.LINEAR_MIPMAP_LINEAR;\n        const samplingMode = _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_14__.Texture.BILINEAR_SAMPLINGMODE;\n        const blob = buffer == null ? new Blob() : new Blob([buffer]);\n        const blobURL = URL.createObjectURL(blob);\n        const revokeBlobURL = () => URL.revokeObjectURL(blobURL);\n        const newTexture = new _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_14__.Texture(blobURL, gltfRuntime.scene, !createMipMaps, true, samplingMode, revokeBlobURL, revokeBlobURL);\n        if (sampler.wrapS !== undefined) {\n            newTexture.wrapU = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetWrapMode(sampler.wrapS);\n        }\n        if (sampler.wrapT !== undefined) {\n            newTexture.wrapV = _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_25__.GLTFUtils.GetWrapMode(sampler.wrapT);\n        }\n        newTexture.name = id;\n        texture.babylonTexture = newTexture;\n        onSuccess(newTexture);\n    }\n    static LoadShaderStringAsync(gltfRuntime, id, onSuccess, onError) {\n        const shader = gltfRuntime.shaders[id];\n        if (_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.IsBase64(shader.uri)) {\n            const shaderString = atob(shader.uri.split(\",\")[1]);\n            if (onSuccess) {\n                onSuccess(shaderString);\n            }\n        }\n        else {\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.LoadFile(gltfRuntime.rootUrl + shader.uri, onSuccess, undefined, undefined, false, (request) => {\n                if (request && onError) {\n                    onError(request.status + \" \" + request.statusText);\n                }\n            });\n        }\n    }\n    static LoadMaterialAsync(gltfRuntime, id, onSuccess, onError) {\n        const material = gltfRuntime.materials[id];\n        if (!material.technique) {\n            if (onError) {\n                onError(\"No technique found.\");\n            }\n            return;\n        }\n        const technique = gltfRuntime.techniques[material.technique];\n        if (!technique) {\n            gltfRuntime.scene._blockEntityCollection = !!gltfRuntime.assetContainer;\n            const defaultMaterial = new _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_12__.StandardMaterial(id, gltfRuntime.scene);\n            defaultMaterial._parentContainer = gltfRuntime.assetContainer;\n            gltfRuntime.scene._blockEntityCollection = false;\n            defaultMaterial.diffuseColor = new _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3(0.5, 0.5, 0.5);\n            defaultMaterial.sideOrientation = _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.CounterClockWiseSideOrientation;\n            onSuccess(defaultMaterial);\n            return;\n        }\n        const program = gltfRuntime.programs[technique.program];\n        const states = technique.states;\n        const vertexShader = _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__.Effect.ShadersStore[program.vertexShader + \"VertexShader\"];\n        const pixelShader = _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__.Effect.ShadersStore[program.fragmentShader + \"PixelShader\"];\n        let newVertexShader = \"\";\n        let newPixelShader = \"\";\n        const vertexTokenizer = new Tokenizer(vertexShader);\n        const pixelTokenizer = new Tokenizer(pixelShader);\n        const unTreatedUniforms = {};\n        const uniforms = [];\n        const attributes = [];\n        const samplers = [];\n        // Fill uniform, sampler2D and attributes\n        for (const unif in technique.uniforms) {\n            const uniform = technique.uniforms[unif];\n            const uniformParameter = technique.parameters[uniform];\n            unTreatedUniforms[unif] = uniformParameter;\n            if (uniformParameter.semantic && !uniformParameter.node && !uniformParameter.source) {\n                const transformIndex = glTFTransforms.indexOf(uniformParameter.semantic);\n                if (transformIndex !== -1) {\n                    uniforms.push(babylonTransforms[transformIndex]);\n                    delete unTreatedUniforms[unif];\n                }\n                else {\n                    uniforms.push(unif);\n                }\n            }\n            else if (uniformParameter.type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.SAMPLER_2D) {\n                samplers.push(unif);\n            }\n            else {\n                uniforms.push(unif);\n            }\n        }\n        for (const attr in technique.attributes) {\n            const attribute = technique.attributes[attr];\n            const attributeParameter = technique.parameters[attribute];\n            if (attributeParameter.semantic) {\n                const name = getAttribute(attributeParameter);\n                if (name) {\n                    attributes.push(name);\n                }\n            }\n        }\n        // Configure vertex shader\n        while (!vertexTokenizer.isEnd() && vertexTokenizer.getNextToken()) {\n            const tokenType = vertexTokenizer.currentToken;\n            if (tokenType !== ETokenType.IDENTIFIER) {\n                newVertexShader += vertexTokenizer.currentString;\n                continue;\n            }\n            let foundAttribute = false;\n            for (const attr in technique.attributes) {\n                const attribute = technique.attributes[attr];\n                const attributeParameter = technique.parameters[attribute];\n                if (vertexTokenizer.currentIdentifier === attr && attributeParameter.semantic) {\n                    newVertexShader += getAttribute(attributeParameter);\n                    foundAttribute = true;\n                    break;\n                }\n            }\n            if (foundAttribute) {\n                continue;\n            }\n            newVertexShader += parseShaderUniforms(vertexTokenizer, technique, unTreatedUniforms);\n        }\n        // Configure pixel shader\n        while (!pixelTokenizer.isEnd() && pixelTokenizer.getNextToken()) {\n            const tokenType = pixelTokenizer.currentToken;\n            if (tokenType !== ETokenType.IDENTIFIER) {\n                newPixelShader += pixelTokenizer.currentString;\n                continue;\n            }\n            newPixelShader += parseShaderUniforms(pixelTokenizer, technique, unTreatedUniforms);\n        }\n        // Create shader material\n        const shaderPath = {\n            vertex: program.vertexShader + id,\n            fragment: program.fragmentShader + id,\n        };\n        const options = {\n            attributes: attributes,\n            uniforms: uniforms,\n            samplers: samplers,\n            needAlphaBlending: states && states.enable && states.enable.indexOf(3042) !== -1,\n        };\n        _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__.Effect.ShadersStore[program.vertexShader + id + \"VertexShader\"] = newVertexShader;\n        _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__.Effect.ShadersStore[program.fragmentShader + id + \"PixelShader\"] = newPixelShader;\n        const shaderMaterial = new _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_13__.ShaderMaterial(id, gltfRuntime.scene, shaderPath, options);\n        shaderMaterial.onError = onShaderCompileError(program, shaderMaterial, onError);\n        shaderMaterial.onCompiled = onShaderCompileSuccess(gltfRuntime, shaderMaterial, technique, material, unTreatedUniforms, onSuccess);\n        shaderMaterial.sideOrientation = _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.CounterClockWiseSideOrientation;\n        if (states && states.functions) {\n            const functions = states.functions;\n            if (functions.cullFace && functions.cullFace[0] !== _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ECullingType.BACK) {\n                shaderMaterial.backFaceCulling = false;\n            }\n            const blendFunc = functions.blendFuncSeparate;\n            if (blendFunc) {\n                if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.SRC_ALPHA &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE_MINUS_SRC_ALPHA &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_COMBINE;\n                }\n                else if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ZERO &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_ONEONE;\n                }\n                else if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.SRC_ALPHA &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ZERO &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_ADD;\n                }\n                else if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ZERO &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE_MINUS_SRC_COLOR &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_SUBTRACT;\n                }\n                else if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.DST_COLOR &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ZERO &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_MULTIPLY;\n                }\n                else if (blendFunc[0] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.SRC_ALPHA &&\n                    blendFunc[1] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE_MINUS_SRC_COLOR &&\n                    blendFunc[2] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE &&\n                    blendFunc[3] === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EBlendingFunction.ONE) {\n                    shaderMaterial.alphaMode = _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_27__.Constants.ALPHA_MAXIMIZED;\n                }\n            }\n        }\n    }\n}\n/**\n * glTF V1 Loader\n * @internal\n * @deprecated\n */\nclass GLTFLoader {\n    static RegisterExtension(extension) {\n        if (GLTFLoader.Extensions[extension.name]) {\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error('Tool with the same name \"' + extension.name + '\" already exists');\n            return;\n        }\n        GLTFLoader.Extensions[extension.name] = extension;\n    }\n    dispose() {\n        // do nothing\n    }\n    _importMeshAsync(meshesNames, scene, data, rootUrl, assetContainer, onSuccess, onProgress, onError) {\n        scene.useRightHandedSystem = true;\n        GLTFLoaderExtension.LoadRuntimeAsync(scene, data, rootUrl, (gltfRuntime) => {\n            gltfRuntime.assetContainer = assetContainer;\n            gltfRuntime.importOnlyMeshes = true;\n            if (meshesNames === \"\") {\n                gltfRuntime.importMeshesNames = [];\n            }\n            else if (typeof meshesNames === \"string\") {\n                gltfRuntime.importMeshesNames = [meshesNames];\n            }\n            else if (meshesNames && !(meshesNames instanceof Array)) {\n                gltfRuntime.importMeshesNames = [meshesNames];\n            }\n            else {\n                gltfRuntime.importMeshesNames = [];\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Warn(\"Argument meshesNames must be of type string or string[]\");\n            }\n            // Create nodes\n            this._createNodes(gltfRuntime);\n            const meshes = [];\n            const skeletons = [];\n            // Fill arrays of meshes and skeletons\n            for (const nde in gltfRuntime.nodes) {\n                const node = gltfRuntime.nodes[nde];\n                if (node.babylonNode instanceof _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_19__.AbstractMesh) {\n                    meshes.push(node.babylonNode);\n                }\n            }\n            for (const skl in gltfRuntime.skins) {\n                const skin = gltfRuntime.skins[skl];\n                if (skin.babylonSkeleton instanceof _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_8__.Skeleton) {\n                    skeletons.push(skin.babylonSkeleton);\n                }\n            }\n            // Load buffers, shaders, materials, etc.\n            this._loadBuffersAsync(gltfRuntime, () => {\n                this._loadShadersAsync(gltfRuntime, () => {\n                    importMaterials(gltfRuntime);\n                    postLoad(gltfRuntime);\n                    if (!_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader.IncrementalLoading && onSuccess) {\n                        onSuccess(meshes, skeletons);\n                    }\n                });\n            });\n            if (_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader.IncrementalLoading && onSuccess) {\n                onSuccess(meshes, skeletons);\n            }\n        }, onError);\n        return true;\n    }\n    /**\n     * Imports one or more meshes from a loaded gltf file and adds them to the scene\n     * @param meshesNames a string or array of strings of the mesh names that should be loaded from the file\n     * @param scene the scene the meshes should be added to\n     * @param assetContainer defines the asset container to use (can be null)\n     * @param data gltf data containing information of the meshes in a loaded file\n     * @param rootUrl root url to load from\n     * @param onProgress event that fires when loading progress has occured\n     * @returns a promise containg the loaded meshes, particles, skeletons and animations\n     */\n    importMeshAsync(meshesNames, scene, assetContainer, data, rootUrl, onProgress) {\n        return new Promise((resolve, reject) => {\n            this._importMeshAsync(meshesNames, scene, data, rootUrl, assetContainer, (meshes, skeletons) => {\n                resolve({\n                    meshes: meshes,\n                    particleSystems: [],\n                    skeletons: skeletons,\n                    animationGroups: [],\n                    lights: [],\n                    transformNodes: [],\n                    geometries: [],\n                    spriteManagers: [],\n                });\n            }, onProgress, (message) => {\n                reject(new Error(message));\n            });\n        });\n    }\n    _loadAsync(scene, data, rootUrl, onSuccess, onProgress, onError) {\n        scene.useRightHandedSystem = true;\n        GLTFLoaderExtension.LoadRuntimeAsync(scene, data, rootUrl, (gltfRuntime) => {\n            // Load runtime extensios\n            GLTFLoaderExtension.LoadRuntimeExtensionsAsync(gltfRuntime, () => {\n                // Create nodes\n                this._createNodes(gltfRuntime);\n                // Load buffers, shaders, materials, etc.\n                this._loadBuffersAsync(gltfRuntime, () => {\n                    this._loadShadersAsync(gltfRuntime, () => {\n                        importMaterials(gltfRuntime);\n                        postLoad(gltfRuntime);\n                        if (!_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader.IncrementalLoading) {\n                            onSuccess();\n                        }\n                    });\n                });\n                if (_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader.IncrementalLoading) {\n                    onSuccess();\n                }\n            }, onError);\n        }, onError);\n    }\n    /**\n     * Imports all objects from a loaded gltf file and adds them to the scene\n     * @param scene the scene the objects should be added to\n     * @param data gltf data containing information of the meshes in a loaded file\n     * @param rootUrl root url to load from\n     * @param onProgress event that fires when loading progress has occured\n     * @returns a promise which completes when objects have been loaded to the scene\n     */\n    loadAsync(scene, data, rootUrl, onProgress) {\n        return new Promise((resolve, reject) => {\n            this._loadAsync(scene, data, rootUrl, () => {\n                resolve();\n            }, onProgress, (message) => {\n                reject(new Error(message));\n            });\n        });\n    }\n    _loadShadersAsync(gltfRuntime, onload) {\n        let hasShaders = false;\n        const processShader = (sha, shader) => {\n            GLTFLoaderExtension.LoadShaderStringAsync(gltfRuntime, sha, (shaderString) => {\n                if (shaderString instanceof ArrayBuffer) {\n                    return;\n                }\n                gltfRuntime.loadedShaderCount++;\n                if (shaderString) {\n                    _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_9__.Effect.ShadersStore[sha + (shader.type === _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EShaderType.VERTEX ? \"VertexShader\" : \"PixelShader\")] = shaderString;\n                }\n                if (gltfRuntime.loadedShaderCount === gltfRuntime.shaderscount) {\n                    onload();\n                }\n            }, () => {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error(\"Error when loading shader program named \" + sha + \" located at \" + shader.uri);\n            });\n        };\n        for (const sha in gltfRuntime.shaders) {\n            hasShaders = true;\n            const shader = gltfRuntime.shaders[sha];\n            if (shader) {\n                processShader.bind(this, sha, shader)();\n            }\n            else {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error(\"No shader named: \" + sha);\n            }\n        }\n        if (!hasShaders) {\n            onload();\n        }\n    }\n    _loadBuffersAsync(gltfRuntime, onLoad) {\n        let hasBuffers = false;\n        const processBuffer = (buf, buffer) => {\n            GLTFLoaderExtension.LoadBufferAsync(gltfRuntime, buf, (bufferView) => {\n                gltfRuntime.loadedBufferCount++;\n                if (bufferView) {\n                    if (bufferView.byteLength != gltfRuntime.buffers[buf].byteLength) {\n                        _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error(\"Buffer named \" + buf + \" is length \" + bufferView.byteLength + \". Expected: \" + buffer.byteLength); // Improve error message\n                    }\n                    gltfRuntime.loadedBufferViews[buf] = bufferView;\n                }\n                if (gltfRuntime.loadedBufferCount === gltfRuntime.buffersCount) {\n                    onLoad();\n                }\n            }, () => {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error(\"Error when loading buffer named \" + buf + \" located at \" + buffer.uri);\n            });\n        };\n        for (const buf in gltfRuntime.buffers) {\n            hasBuffers = true;\n            const buffer = gltfRuntime.buffers[buf];\n            if (buffer) {\n                processBuffer.bind(this, buf, buffer)();\n            }\n            else {\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Error(\"No buffer named: \" + buf);\n            }\n        }\n        if (!hasBuffers) {\n            onLoad();\n        }\n    }\n    _createNodes(gltfRuntime) {\n        let currentScene = gltfRuntime.currentScene;\n        if (currentScene) {\n            // Only one scene even if multiple scenes are defined\n            for (let i = 0; i < currentScene.nodes.length; i++) {\n                traverseNodes(gltfRuntime, currentScene.nodes[i], null);\n            }\n        }\n        else {\n            // Load all scenes\n            for (const thing in gltfRuntime.scenes) {\n                currentScene = gltfRuntime.scenes[thing];\n                for (let i = 0; i < currentScene.nodes.length; i++) {\n                    traverseNodes(gltfRuntime, currentScene.nodes[i], null);\n                }\n            }\n        }\n    }\n}\nGLTFLoader.Extensions = {};\n/** @internal */\nclass GLTFLoaderExtension {\n    constructor(name) {\n        this._name = name;\n    }\n    get name() {\n        return this._name;\n    }\n    /**\n     * Defines an override for loading the runtime\n     * Return true to stop further extensions from loading the runtime\n     * @param scene\n     * @param data\n     * @param rootUrl\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from loading the runtime\n     */\n    loadRuntimeAsync(scene, data, rootUrl, onSuccess, onError) {\n        return false;\n    }\n    /**\n     * Defines an onverride for creating gltf runtime\n     * Return true to stop further extensions from creating the runtime\n     * @param gltfRuntime\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from creating the runtime\n     */\n    loadRuntimeExtensionsAsync(gltfRuntime, onSuccess, onError) {\n        return false;\n    }\n    /**\n     * Defines an override for loading buffers\n     * Return true to stop further extensions from loading this buffer\n     * @param gltfRuntime\n     * @param id\n     * @param onSuccess\n     * @param onError\n     * @param onProgress\n     * @returns true to stop further extensions from loading this buffer\n     */\n    loadBufferAsync(gltfRuntime, id, onSuccess, onError, onProgress) {\n        return false;\n    }\n    /**\n     * Defines an override for loading texture buffers\n     * Return true to stop further extensions from loading this texture data\n     * @param gltfRuntime\n     * @param id\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from loading this texture data\n     */\n    loadTextureBufferAsync(gltfRuntime, id, onSuccess, onError) {\n        return false;\n    }\n    /**\n     * Defines an override for creating textures\n     * Return true to stop further extensions from loading this texture\n     * @param gltfRuntime\n     * @param id\n     * @param buffer\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from loading this texture\n     */\n    createTextureAsync(gltfRuntime, id, buffer, onSuccess, onError) {\n        return false;\n    }\n    /**\n     * Defines an override for loading shader strings\n     * Return true to stop further extensions from loading this shader data\n     * @param gltfRuntime\n     * @param id\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from loading this shader data\n     */\n    loadShaderStringAsync(gltfRuntime, id, onSuccess, onError) {\n        return false;\n    }\n    /**\n     * Defines an override for loading materials\n     * Return true to stop further extensions from loading this material\n     * @param gltfRuntime\n     * @param id\n     * @param onSuccess\n     * @param onError\n     * @returns true to stop further extensions from loading this material\n     */\n    loadMaterialAsync(gltfRuntime, id, onSuccess, onError) {\n        return false;\n    }\n    // ---------\n    // Utilities\n    // ---------\n    static LoadRuntimeAsync(scene, data, rootUrl, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadRuntimeAsync(scene, data, rootUrl, onSuccess, onError);\n        }, () => {\n            setTimeout(() => {\n                if (!onSuccess) {\n                    return;\n                }\n                onSuccess(GLTFLoaderBase.CreateRuntime(data.json, scene, rootUrl));\n            });\n        });\n    }\n    static LoadRuntimeExtensionsAsync(gltfRuntime, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadRuntimeExtensionsAsync(gltfRuntime, onSuccess, onError);\n        }, () => {\n            setTimeout(() => {\n                onSuccess();\n            });\n        });\n    }\n    static LoadBufferAsync(gltfRuntime, id, onSuccess, onError, onProgress) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadBufferAsync(gltfRuntime, id, onSuccess, onError, onProgress);\n        }, () => {\n            GLTFLoaderBase.LoadBufferAsync(gltfRuntime, id, onSuccess, onError, onProgress);\n        });\n    }\n    static LoadTextureAsync(gltfRuntime, id, onSuccess, onError) {\n        GLTFLoaderExtension._LoadTextureBufferAsync(gltfRuntime, id, (buffer) => {\n            if (buffer) {\n                GLTFLoaderExtension._CreateTextureAsync(gltfRuntime, id, buffer, onSuccess, onError);\n            }\n        }, onError);\n    }\n    static LoadShaderStringAsync(gltfRuntime, id, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadShaderStringAsync(gltfRuntime, id, onSuccess, onError);\n        }, () => {\n            GLTFLoaderBase.LoadShaderStringAsync(gltfRuntime, id, onSuccess, onError);\n        });\n    }\n    static LoadMaterialAsync(gltfRuntime, id, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadMaterialAsync(gltfRuntime, id, onSuccess, onError);\n        }, () => {\n            GLTFLoaderBase.LoadMaterialAsync(gltfRuntime, id, onSuccess, onError);\n        });\n    }\n    static _LoadTextureBufferAsync(gltfRuntime, id, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.loadTextureBufferAsync(gltfRuntime, id, onSuccess, onError);\n        }, () => {\n            GLTFLoaderBase.LoadTextureBufferAsync(gltfRuntime, id, onSuccess, onError);\n        });\n    }\n    static _CreateTextureAsync(gltfRuntime, id, buffer, onSuccess, onError) {\n        GLTFLoaderExtension._ApplyExtensions((loaderExtension) => {\n            return loaderExtension.createTextureAsync(gltfRuntime, id, buffer, onSuccess, onError);\n        }, () => {\n            GLTFLoaderBase.CreateTextureAsync(gltfRuntime, id, buffer, onSuccess);\n        });\n    }\n    static _ApplyExtensions(func, defaultFunc) {\n        for (const extensionName in GLTFLoader.Extensions) {\n            const loaderExtension = GLTFLoader.Extensions[extensionName];\n            if (func(loaderExtension)) {\n                return;\n            }\n        }\n        defaultFunc();\n    }\n}\n_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_26__.GLTFFileLoader._CreateGLTF1Loader = () => new GLTFLoader();\n//# sourceMappingURL=glTFLoader.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EBlendingFunction: () => (/* binding */ EBlendingFunction),\n/* harmony export */   EComponentType: () => (/* binding */ EComponentType),\n/* harmony export */   ECullingType: () => (/* binding */ ECullingType),\n/* harmony export */   EParameterType: () => (/* binding */ EParameterType),\n/* harmony export */   EShaderType: () => (/* binding */ EShaderType),\n/* harmony export */   ETextureFilterType: () => (/* binding */ ETextureFilterType),\n/* harmony export */   ETextureFormat: () => (/* binding */ ETextureFormat),\n/* harmony export */   ETextureWrapMode: () => (/* binding */ ETextureWrapMode)\n/* harmony export */ });\n/**\n * Enums\n * @internal\n */\nvar EComponentType;\n(function (EComponentType) {\n    EComponentType[EComponentType[\"BYTE\"] = 5120] = \"BYTE\";\n    EComponentType[EComponentType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    EComponentType[EComponentType[\"SHORT\"] = 5122] = \"SHORT\";\n    EComponentType[EComponentType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    EComponentType[EComponentType[\"FLOAT\"] = 5126] = \"FLOAT\";\n})(EComponentType || (EComponentType = {}));\n/** @internal */\nvar EShaderType;\n(function (EShaderType) {\n    EShaderType[EShaderType[\"FRAGMENT\"] = 35632] = \"FRAGMENT\";\n    EShaderType[EShaderType[\"VERTEX\"] = 35633] = \"VERTEX\";\n})(EShaderType || (EShaderType = {}));\n/** @internal */\nvar EParameterType;\n(function (EParameterType) {\n    EParameterType[EParameterType[\"BYTE\"] = 5120] = \"BYTE\";\n    EParameterType[EParameterType[\"UNSIGNED_BYTE\"] = 5121] = \"UNSIGNED_BYTE\";\n    EParameterType[EParameterType[\"SHORT\"] = 5122] = \"SHORT\";\n    EParameterType[EParameterType[\"UNSIGNED_SHORT\"] = 5123] = \"UNSIGNED_SHORT\";\n    EParameterType[EParameterType[\"INT\"] = 5124] = \"INT\";\n    EParameterType[EParameterType[\"UNSIGNED_INT\"] = 5125] = \"UNSIGNED_INT\";\n    EParameterType[EParameterType[\"FLOAT\"] = 5126] = \"FLOAT\";\n    EParameterType[EParameterType[\"FLOAT_VEC2\"] = 35664] = \"FLOAT_VEC2\";\n    EParameterType[EParameterType[\"FLOAT_VEC3\"] = 35665] = \"FLOAT_VEC3\";\n    EParameterType[EParameterType[\"FLOAT_VEC4\"] = 35666] = \"FLOAT_VEC4\";\n    EParameterType[EParameterType[\"INT_VEC2\"] = 35667] = \"INT_VEC2\";\n    EParameterType[EParameterType[\"INT_VEC3\"] = 35668] = \"INT_VEC3\";\n    EParameterType[EParameterType[\"INT_VEC4\"] = 35669] = \"INT_VEC4\";\n    EParameterType[EParameterType[\"BOOL\"] = 35670] = \"BOOL\";\n    EParameterType[EParameterType[\"BOOL_VEC2\"] = 35671] = \"BOOL_VEC2\";\n    EParameterType[EParameterType[\"BOOL_VEC3\"] = 35672] = \"BOOL_VEC3\";\n    EParameterType[EParameterType[\"BOOL_VEC4\"] = 35673] = \"BOOL_VEC4\";\n    EParameterType[EParameterType[\"FLOAT_MAT2\"] = 35674] = \"FLOAT_MAT2\";\n    EParameterType[EParameterType[\"FLOAT_MAT3\"] = 35675] = \"FLOAT_MAT3\";\n    EParameterType[EParameterType[\"FLOAT_MAT4\"] = 35676] = \"FLOAT_MAT4\";\n    EParameterType[EParameterType[\"SAMPLER_2D\"] = 35678] = \"SAMPLER_2D\";\n})(EParameterType || (EParameterType = {}));\n/** @internal */\nvar ETextureWrapMode;\n(function (ETextureWrapMode) {\n    ETextureWrapMode[ETextureWrapMode[\"CLAMP_TO_EDGE\"] = 33071] = \"CLAMP_TO_EDGE\";\n    ETextureWrapMode[ETextureWrapMode[\"MIRRORED_REPEAT\"] = 33648] = \"MIRRORED_REPEAT\";\n    ETextureWrapMode[ETextureWrapMode[\"REPEAT\"] = 10497] = \"REPEAT\";\n})(ETextureWrapMode || (ETextureWrapMode = {}));\n/** @internal */\nvar ETextureFilterType;\n(function (ETextureFilterType) {\n    ETextureFilterType[ETextureFilterType[\"NEAREST\"] = 9728] = \"NEAREST\";\n    ETextureFilterType[ETextureFilterType[\"LINEAR\"] = 9728] = \"LINEAR\";\n    ETextureFilterType[ETextureFilterType[\"NEAREST_MIPMAP_NEAREST\"] = 9984] = \"NEAREST_MIPMAP_NEAREST\";\n    ETextureFilterType[ETextureFilterType[\"LINEAR_MIPMAP_NEAREST\"] = 9985] = \"LINEAR_MIPMAP_NEAREST\";\n    ETextureFilterType[ETextureFilterType[\"NEAREST_MIPMAP_LINEAR\"] = 9986] = \"NEAREST_MIPMAP_LINEAR\";\n    ETextureFilterType[ETextureFilterType[\"LINEAR_MIPMAP_LINEAR\"] = 9987] = \"LINEAR_MIPMAP_LINEAR\";\n})(ETextureFilterType || (ETextureFilterType = {}));\n/** @internal */\nvar ETextureFormat;\n(function (ETextureFormat) {\n    ETextureFormat[ETextureFormat[\"ALPHA\"] = 6406] = \"ALPHA\";\n    ETextureFormat[ETextureFormat[\"RGB\"] = 6407] = \"RGB\";\n    ETextureFormat[ETextureFormat[\"RGBA\"] = 6408] = \"RGBA\";\n    ETextureFormat[ETextureFormat[\"LUMINANCE\"] = 6409] = \"LUMINANCE\";\n    ETextureFormat[ETextureFormat[\"LUMINANCE_ALPHA\"] = 6410] = \"LUMINANCE_ALPHA\";\n})(ETextureFormat || (ETextureFormat = {}));\n/** @internal */\nvar ECullingType;\n(function (ECullingType) {\n    ECullingType[ECullingType[\"FRONT\"] = 1028] = \"FRONT\";\n    ECullingType[ECullingType[\"BACK\"] = 1029] = \"BACK\";\n    ECullingType[ECullingType[\"FRONT_AND_BACK\"] = 1032] = \"FRONT_AND_BACK\";\n})(ECullingType || (ECullingType = {}));\n/** @internal */\nvar EBlendingFunction;\n(function (EBlendingFunction) {\n    EBlendingFunction[EBlendingFunction[\"ZERO\"] = 0] = \"ZERO\";\n    EBlendingFunction[EBlendingFunction[\"ONE\"] = 1] = \"ONE\";\n    EBlendingFunction[EBlendingFunction[\"SRC_COLOR\"] = 768] = \"SRC_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_SRC_COLOR\"] = 769] = \"ONE_MINUS_SRC_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"DST_COLOR\"] = 774] = \"DST_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_DST_COLOR\"] = 775] = \"ONE_MINUS_DST_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"SRC_ALPHA\"] = 770] = \"SRC_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_SRC_ALPHA\"] = 771] = \"ONE_MINUS_SRC_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"DST_ALPHA\"] = 772] = \"DST_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_DST_ALPHA\"] = 773] = \"ONE_MINUS_DST_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"CONSTANT_COLOR\"] = 32769] = \"CONSTANT_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_CONSTANT_COLOR\"] = 32770] = \"ONE_MINUS_CONSTANT_COLOR\";\n    EBlendingFunction[EBlendingFunction[\"CONSTANT_ALPHA\"] = 32771] = \"CONSTANT_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"ONE_MINUS_CONSTANT_ALPHA\"] = 32772] = \"ONE_MINUS_CONSTANT_ALPHA\";\n    EBlendingFunction[EBlendingFunction[\"SRC_ALPHA_SATURATE\"] = 776] = \"SRC_ALPHA_SATURATE\";\n})(EBlendingFunction || (EBlendingFunction = {}));\n//# sourceMappingURL=glTFLoaderInterfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js ***!
  \*********************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFUtils: () => (/* binding */ GLTFUtils)\n/* harmony export */ });\n/* harmony import */ var _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFLoaderInterfaces.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Materials/effect.js */ \"@babylonjs/core/Materials/effect.js\");\n/* harmony import */ var _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Materials/shaderMaterial.js */ \"@babylonjs/core/Materials/shaderMaterial.js\");\n/* harmony import */ var _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/texture.js */ \"@babylonjs/core/Materials/Textures/texture.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n/**\n * Utils functions for GLTF\n * @internal\n * @deprecated\n */\nclass GLTFUtils {\n    /**\n     * Sets the given \"parameter\" matrix\n     * @param scene the Scene object\n     * @param source the source node where to pick the matrix\n     * @param parameter the GLTF technique parameter\n     * @param uniformName the name of the shader's uniform\n     * @param shaderMaterial the shader material\n     */\n    static SetMatrix(scene, source, parameter, uniformName, shaderMaterial) {\n        let mat = null;\n        if (parameter.semantic === \"MODEL\") {\n            mat = source.getWorldMatrix();\n        }\n        else if (parameter.semantic === \"PROJECTION\") {\n            mat = scene.getProjectionMatrix();\n        }\n        else if (parameter.semantic === \"VIEW\") {\n            mat = scene.getViewMatrix();\n        }\n        else if (parameter.semantic === \"MODELVIEWINVERSETRANSPOSE\") {\n            mat = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Transpose(source.getWorldMatrix().multiply(scene.getViewMatrix()).invert());\n        }\n        else if (parameter.semantic === \"MODELVIEW\") {\n            mat = source.getWorldMatrix().multiply(scene.getViewMatrix());\n        }\n        else if (parameter.semantic === \"MODELVIEWPROJECTION\") {\n            mat = source.getWorldMatrix().multiply(scene.getTransformMatrix());\n        }\n        else if (parameter.semantic === \"MODELINVERSE\") {\n            mat = source.getWorldMatrix().invert();\n        }\n        else if (parameter.semantic === \"VIEWINVERSE\") {\n            mat = scene.getViewMatrix().invert();\n        }\n        else if (parameter.semantic === \"PROJECTIONINVERSE\") {\n            mat = scene.getProjectionMatrix().invert();\n        }\n        else if (parameter.semantic === \"MODELVIEWINVERSE\") {\n            mat = source.getWorldMatrix().multiply(scene.getViewMatrix()).invert();\n        }\n        else if (parameter.semantic === \"MODELVIEWPROJECTIONINVERSE\") {\n            mat = source.getWorldMatrix().multiply(scene.getTransformMatrix()).invert();\n        }\n        else if (parameter.semantic === \"MODELINVERSETRANSPOSE\") {\n            mat = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Transpose(source.getWorldMatrix().invert());\n        }\n        if (mat) {\n            switch (parameter.type) {\n                case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT2:\n                    shaderMaterial.setMatrix2x2(uniformName, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.GetAsMatrix2x2(mat));\n                    break;\n                case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT3:\n                    shaderMaterial.setMatrix3x3(uniformName, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.GetAsMatrix3x3(mat));\n                    break;\n                case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_MAT4:\n                    shaderMaterial.setMatrix(uniformName, mat);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    /**\n     * Sets the given \"parameter\" matrix\n     * @param shaderMaterial the shader material\n     * @param uniform the name of the shader's uniform\n     * @param value the value of the uniform\n     * @param type the uniform's type (EParameterType FLOAT, VEC2, VEC3 or VEC4)\n     * @returns true if set, else false\n     */\n    static SetUniform(shaderMaterial, uniform, value, type) {\n        switch (type) {\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT:\n                shaderMaterial.setFloat(uniform, value);\n                return true;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_VEC2:\n                shaderMaterial.setVector2(uniform, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector2.FromArray(value));\n                return true;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_VEC3:\n                shaderMaterial.setVector3(uniform, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(value));\n                return true;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EParameterType.FLOAT_VEC4:\n                shaderMaterial.setVector4(uniform, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector4.FromArray(value));\n                return true;\n            default:\n                return false;\n        }\n    }\n    /**\n     * Returns the wrap mode of the texture\n     * @param mode the mode value\n     * @returns the wrap mode (TEXTURE_WRAP_ADDRESSMODE, MIRROR_ADDRESSMODE or CLAMP_ADDRESSMODE)\n     */\n    static GetWrapMode(mode) {\n        switch (mode) {\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureWrapMode.CLAMP_TO_EDGE:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.CLAMP_ADDRESSMODE;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureWrapMode.MIRRORED_REPEAT:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.MIRROR_ADDRESSMODE;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureWrapMode.REPEAT:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.WRAP_ADDRESSMODE;\n            default:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.WRAP_ADDRESSMODE;\n        }\n    }\n    /**\n     * Returns the byte stride giving an accessor\n     * @param accessor the GLTF accessor objet\n     * @returns the byte stride\n     */\n    static GetByteStrideFromType(accessor) {\n        // Needs this function since \"byteStride\" isn't requiered in glTF format\n        const type = accessor.type;\n        switch (type) {\n            case \"VEC2\":\n                return 2;\n            case \"VEC3\":\n                return 3;\n            case \"VEC4\":\n                return 4;\n            case \"MAT2\":\n                return 4;\n            case \"MAT3\":\n                return 9;\n            case \"MAT4\":\n                return 16;\n            default:\n                return 1;\n        }\n    }\n    /**\n     * Returns the texture filter mode giving a mode value\n     * @param mode the filter mode value\n     * @returns the filter mode (TODO - needs to be a type?)\n     */\n    static GetTextureFilterMode(mode) {\n        switch (mode) {\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.LINEAR:\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.LINEAR_MIPMAP_NEAREST:\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.LINEAR_MIPMAP_LINEAR:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.TRILINEAR_SAMPLINGMODE;\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.NEAREST:\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.ETextureFilterType.NEAREST_MIPMAP_NEAREST:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.NEAREST_SAMPLINGMODE;\n            default:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_5__.Texture.BILINEAR_SAMPLINGMODE;\n        }\n    }\n    static GetBufferFromBufferView(gltfRuntime, bufferView, byteOffset, byteLength, componentType) {\n        byteOffset = bufferView.byteOffset + byteOffset;\n        const loadedBufferView = gltfRuntime.loadedBufferViews[bufferView.buffer];\n        if (byteOffset + byteLength > loadedBufferView.byteLength) {\n            throw new Error(\"Buffer access is out of range\");\n        }\n        const buffer = loadedBufferView.buffer;\n        byteOffset += loadedBufferView.byteOffset;\n        switch (componentType) {\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EComponentType.BYTE:\n                return new Int8Array(buffer, byteOffset, byteLength);\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EComponentType.UNSIGNED_BYTE:\n                return new Uint8Array(buffer, byteOffset, byteLength);\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EComponentType.SHORT:\n                return new Int16Array(buffer, byteOffset, byteLength);\n            case _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.EComponentType.UNSIGNED_SHORT:\n                return new Uint16Array(buffer, byteOffset, byteLength);\n            default:\n                return new Float32Array(buffer, byteOffset, byteLength);\n        }\n    }\n    /**\n     * Returns a buffer from its accessor\n     * @param gltfRuntime the GLTF runtime\n     * @param accessor the GLTF accessor\n     * @returns an array buffer view\n     */\n    static GetBufferFromAccessor(gltfRuntime, accessor) {\n        const bufferView = gltfRuntime.bufferViews[accessor.bufferView];\n        const byteLength = accessor.count * GLTFUtils.GetByteStrideFromType(accessor);\n        return GLTFUtils.GetBufferFromBufferView(gltfRuntime, bufferView, accessor.byteOffset, byteLength, accessor.componentType);\n    }\n    /**\n     * Decodes a buffer view into a string\n     * @param view the buffer view\n     * @returns a string\n     */\n    static DecodeBufferToText(view) {\n        let result = \"\";\n        const length = view.byteLength;\n        for (let i = 0; i < length; ++i) {\n            result += String.fromCharCode(view[i]);\n        }\n        return result;\n    }\n    /**\n     * Returns the default material of gltf. Related to\n     * https://github.com/KhronosGroup/glTF/tree/master/specification/1.0#appendix-a-default-material\n     * @param scene the Babylon.js scene\n     * @returns the default Babylon material\n     */\n    static GetDefaultMaterial(scene) {\n        if (!GLTFUtils._DefaultMaterial) {\n            _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_3__.Effect.ShadersStore[\"GLTFDefaultMaterialVertexShader\"] = [\n                \"precision highp float;\",\n                \"\",\n                \"uniform mat4 worldView;\",\n                \"uniform mat4 projection;\",\n                \"\",\n                \"attribute vec3 position;\",\n                \"\",\n                \"void main(void)\",\n                \"{\",\n                \"    gl_Position = projection * worldView * vec4(position, 1.0);\",\n                \"}\",\n            ].join(\"\\n\");\n            _babylonjs_core_Materials_effect_js__WEBPACK_IMPORTED_MODULE_3__.Effect.ShadersStore[\"GLTFDefaultMaterialPixelShader\"] = [\n                \"precision highp float;\",\n                \"\",\n                \"uniform vec4 u_emission;\",\n                \"\",\n                \"void main(void)\",\n                \"{\",\n                \"    gl_FragColor = u_emission;\",\n                \"}\",\n            ].join(\"\\n\");\n            const shaderPath = {\n                vertex: \"GLTFDefaultMaterial\",\n                fragment: \"GLTFDefaultMaterial\",\n            };\n            const options = {\n                attributes: [\"position\"],\n                uniforms: [\"worldView\", \"projection\", \"u_emission\"],\n                samplers: new Array(),\n                needAlphaBlending: false,\n            };\n            GLTFUtils._DefaultMaterial = new _babylonjs_core_Materials_shaderMaterial_js__WEBPACK_IMPORTED_MODULE_4__.ShaderMaterial(\"GLTFDefaultMaterial\", scene, shaderPath, options);\n            GLTFUtils._DefaultMaterial.setColor4(\"u_emission\", new _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color4(0.5, 0.5, 0.5, 1.0));\n        }\n        return GLTFUtils._DefaultMaterial;\n    }\n}\n// The GLTF default material\nGLTFUtils._DefaultMaterial = null;\n//# sourceMappingURL=glTFLoaderUtils.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMS4wL2dsVEZMb2FkZXJVdGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlIO0FBQ3hCO0FBQzVCO0FBQ0E7QUFDZ0I7QUFDTDtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdFQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0VBQU07QUFDeEI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9FQUFjO0FBQ25DLDZEQUE2RCx3RUFBTTtBQUNuRTtBQUNBLHFCQUFxQixvRUFBYztBQUNuQyw2REFBNkQsd0VBQU07QUFDbkU7QUFDQSxxQkFBcUIsb0VBQWM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBO0FBQ0EsaUJBQWlCLG9FQUFjO0FBQy9CLG1EQUFtRCx5RUFBTztBQUMxRDtBQUNBLGlCQUFpQixvRUFBYztBQUMvQixtREFBbUQseUVBQU87QUFDMUQ7QUFDQSxpQkFBaUIsb0VBQWM7QUFDL0IsbURBQW1ELHlFQUFPO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixzRUFBZ0I7QUFDakMsdUJBQXVCLGtGQUFPO0FBQzlCLGlCQUFpQixzRUFBZ0I7QUFDakMsdUJBQXVCLGtGQUFPO0FBQzlCLGlCQUFpQixzRUFBZ0I7QUFDakMsdUJBQXVCLGtGQUFPO0FBQzlCO0FBQ0EsdUJBQXVCLGtGQUFPO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdFQUFrQjtBQUNuQyxpQkFBaUIsd0VBQWtCO0FBQ25DLGlCQUFpQix3RUFBa0I7QUFDbkMsdUJBQXVCLGtGQUFPO0FBQzlCLGlCQUFpQix3RUFBa0I7QUFDbkMsaUJBQWlCLHdFQUFrQjtBQUNuQyx1QkFBdUIsa0ZBQU87QUFDOUI7QUFDQSx1QkFBdUIsa0ZBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVFQUFNO0FBQ2xCLHVDQUF1QztBQUN2QztBQUNBLHdDQUF3QztBQUN4Qyx5Q0FBeUM7QUFDekM7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQixnRkFBZ0Y7QUFDaEYsa0JBQWtCO0FBQ2xCO0FBQ0EsWUFBWSx1RUFBTTtBQUNsQix1Q0FBdUM7QUFDdkM7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiwrQ0FBK0M7QUFDL0Msa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsdUZBQWM7QUFDM0QsbUVBQW1FLHVFQUFNO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8xLjAvZ2xURkxvYWRlclV0aWxzLmpzP2M0NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRVBhcmFtZXRlclR5cGUsIEVUZXh0dXJlV3JhcE1vZGUsIEVUZXh0dXJlRmlsdGVyVHlwZSwgRUNvbXBvbmVudFR5cGUgfSBmcm9tIFwiLi9nbFRGTG9hZGVySW50ZXJmYWNlcy5qc1wiO1xuaW1wb3J0IHsgVmVjdG9yMiwgVmVjdG9yMywgVmVjdG9yNCwgTWF0cml4IH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRocy9tYXRoLnZlY3Rvci5qc1wiO1xuaW1wb3J0IHsgQ29sb3I0IH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRocy9tYXRoLmNvbG9yLmpzXCI7XG5pbXBvcnQgeyBFZmZlY3QgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9lZmZlY3QuanNcIjtcbmltcG9ydCB7IFNoYWRlck1hdGVyaWFsIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRlcmlhbHMvc2hhZGVyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IFRleHR1cmUgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9UZXh0dXJlcy90ZXh0dXJlLmpzXCI7XG4vKipcbiAqIFV0aWxzIGZ1bmN0aW9ucyBmb3IgR0xURlxuICogQGludGVybmFsXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY2xhc3MgR0xURlV0aWxzIHtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBnaXZlbiBcInBhcmFtZXRlclwiIG1hdHJpeFxuICAgICAqIEBwYXJhbSBzY2VuZSB0aGUgU2NlbmUgb2JqZWN0XG4gICAgICogQHBhcmFtIHNvdXJjZSB0aGUgc291cmNlIG5vZGUgd2hlcmUgdG8gcGljayB0aGUgbWF0cml4XG4gICAgICogQHBhcmFtIHBhcmFtZXRlciB0aGUgR0xURiB0ZWNobmlxdWUgcGFyYW1ldGVyXG4gICAgICogQHBhcmFtIHVuaWZvcm1OYW1lIHRoZSBuYW1lIG9mIHRoZSBzaGFkZXIncyB1bmlmb3JtXG4gICAgICogQHBhcmFtIHNoYWRlck1hdGVyaWFsIHRoZSBzaGFkZXIgbWF0ZXJpYWxcbiAgICAgKi9cbiAgICBzdGF0aWMgU2V0TWF0cml4KHNjZW5lLCBzb3VyY2UsIHBhcmFtZXRlciwgdW5pZm9ybU5hbWUsIHNoYWRlck1hdGVyaWFsKSB7XG4gICAgICAgIGxldCBtYXQgPSBudWxsO1xuICAgICAgICBpZiAocGFyYW1ldGVyLnNlbWFudGljID09PSBcIk1PREVMXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNvdXJjZS5nZXRXb3JsZE1hdHJpeCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhcmFtZXRlci5zZW1hbnRpYyA9PT0gXCJQUk9KRUNUSU9OXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNjZW5lLmdldFByb2plY3Rpb25NYXRyaXgoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJhbWV0ZXIuc2VtYW50aWMgPT09IFwiVklFV1wiKSB7XG4gICAgICAgICAgICBtYXQgPSBzY2VuZS5nZXRWaWV3TWF0cml4KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyYW1ldGVyLnNlbWFudGljID09PSBcIk1PREVMVklFV0lOVkVSU0VUUkFOU1BPU0VcIikge1xuICAgICAgICAgICAgbWF0ID0gTWF0cml4LlRyYW5zcG9zZShzb3VyY2UuZ2V0V29ybGRNYXRyaXgoKS5tdWx0aXBseShzY2VuZS5nZXRWaWV3TWF0cml4KCkpLmludmVydCgpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJhbWV0ZXIuc2VtYW50aWMgPT09IFwiTU9ERUxWSUVXXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNvdXJjZS5nZXRXb3JsZE1hdHJpeCgpLm11bHRpcGx5KHNjZW5lLmdldFZpZXdNYXRyaXgoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyYW1ldGVyLnNlbWFudGljID09PSBcIk1PREVMVklFV1BST0pFQ1RJT05cIikge1xuICAgICAgICAgICAgbWF0ID0gc291cmNlLmdldFdvcmxkTWF0cml4KCkubXVsdGlwbHkoc2NlbmUuZ2V0VHJhbnNmb3JtTWF0cml4KCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhcmFtZXRlci5zZW1hbnRpYyA9PT0gXCJNT0RFTElOVkVSU0VcIikge1xuICAgICAgICAgICAgbWF0ID0gc291cmNlLmdldFdvcmxkTWF0cml4KCkuaW52ZXJ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyYW1ldGVyLnNlbWFudGljID09PSBcIlZJRVdJTlZFUlNFXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNjZW5lLmdldFZpZXdNYXRyaXgoKS5pbnZlcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJhbWV0ZXIuc2VtYW50aWMgPT09IFwiUFJPSkVDVElPTklOVkVSU0VcIikge1xuICAgICAgICAgICAgbWF0ID0gc2NlbmUuZ2V0UHJvamVjdGlvbk1hdHJpeCgpLmludmVydCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHBhcmFtZXRlci5zZW1hbnRpYyA9PT0gXCJNT0RFTFZJRVdJTlZFUlNFXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNvdXJjZS5nZXRXb3JsZE1hdHJpeCgpLm11bHRpcGx5KHNjZW5lLmdldFZpZXdNYXRyaXgoKSkuaW52ZXJ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFyYW1ldGVyLnNlbWFudGljID09PSBcIk1PREVMVklFV1BST0pFQ1RJT05JTlZFUlNFXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IHNvdXJjZS5nZXRXb3JsZE1hdHJpeCgpLm11bHRpcGx5KHNjZW5lLmdldFRyYW5zZm9ybU1hdHJpeCgpKS5pbnZlcnQoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJhbWV0ZXIuc2VtYW50aWMgPT09IFwiTU9ERUxJTlZFUlNFVFJBTlNQT1NFXCIpIHtcbiAgICAgICAgICAgIG1hdCA9IE1hdHJpeC5UcmFuc3Bvc2Uoc291cmNlLmdldFdvcmxkTWF0cml4KCkuaW52ZXJ0KCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtYXQpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFyYW1ldGVyLnR5cGUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIEVQYXJhbWV0ZXJUeXBlLkZMT0FUX01BVDI6XG4gICAgICAgICAgICAgICAgICAgIHNoYWRlck1hdGVyaWFsLnNldE1hdHJpeDJ4Mih1bmlmb3JtTmFtZSwgTWF0cml4LkdldEFzTWF0cml4MngyKG1hdCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIEVQYXJhbWV0ZXJUeXBlLkZMT0FUX01BVDM6XG4gICAgICAgICAgICAgICAgICAgIHNoYWRlck1hdGVyaWFsLnNldE1hdHJpeDN4Myh1bmlmb3JtTmFtZSwgTWF0cml4LkdldEFzTWF0cml4M3gzKG1hdCkpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIEVQYXJhbWV0ZXJUeXBlLkZMT0FUX01BVDQ6XG4gICAgICAgICAgICAgICAgICAgIHNoYWRlck1hdGVyaWFsLnNldE1hdHJpeCh1bmlmb3JtTmFtZSwgbWF0KTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZ2l2ZW4gXCJwYXJhbWV0ZXJcIiBtYXRyaXhcbiAgICAgKiBAcGFyYW0gc2hhZGVyTWF0ZXJpYWwgdGhlIHNoYWRlciBtYXRlcmlhbFxuICAgICAqIEBwYXJhbSB1bmlmb3JtIHRoZSBuYW1lIG9mIHRoZSBzaGFkZXIncyB1bmlmb3JtXG4gICAgICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSBvZiB0aGUgdW5pZm9ybVxuICAgICAqIEBwYXJhbSB0eXBlIHRoZSB1bmlmb3JtJ3MgdHlwZSAoRVBhcmFtZXRlclR5cGUgRkxPQVQsIFZFQzIsIFZFQzMgb3IgVkVDNClcbiAgICAgKiBAcmV0dXJucyB0cnVlIGlmIHNldCwgZWxzZSBmYWxzZVxuICAgICAqL1xuICAgIHN0YXRpYyBTZXRVbmlmb3JtKHNoYWRlck1hdGVyaWFsLCB1bmlmb3JtLCB2YWx1ZSwgdHlwZSkge1xuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgRVBhcmFtZXRlclR5cGUuRkxPQVQ6XG4gICAgICAgICAgICAgICAgc2hhZGVyTWF0ZXJpYWwuc2V0RmxvYXQodW5pZm9ybSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgY2FzZSBFUGFyYW1ldGVyVHlwZS5GTE9BVF9WRUMyOlxuICAgICAgICAgICAgICAgIHNoYWRlck1hdGVyaWFsLnNldFZlY3RvcjIodW5pZm9ybSwgVmVjdG9yMi5Gcm9tQXJyYXkodmFsdWUpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIGNhc2UgRVBhcmFtZXRlclR5cGUuRkxPQVRfVkVDMzpcbiAgICAgICAgICAgICAgICBzaGFkZXJNYXRlcmlhbC5zZXRWZWN0b3IzKHVuaWZvcm0sIFZlY3RvcjMuRnJvbUFycmF5KHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBjYXNlIEVQYXJhbWV0ZXJUeXBlLkZMT0FUX1ZFQzQ6XG4gICAgICAgICAgICAgICAgc2hhZGVyTWF0ZXJpYWwuc2V0VmVjdG9yNCh1bmlmb3JtLCBWZWN0b3I0LkZyb21BcnJheSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgd3JhcCBtb2RlIG9mIHRoZSB0ZXh0dXJlXG4gICAgICogQHBhcmFtIG1vZGUgdGhlIG1vZGUgdmFsdWVcbiAgICAgKiBAcmV0dXJucyB0aGUgd3JhcCBtb2RlIChURVhUVVJFX1dSQVBfQUREUkVTU01PREUsIE1JUlJPUl9BRERSRVNTTU9ERSBvciBDTEFNUF9BRERSRVNTTU9ERSlcbiAgICAgKi9cbiAgICBzdGF0aWMgR2V0V3JhcE1vZGUobW9kZSkge1xuICAgICAgICBzd2l0Y2ggKG1vZGUpIHtcbiAgICAgICAgICAgIGNhc2UgRVRleHR1cmVXcmFwTW9kZS5DTEFNUF9UT19FREdFOlxuICAgICAgICAgICAgICAgIHJldHVybiBUZXh0dXJlLkNMQU1QX0FERFJFU1NNT0RFO1xuICAgICAgICAgICAgY2FzZSBFVGV4dHVyZVdyYXBNb2RlLk1JUlJPUkVEX1JFUEVBVDpcbiAgICAgICAgICAgICAgICByZXR1cm4gVGV4dHVyZS5NSVJST1JfQUREUkVTU01PREU7XG4gICAgICAgICAgICBjYXNlIEVUZXh0dXJlV3JhcE1vZGUuUkVQRUFUOlxuICAgICAgICAgICAgICAgIHJldHVybiBUZXh0dXJlLldSQVBfQUREUkVTU01PREU7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBUZXh0dXJlLldSQVBfQUREUkVTU01PREU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgYnl0ZSBzdHJpZGUgZ2l2aW5nIGFuIGFjY2Vzc29yXG4gICAgICogQHBhcmFtIGFjY2Vzc29yIHRoZSBHTFRGIGFjY2Vzc29yIG9iamV0XG4gICAgICogQHJldHVybnMgdGhlIGJ5dGUgc3RyaWRlXG4gICAgICovXG4gICAgc3RhdGljIEdldEJ5dGVTdHJpZGVGcm9tVHlwZShhY2Nlc3Nvcikge1xuICAgICAgICAvLyBOZWVkcyB0aGlzIGZ1bmN0aW9uIHNpbmNlIFwiYnl0ZVN0cmlkZVwiIGlzbid0IHJlcXVpZXJlZCBpbiBnbFRGIGZvcm1hdFxuICAgICAgICBjb25zdCB0eXBlID0gYWNjZXNzb3IudHlwZTtcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwiVkVDMlwiOlxuICAgICAgICAgICAgICAgIHJldHVybiAyO1xuICAgICAgICAgICAgY2FzZSBcIlZFQzNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gMztcbiAgICAgICAgICAgIGNhc2UgXCJWRUM0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDQ7XG4gICAgICAgICAgICBjYXNlIFwiTUFUMlwiOlxuICAgICAgICAgICAgICAgIHJldHVybiA0O1xuICAgICAgICAgICAgY2FzZSBcIk1BVDNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gOTtcbiAgICAgICAgICAgIGNhc2UgXCJNQVQ0XCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIDE2O1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSB0ZXh0dXJlIGZpbHRlciBtb2RlIGdpdmluZyBhIG1vZGUgdmFsdWVcbiAgICAgKiBAcGFyYW0gbW9kZSB0aGUgZmlsdGVyIG1vZGUgdmFsdWVcbiAgICAgKiBAcmV0dXJucyB0aGUgZmlsdGVyIG1vZGUgKFRPRE8gLSBuZWVkcyB0byBiZSBhIHR5cGU/KVxuICAgICAqL1xuICAgIHN0YXRpYyBHZXRUZXh0dXJlRmlsdGVyTW9kZShtb2RlKSB7XG4gICAgICAgIHN3aXRjaCAobW9kZSkge1xuICAgICAgICAgICAgY2FzZSBFVGV4dHVyZUZpbHRlclR5cGUuTElORUFSOlxuICAgICAgICAgICAgY2FzZSBFVGV4dHVyZUZpbHRlclR5cGUuTElORUFSX01JUE1BUF9ORUFSRVNUOlxuICAgICAgICAgICAgY2FzZSBFVGV4dHVyZUZpbHRlclR5cGUuTElORUFSX01JUE1BUF9MSU5FQVI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFRleHR1cmUuVFJJTElORUFSX1NBTVBMSU5HTU9ERTtcbiAgICAgICAgICAgIGNhc2UgRVRleHR1cmVGaWx0ZXJUeXBlLk5FQVJFU1Q6XG4gICAgICAgICAgICBjYXNlIEVUZXh0dXJlRmlsdGVyVHlwZS5ORUFSRVNUX01JUE1BUF9ORUFSRVNUOlxuICAgICAgICAgICAgICAgIHJldHVybiBUZXh0dXJlLk5FQVJFU1RfU0FNUExJTkdNT0RFO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gVGV4dHVyZS5CSUxJTkVBUl9TQU1QTElOR01PREU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIEdldEJ1ZmZlckZyb21CdWZmZXJWaWV3KGdsdGZSdW50aW1lLCBidWZmZXJWaWV3LCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoLCBjb21wb25lbnRUeXBlKSB7XG4gICAgICAgIGJ5dGVPZmZzZXQgPSBidWZmZXJWaWV3LmJ5dGVPZmZzZXQgKyBieXRlT2Zmc2V0O1xuICAgICAgICBjb25zdCBsb2FkZWRCdWZmZXJWaWV3ID0gZ2x0ZlJ1bnRpbWUubG9hZGVkQnVmZmVyVmlld3NbYnVmZmVyVmlldy5idWZmZXJdO1xuICAgICAgICBpZiAoYnl0ZU9mZnNldCArIGJ5dGVMZW5ndGggPiBsb2FkZWRCdWZmZXJWaWV3LmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJ1ZmZlciBhY2Nlc3MgaXMgb3V0IG9mIHJhbmdlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IGxvYWRlZEJ1ZmZlclZpZXcuYnVmZmVyO1xuICAgICAgICBieXRlT2Zmc2V0ICs9IGxvYWRlZEJ1ZmZlclZpZXcuYnl0ZU9mZnNldDtcbiAgICAgICAgc3dpdGNoIChjb21wb25lbnRUeXBlKSB7XG4gICAgICAgICAgICBjYXNlIEVDb21wb25lbnRUeXBlLkJZVEU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnQ4QXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgIGNhc2UgRUNvbXBvbmVudFR5cGUuVU5TSUdORURfQllURTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgIGNhc2UgRUNvbXBvbmVudFR5cGUuU0hPUlQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBJbnQxNkFycmF5KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCk7XG4gICAgICAgICAgICBjYXNlIEVDb21wb25lbnRUeXBlLlVOU0lHTkVEX1NIT1JUOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVWludDE2QXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgYnVmZmVyIGZyb20gaXRzIGFjY2Vzc29yXG4gICAgICogQHBhcmFtIGdsdGZSdW50aW1lIHRoZSBHTFRGIHJ1bnRpbWVcbiAgICAgKiBAcGFyYW0gYWNjZXNzb3IgdGhlIEdMVEYgYWNjZXNzb3JcbiAgICAgKiBAcmV0dXJucyBhbiBhcnJheSBidWZmZXIgdmlld1xuICAgICAqL1xuICAgIHN0YXRpYyBHZXRCdWZmZXJGcm9tQWNjZXNzb3IoZ2x0ZlJ1bnRpbWUsIGFjY2Vzc29yKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlclZpZXcgPSBnbHRmUnVudGltZS5idWZmZXJWaWV3c1thY2Nlc3Nvci5idWZmZXJWaWV3XTtcbiAgICAgICAgY29uc3QgYnl0ZUxlbmd0aCA9IGFjY2Vzc29yLmNvdW50ICogR0xURlV0aWxzLkdldEJ5dGVTdHJpZGVGcm9tVHlwZShhY2Nlc3Nvcik7XG4gICAgICAgIHJldHVybiBHTFRGVXRpbHMuR2V0QnVmZmVyRnJvbUJ1ZmZlclZpZXcoZ2x0ZlJ1bnRpbWUsIGJ1ZmZlclZpZXcsIGFjY2Vzc29yLmJ5dGVPZmZzZXQsIGJ5dGVMZW5ndGgsIGFjY2Vzc29yLmNvbXBvbmVudFR5cGUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWNvZGVzIGEgYnVmZmVyIHZpZXcgaW50byBhIHN0cmluZ1xuICAgICAqIEBwYXJhbSB2aWV3IHRoZSBidWZmZXIgdmlld1xuICAgICAqIEByZXR1cm5zIGEgc3RyaW5nXG4gICAgICovXG4gICAgc3RhdGljIERlY29kZUJ1ZmZlclRvVGV4dCh2aWV3KSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBcIlwiO1xuICAgICAgICBjb25zdCBsZW5ndGggPSB2aWV3LmJ5dGVMZW5ndGg7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKHZpZXdbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGRlZmF1bHQgbWF0ZXJpYWwgb2YgZ2x0Zi4gUmVsYXRlZCB0b1xuICAgICAqIGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi90cmVlL21hc3Rlci9zcGVjaWZpY2F0aW9uLzEuMCNhcHBlbmRpeC1hLWRlZmF1bHQtbWF0ZXJpYWxcbiAgICAgKiBAcGFyYW0gc2NlbmUgdGhlIEJhYnlsb24uanMgc2NlbmVcbiAgICAgKiBAcmV0dXJucyB0aGUgZGVmYXVsdCBCYWJ5bG9uIG1hdGVyaWFsXG4gICAgICovXG4gICAgc3RhdGljIEdldERlZmF1bHRNYXRlcmlhbChzY2VuZSkge1xuICAgICAgICBpZiAoIUdMVEZVdGlscy5fRGVmYXVsdE1hdGVyaWFsKSB7XG4gICAgICAgICAgICBFZmZlY3QuU2hhZGVyc1N0b3JlW1wiR0xURkRlZmF1bHRNYXRlcmlhbFZlcnRleFNoYWRlclwiXSA9IFtcbiAgICAgICAgICAgICAgICBcInByZWNpc2lvbiBoaWdocCBmbG9hdDtcIixcbiAgICAgICAgICAgICAgICBcIlwiLFxuICAgICAgICAgICAgICAgIFwidW5pZm9ybSBtYXQ0IHdvcmxkVmlldztcIixcbiAgICAgICAgICAgICAgICBcInVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uO1wiLFxuICAgICAgICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgICAgICAgXCJhdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjtcIixcbiAgICAgICAgICAgICAgICBcIlwiLFxuICAgICAgICAgICAgICAgIFwidm9pZCBtYWluKHZvaWQpXCIsXG4gICAgICAgICAgICAgICAgXCJ7XCIsXG4gICAgICAgICAgICAgICAgXCIgICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uICogd29ybGRWaWV3ICogdmVjNChwb3NpdGlvbiwgMS4wKTtcIixcbiAgICAgICAgICAgICAgICBcIn1cIixcbiAgICAgICAgICAgIF0uam9pbihcIlxcblwiKTtcbiAgICAgICAgICAgIEVmZmVjdC5TaGFkZXJzU3RvcmVbXCJHTFRGRGVmYXVsdE1hdGVyaWFsUGl4ZWxTaGFkZXJcIl0gPSBbXG4gICAgICAgICAgICAgICAgXCJwcmVjaXNpb24gaGlnaHAgZmxvYXQ7XCIsXG4gICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICBcInVuaWZvcm0gdmVjNCB1X2VtaXNzaW9uO1wiLFxuICAgICAgICAgICAgICAgIFwiXCIsXG4gICAgICAgICAgICAgICAgXCJ2b2lkIG1haW4odm9pZClcIixcbiAgICAgICAgICAgICAgICBcIntcIixcbiAgICAgICAgICAgICAgICBcIiAgICBnbF9GcmFnQ29sb3IgPSB1X2VtaXNzaW9uO1wiLFxuICAgICAgICAgICAgICAgIFwifVwiLFxuICAgICAgICAgICAgXS5qb2luKFwiXFxuXCIpO1xuICAgICAgICAgICAgY29uc3Qgc2hhZGVyUGF0aCA9IHtcbiAgICAgICAgICAgICAgICB2ZXJ0ZXg6IFwiR0xURkRlZmF1bHRNYXRlcmlhbFwiLFxuICAgICAgICAgICAgICAgIGZyYWdtZW50OiBcIkdMVEZEZWZhdWx0TWF0ZXJpYWxcIixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcInBvc2l0aW9uXCJdLFxuICAgICAgICAgICAgICAgIHVuaWZvcm1zOiBbXCJ3b3JsZFZpZXdcIiwgXCJwcm9qZWN0aW9uXCIsIFwidV9lbWlzc2lvblwiXSxcbiAgICAgICAgICAgICAgICBzYW1wbGVyczogbmV3IEFycmF5KCksXG4gICAgICAgICAgICAgICAgbmVlZEFscGhhQmxlbmRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIEdMVEZVdGlscy5fRGVmYXVsdE1hdGVyaWFsID0gbmV3IFNoYWRlck1hdGVyaWFsKFwiR0xURkRlZmF1bHRNYXRlcmlhbFwiLCBzY2VuZSwgc2hhZGVyUGF0aCwgb3B0aW9ucyk7XG4gICAgICAgICAgICBHTFRGVXRpbHMuX0RlZmF1bHRNYXRlcmlhbC5zZXRDb2xvcjQoXCJ1X2VtaXNzaW9uXCIsIG5ldyBDb2xvcjQoMC41LCAwLjUsIDAuNSwgMS4wKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEdMVEZVdGlscy5fRGVmYXVsdE1hdGVyaWFsO1xuICAgIH1cbn1cbi8vIFRoZSBHTFRGIGRlZmF1bHQgbWF0ZXJpYWxcbkdMVEZVdGlscy5fRGVmYXVsdE1hdGVyaWFsID0gbnVsbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsVEZMb2FkZXJVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/glTFMaterialsCommonExtension.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/glTFMaterialsCommonExtension.js ***!
  \**********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFMaterialsCommonExtension: () => (/* binding */ GLTFMaterialsCommonExtension)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\n/* harmony import */ var _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Materials/material.js */ \"@babylonjs/core/Materials/material.js\");\n/* harmony import */ var _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Materials/standardMaterial.js */ \"@babylonjs/core/Materials/standardMaterial.js\");\n/* harmony import */ var _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babylonjs/core/Lights/hemisphericLight.js */ \"@babylonjs/core/Lights/hemisphericLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babylonjs/core/Lights/directionalLight.js */ \"@babylonjs/core/Lights/directionalLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babylonjs/core/Lights/pointLight.js */ \"@babylonjs/core/Lights/pointLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babylonjs/core/Lights/spotLight.js */ \"@babylonjs/core/Lights/spotLight.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_9__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n * @deprecated\n */\nclass GLTFMaterialsCommonExtension extends _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoaderExtension {\n    constructor() {\n        super(\"KHR_materials_common\");\n    }\n    loadRuntimeExtensionsAsync(gltfRuntime) {\n        if (!gltfRuntime.extensions) {\n            return false;\n        }\n        const extension = gltfRuntime.extensions[this.name];\n        if (!extension) {\n            return false;\n        }\n        // Create lights\n        const lights = extension.lights;\n        if (lights) {\n            for (const thing in lights) {\n                const light = lights[thing];\n                switch (light.type) {\n                    case \"ambient\": {\n                        const ambientLight = new _babylonjs_core_Lights_hemisphericLight_js__WEBPACK_IMPORTED_MODULE_6__.HemisphericLight(light.name, new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 1, 0), gltfRuntime.scene);\n                        const ambient = light.ambient;\n                        if (ambient) {\n                            ambientLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(ambient.color || [1, 1, 1]);\n                        }\n                        break;\n                    }\n                    case \"point\": {\n                        const pointLight = new _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_8__.PointLight(light.name, new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(10, 10, 10), gltfRuntime.scene);\n                        const point = light.point;\n                        if (point) {\n                            pointLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(point.color || [1, 1, 1]);\n                        }\n                        break;\n                    }\n                    case \"directional\": {\n                        const dirLight = new _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_7__.DirectionalLight(light.name, new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, -1, 0), gltfRuntime.scene);\n                        const directional = light.directional;\n                        if (directional) {\n                            dirLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(directional.color || [1, 1, 1]);\n                        }\n                        break;\n                    }\n                    case \"spot\": {\n                        const spot = light.spot;\n                        if (spot) {\n                            const spotLight = new _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_9__.SpotLight(light.name, new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, 10, 0), new _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3(0, -1, 0), spot.fallOffAngle || Math.PI, spot.fallOffExponent || 0.0, gltfRuntime.scene);\n                            spotLight.diffuse = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(spot.color || [1, 1, 1]);\n                        }\n                        break;\n                    }\n                    default:\n                        _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.Warn('GLTF Material Common extension: light type \"' + light.type + \"” not supported\");\n                        break;\n                }\n            }\n        }\n        return false;\n    }\n    loadMaterialAsync(gltfRuntime, id, onSuccess, onError) {\n        const material = gltfRuntime.materials[id];\n        if (!material || !material.extensions) {\n            return false;\n        }\n        const extension = material.extensions[this.name];\n        if (!extension) {\n            return false;\n        }\n        const standardMaterial = new _babylonjs_core_Materials_standardMaterial_js__WEBPACK_IMPORTED_MODULE_5__.StandardMaterial(id, gltfRuntime.scene);\n        standardMaterial.sideOrientation = _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_4__.Material.CounterClockWiseSideOrientation;\n        if (extension.technique === \"CONSTANT\") {\n            standardMaterial.disableLighting = true;\n        }\n        standardMaterial.backFaceCulling = extension.doubleSided === undefined ? false : !extension.doubleSided;\n        standardMaterial.alpha = extension.values.transparency === undefined ? 1.0 : extension.values.transparency;\n        standardMaterial.specularPower = extension.values.shininess === undefined ? 0.0 : extension.values.shininess;\n        // Ambient\n        if (typeof extension.values.ambient === \"string\") {\n            this._loadTexture(gltfRuntime, extension.values.ambient, standardMaterial, \"ambientTexture\", onError);\n        }\n        else {\n            standardMaterial.ambientColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(extension.values.ambient || [0, 0, 0]);\n        }\n        // Diffuse\n        if (typeof extension.values.diffuse === \"string\") {\n            this._loadTexture(gltfRuntime, extension.values.diffuse, standardMaterial, \"diffuseTexture\", onError);\n        }\n        else {\n            standardMaterial.diffuseColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(extension.values.diffuse || [0, 0, 0]);\n        }\n        // Emission\n        if (typeof extension.values.emission === \"string\") {\n            this._loadTexture(gltfRuntime, extension.values.emission, standardMaterial, \"emissiveTexture\", onError);\n        }\n        else {\n            standardMaterial.emissiveColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(extension.values.emission || [0, 0, 0]);\n        }\n        // Specular\n        if (typeof extension.values.specular === \"string\") {\n            this._loadTexture(gltfRuntime, extension.values.specular, standardMaterial, \"specularTexture\", onError);\n        }\n        else {\n            standardMaterial.specularColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(extension.values.specular || [0, 0, 0]);\n        }\n        return true;\n    }\n    _loadTexture(gltfRuntime, id, material, propertyPath, onError) {\n        // Create buffer from texture url\n        _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoaderBase.LoadTextureBufferAsync(gltfRuntime, id, (buffer) => {\n            // Create texture from buffer\n            _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoaderBase.CreateTextureAsync(gltfRuntime, id, buffer, (texture) => (material[propertyPath] = texture));\n        }, onError);\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(new GLTFMaterialsCommonExtension());\n//# sourceMappingURL=glTFMaterialsCommonExtension.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/glTFMaterialsCommonExtension.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/1.0/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/1.0/index.js ***!
  \***********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _glTFBinaryExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFBinaryExtension.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFBinaryExtension.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoader.js\");\n/* harmony import */ var _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./glTFLoaderInterfaces.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderInterfaces.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./glTFLoaderUtils.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFLoaderUtils.js\");\n/* harmony import */ var _glTFMaterialsCommonExtension_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./glTFMaterialsCommonExtension.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/glTFMaterialsCommonExtension.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFBinaryExtension_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_3__, _glTFMaterialsCommonExtension_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_glTFBinaryExtension_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_3__, _glTFMaterialsCommonExtension_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFBinaryExtension_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFBinaryExtension_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoaderUtils_js__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFMaterialsCommonExtension_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFMaterialsCommonExtension_js__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMS4wL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUNUO0FBQ1U7QUFDTDtBQUNhO0FBQ2xELGlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8xLjAvaW5kZXguanM/ODY4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9nbFRGQmluYXJ5RXh0ZW5zaW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTG9hZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTG9hZGVySW50ZXJmYWNlcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vZ2xURkxvYWRlclV0aWxzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTWF0ZXJpYWxzQ29tbW9uRXh0ZW5zaW9uLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/1.0/index.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_lights_image_based.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_lights_image_based.js ***!
  \***************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXT_lights_image_based: () => (/* binding */ EXT_lights_image_based)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.scalar.js */ \"@babylonjs/core/Maths/math.scalar.js\");\n/* harmony import */ var _babylonjs_core_Maths_sphericalPolynomial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/sphericalPolynomial.js */ \"@babylonjs/core/Maths/sphericalPolynomial.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Materials_Textures_rawCubeTexture_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/rawCubeTexture.js */ \"@babylonjs/core/Materials/Textures/rawCubeTexture.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_scalar_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_sphericalPolynomial_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Materials_Textures_rawCubeTexture_js__WEBPACK_IMPORTED_MODULE_3__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_babylonjs_core_Maths_math_scalar_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_sphericalPolynomial_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Materials_Textures_rawCubeTexture_js__WEBPACK_IMPORTED_MODULE_3__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst NAME = \"EXT_lights_image_based\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_lights_image_based/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass EXT_lights_image_based {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._lights;\n    }\n    /** @internal */\n    onLoading() {\n        const extensions = this._loader.gltf.extensions;\n        if (extensions && extensions[this.name]) {\n            const extension = extensions[this.name];\n            this._lights = extension.lights;\n        }\n    }\n    /**\n     * @internal\n     */\n    loadSceneAsync(context, scene) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__.GLTFLoader.LoadExtensionAsync(context, scene, this.name, (extensionContext, extension) => {\n            this._loader._allMaterialsDirtyRequired = true;\n            const promises = new Array();\n            promises.push(this._loader.loadSceneAsync(context, scene));\n            this._loader.logOpen(`${extensionContext}`);\n            const light = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__.ArrayItem.Get(`${extensionContext}/light`, this._lights, extension.light);\n            promises.push(this._loadLightAsync(`/extensions/${this.name}/lights/${extension.light}`, light).then((texture) => {\n                this._loader.babylonScene.environmentTexture = texture;\n            }));\n            this._loader.logClose();\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadLightAsync(context, light) {\n        if (!light._loaded) {\n            const promises = new Array();\n            this._loader.logOpen(`${context}`);\n            const imageData = new Array(light.specularImages.length);\n            for (let mipmap = 0; mipmap < light.specularImages.length; mipmap++) {\n                const faces = light.specularImages[mipmap];\n                imageData[mipmap] = new Array(faces.length);\n                for (let face = 0; face < faces.length; face++) {\n                    const specularImageContext = `${context}/specularImages/${mipmap}/${face}`;\n                    this._loader.logOpen(`${specularImageContext}`);\n                    const index = faces[face];\n                    const image = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__.ArrayItem.Get(specularImageContext, this._loader.gltf.images, index);\n                    promises.push(this._loader.loadImageAsync(`/images/${index}`, image).then((data) => {\n                        imageData[mipmap][face] = data;\n                    }));\n                    this._loader.logClose();\n                }\n            }\n            this._loader.logClose();\n            light._loaded = Promise.all(promises).then(() => {\n                const babylonTexture = new _babylonjs_core_Materials_Textures_rawCubeTexture_js__WEBPACK_IMPORTED_MODULE_3__.RawCubeTexture(this._loader.babylonScene, null, light.specularImageSize);\n                babylonTexture.name = light.name || \"environment\";\n                light._babylonTexture = babylonTexture;\n                if (light.intensity != undefined) {\n                    babylonTexture.level = light.intensity;\n                }\n                if (light.rotation) {\n                    let rotation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__.Quaternion.FromArray(light.rotation);\n                    // Invert the rotation so that positive rotation is counter-clockwise.\n                    if (!this._loader.babylonScene.useRightHandedSystem) {\n                        rotation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__.Quaternion.Inverse(rotation);\n                    }\n                    _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_2__.Matrix.FromQuaternionToRef(rotation, babylonTexture.getReflectionTextureMatrix());\n                }\n                if (!light.irradianceCoefficients) {\n                    throw new Error(`${context}: Irradiance coefficients are missing`);\n                }\n                const sphericalHarmonics = _babylonjs_core_Maths_sphericalPolynomial_js__WEBPACK_IMPORTED_MODULE_1__.SphericalHarmonics.FromArray(light.irradianceCoefficients);\n                sphericalHarmonics.scaleInPlace(light.intensity);\n                sphericalHarmonics.convertIrradianceToLambertianRadiance();\n                const sphericalPolynomial = _babylonjs_core_Maths_sphericalPolynomial_js__WEBPACK_IMPORTED_MODULE_1__.SphericalPolynomial.FromHarmonics(sphericalHarmonics);\n                // Compute the lod generation scale to fit exactly to the number of levels available.\n                const lodGenerationScale = (imageData.length - 1) / _babylonjs_core_Maths_math_scalar_js__WEBPACK_IMPORTED_MODULE_0__.Scalar.Log2(light.specularImageSize);\n                return babylonTexture.updateRGBDAsync(imageData, sphericalPolynomial, lodGenerationScale);\n            });\n        }\n        return light._loaded.then(() => {\n            return light._babylonTexture;\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_4__.GLTFLoader.RegisterExtension(NAME, (loader) => new EXT_lights_image_based(loader));\n//# sourceMappingURL=EXT_lights_image_based.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_lights_image_based.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXT_mesh_gpu_instancing: () => (/* binding */ EXT_mesh_gpu_instancing)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Meshes_thinInstanceMesh_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Meshes/thinInstanceMesh.js */ \"@babylonjs/core/Meshes/thinInstanceMesh.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Meshes_thinInstanceMesh_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Meshes_thinInstanceMesh_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"EXT_mesh_gpu_instancing\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/README.md)\n * [Playground Sample](https://playground.babylonjs.com/#QFIGLW#9)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass EXT_mesh_gpu_instancing {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadNodeAsync(context, node, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, node, this.name, (extensionContext, extension) => {\n            this._loader._disableInstancedMesh++;\n            const promise = this._loader.loadNodeAsync(`/nodes/${node.index}`, node, assign);\n            this._loader._disableInstancedMesh--;\n            if (!node._primitiveBabylonMeshes) {\n                return promise;\n            }\n            const promises = new Array();\n            let instanceCount = 0;\n            const loadAttribute = (attribute) => {\n                if (extension.attributes[attribute] == undefined) {\n                    promises.push(Promise.resolve(null));\n                    return;\n                }\n                const accessor = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.ArrayItem.Get(`${extensionContext}/attributes/${attribute}`, this._loader.gltf.accessors, extension.attributes[attribute]);\n                promises.push(this._loader._loadFloatAccessorAsync(`/accessors/${accessor.bufferView}`, accessor));\n                if (instanceCount === 0) {\n                    instanceCount = accessor.count;\n                }\n                else if (instanceCount !== accessor.count) {\n                    throw new Error(`${extensionContext}/attributes: Instance buffer accessors do not have the same count.`);\n                }\n            };\n            loadAttribute(\"TRANSLATION\");\n            loadAttribute(\"ROTATION\");\n            loadAttribute(\"SCALE\");\n            return promise.then((babylonTransformNode) => {\n                return Promise.all(promises).then(([translationBuffer, rotationBuffer, scaleBuffer]) => {\n                    const matrices = new Float32Array(instanceCount * 16);\n                    _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[0].copyFromFloats(0, 0, 0); // translation\n                    _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Quaternion[0].copyFromFloats(0, 0, 0, 1); // rotation\n                    _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[1].copyFromFloats(1, 1, 1); // scale\n                    for (let i = 0; i < instanceCount; ++i) {\n                        translationBuffer && _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.FromArrayToRef(translationBuffer, i * 3, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[0]);\n                        rotationBuffer && _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Quaternion.FromArrayToRef(rotationBuffer, i * 4, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Quaternion[0]);\n                        scaleBuffer && _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.FromArrayToRef(scaleBuffer, i * 3, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[1]);\n                        _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Matrix.ComposeToRef(_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[1], _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Quaternion[0], _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Vector3[0], _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Matrix[0]);\n                        _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.TmpVectors.Matrix[0].copyToArray(matrices, i * 16);\n                    }\n                    for (const babylonMesh of node._primitiveBabylonMeshes) {\n                        babylonMesh.thinInstanceSetBuffer(\"matrix\", matrices, 16, true);\n                    }\n                    return babylonTransformNode;\n                });\n            });\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new EXT_mesh_gpu_instancing(loader));\n//# sourceMappingURL=EXT_mesh_gpu_instancing.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvRVhUX21lc2hfZ3B1X2luc3RhbmNpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUErRjtBQUN0QztBQUNMO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCO0FBQ0EsaUVBQWlFLFdBQVc7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxREFBUyxRQUFRLGlCQUFpQixjQUFjLFVBQVU7QUFDM0YsaUZBQWlGLG9CQUFvQjtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxpQkFBaUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0RUFBVSxxQ0FBcUM7QUFDbkUsb0JBQW9CLDRFQUFVLDJDQUEyQztBQUN6RSxvQkFBb0IsNEVBQVUscUNBQXFDO0FBQ25FLG9DQUFvQyxtQkFBbUI7QUFDdkQsNkNBQTZDLHlFQUFPLDBDQUEwQyw0RUFBVTtBQUN4RywwQ0FBMEMsNEVBQVUsdUNBQXVDLDRFQUFVO0FBQ3JHLHVDQUF1Qyx5RUFBTyxvQ0FBb0MsNEVBQVU7QUFDNUYsd0JBQXdCLHdFQUFNLGNBQWMsNEVBQVUsYUFBYSw0RUFBVSxnQkFBZ0IsNEVBQVUsYUFBYSw0RUFBVTtBQUM5SCx3QkFBd0IsNEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxzREFBVTtBQUNWLG1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9FWFRfbWVzaF9ncHVfaW5zdGFuY2luZy5qcz85ODZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlY3RvcjMsIFF1YXRlcm5pb24sIE1hdHJpeCwgVG1wVmVjdG9ycyB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0aHMvbWF0aC52ZWN0b3IuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIsIEFycmF5SXRlbSB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5pbXBvcnQgXCJAYmFieWxvbmpzL2NvcmUvTWVzaGVzL3RoaW5JbnN0YW5jZU1lc2guanNcIjtcbmNvbnN0IE5BTUUgPSBcIkVYVF9tZXNoX2dwdV9pbnN0YW5jaW5nXCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvYmxvYi9tYWluL2V4dGVuc2lvbnMvMi4wL1ZlbmRvci9FWFRfbWVzaF9ncHVfaW5zdGFuY2luZy9SRUFETUUubWQpXG4gKiBbUGxheWdyb3VuZCBTYW1wbGVdKGh0dHBzOi8vcGxheWdyb3VuZC5iYWJ5bG9uanMuY29tLyNRRklHTFcjOSlcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEVYVF9tZXNoX2dwdV9pbnN0YW5jaW5nIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbG9hZGVyO1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgbG9hZE5vZGVBc3luYyhjb250ZXh0LCBub2RlLCBhc3NpZ24pIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dGVuc2lvbkFzeW5jKGNvbnRleHQsIG5vZGUsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgdGhpcy5fbG9hZGVyLl9kaXNhYmxlSW5zdGFuY2VkTWVzaCsrO1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZSA9IHRoaXMuX2xvYWRlci5sb2FkTm9kZUFzeW5jKGAvbm9kZXMvJHtub2RlLmluZGV4fWAsIG5vZGUsIGFzc2lnbik7XG4gICAgICAgICAgICB0aGlzLl9sb2FkZXIuX2Rpc2FibGVJbnN0YW5jZWRNZXNoLS07XG4gICAgICAgICAgICBpZiAoIW5vZGUuX3ByaW1pdGl2ZUJhYnlsb25NZXNoZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvbWlzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHByb21pc2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICBsZXQgaW5zdGFuY2VDb3VudCA9IDA7XG4gICAgICAgICAgICBjb25zdCBsb2FkQXR0cmlidXRlID0gKGF0dHJpYnV0ZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChleHRlbnNpb24uYXR0cmlidXRlc1thdHRyaWJ1dGVdID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBwcm9taXNlcy5wdXNoKFByb21pc2UucmVzb2x2ZShudWxsKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgYWNjZXNzb3IgPSBBcnJheUl0ZW0uR2V0KGAke2V4dGVuc2lvbkNvbnRleHR9L2F0dHJpYnV0ZXMvJHthdHRyaWJ1dGV9YCwgdGhpcy5fbG9hZGVyLmdsdGYuYWNjZXNzb3JzLCBleHRlbnNpb24uYXR0cmlidXRlc1thdHRyaWJ1dGVdKTtcbiAgICAgICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5fbG9hZEZsb2F0QWNjZXNzb3JBc3luYyhgL2FjY2Vzc29ycy8ke2FjY2Vzc29yLmJ1ZmZlclZpZXd9YCwgYWNjZXNzb3IpKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5zdGFuY2VDb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZUNvdW50ID0gYWNjZXNzb3IuY291bnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGluc3RhbmNlQ291bnQgIT09IGFjY2Vzc29yLmNvdW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtleHRlbnNpb25Db250ZXh0fS9hdHRyaWJ1dGVzOiBJbnN0YW5jZSBidWZmZXIgYWNjZXNzb3JzIGRvIG5vdCBoYXZlIHRoZSBzYW1lIGNvdW50LmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiVFJBTlNMQVRJT05cIik7XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiUk9UQVRJT05cIik7XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiU0NBTEVcIik7XG4gICAgICAgICAgICByZXR1cm4gcHJvbWlzZS50aGVuKChiYWJ5bG9uVHJhbnNmb3JtTm9kZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoW3RyYW5zbGF0aW9uQnVmZmVyLCByb3RhdGlvbkJ1ZmZlciwgc2NhbGVCdWZmZXJdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1hdHJpY2VzID0gbmV3IEZsb2F0MzJBcnJheShpbnN0YW5jZUNvdW50ICogMTYpO1xuICAgICAgICAgICAgICAgICAgICBUbXBWZWN0b3JzLlZlY3RvcjNbMF0uY29weUZyb21GbG9hdHMoMCwgMCwgMCk7IC8vIHRyYW5zbGF0aW9uXG4gICAgICAgICAgICAgICAgICAgIFRtcFZlY3RvcnMuUXVhdGVybmlvblswXS5jb3B5RnJvbUZsb2F0cygwLCAwLCAwLCAxKTsgLy8gcm90YXRpb25cbiAgICAgICAgICAgICAgICAgICAgVG1wVmVjdG9ycy5WZWN0b3IzWzFdLmNvcHlGcm9tRmxvYXRzKDEsIDEsIDEpOyAvLyBzY2FsZVxuICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGluc3RhbmNlQ291bnQ7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25CdWZmZXIgJiYgVmVjdG9yMy5Gcm9tQXJyYXlUb1JlZih0cmFuc2xhdGlvbkJ1ZmZlciwgaSAqIDMsIFRtcFZlY3RvcnMuVmVjdG9yM1swXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3RhdGlvbkJ1ZmZlciAmJiBRdWF0ZXJuaW9uLkZyb21BcnJheVRvUmVmKHJvdGF0aW9uQnVmZmVyLCBpICogNCwgVG1wVmVjdG9ycy5RdWF0ZXJuaW9uWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlQnVmZmVyICYmIFZlY3RvcjMuRnJvbUFycmF5VG9SZWYoc2NhbGVCdWZmZXIsIGkgKiAzLCBUbXBWZWN0b3JzLlZlY3RvcjNbMV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgTWF0cml4LkNvbXBvc2VUb1JlZihUbXBWZWN0b3JzLlZlY3RvcjNbMV0sIFRtcFZlY3RvcnMuUXVhdGVybmlvblswXSwgVG1wVmVjdG9ycy5WZWN0b3IzWzBdLCBUbXBWZWN0b3JzLk1hdHJpeFswXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBUbXBWZWN0b3JzLk1hdHJpeFswXS5jb3B5VG9BcnJheShtYXRyaWNlcywgaSAqIDE2KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGJhYnlsb25NZXNoIG9mIG5vZGUuX3ByaW1pdGl2ZUJhYnlsb25NZXNoZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhYnlsb25NZXNoLnRoaW5JbnN0YW5jZVNldEJ1ZmZlcihcIm1hdHJpeFwiLCBtYXRyaWNlcywgMTYsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBiYWJ5bG9uVHJhbnNmb3JtTm9kZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBFWFRfbWVzaF9ncHVfaW5zdGFuY2luZyhsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVYVF9tZXNoX2dwdV9pbnN0YW5jaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_meshopt_compression.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_meshopt_compression.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXT_meshopt_compression: () => (/* binding */ EXT_meshopt_compression)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Meshes_Compression_meshoptCompression_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Meshes/Compression/meshoptCompression.js */ \"@babylonjs/core/Meshes/Compression/meshoptCompression.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Meshes_Compression_meshoptCompression_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Meshes_Compression_meshoptCompression_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"EXT_meshopt_compression\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_meshopt_compression/README.md)\n *\n * This extension uses a WebAssembly decoder module from https://github.com/zeux/meshoptimizer/tree/master/js\n * @since 5.0.0\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass EXT_meshopt_compression {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this.enabled = loader.isExtensionUsed(NAME);\n        this._loader = loader;\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadBufferViewAsync(context, bufferView) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.LoadExtensionAsync(context, bufferView, this.name, (extensionContext, extension) => {\n            const bufferViewMeshopt = bufferView;\n            if (bufferViewMeshopt._meshOptData) {\n                return bufferViewMeshopt._meshOptData;\n            }\n            const buffer = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${context}/buffer`, this._loader.gltf.buffers, extension.buffer);\n            bufferViewMeshopt._meshOptData = this._loader.loadBufferAsync(`/buffers/${buffer.index}`, buffer, extension.byteOffset || 0, extension.byteLength).then((buffer) => {\n                return _babylonjs_core_Meshes_Compression_meshoptCompression_js__WEBPACK_IMPORTED_MODULE_1__.MeshoptCompression.Default.decodeGltfBufferAsync(buffer, extension.count, extension.byteStride, extension.mode, extension.filter);\n            });\n            return bufferViewMeshopt._meshOptData;\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new EXT_meshopt_compression(loader));\n//# sourceMappingURL=EXT_meshopt_compression.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvRVhUX21lc2hvcHRfY29tcHJlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlEO0FBQ3FDO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixxREFBUyxRQUFRLFFBQVE7QUFDcEQsc0ZBQXNGLGFBQWE7QUFDbkcsdUJBQXVCLHdHQUFrQjtBQUN6QyxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsbUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0VYVF9tZXNob3B0X2NvbXByZXNzaW9uLmpzPzY5ODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXJyYXlJdGVtLCBHTFRGTG9hZGVyIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmltcG9ydCB7IE1lc2hvcHRDb21wcmVzc2lvbiB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWVzaGVzL0NvbXByZXNzaW9uL21lc2hvcHRDb21wcmVzc2lvbi5qc1wiO1xuY29uc3QgTkFNRSA9IFwiRVhUX21lc2hvcHRfY29tcHJlc3Npb25cIjtcbi8qKlxuICogW1NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iL21haW4vZXh0ZW5zaW9ucy8yLjAvVmVuZG9yL0VYVF9tZXNob3B0X2NvbXByZXNzaW9uL1JFQURNRS5tZClcbiAqXG4gKiBUaGlzIGV4dGVuc2lvbiB1c2VzIGEgV2ViQXNzZW1ibHkgZGVjb2RlciBtb2R1bGUgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vemV1eC9tZXNob3B0aW1pemVyL3RyZWUvbWFzdGVyL2pzXG4gKiBAc2luY2UgNS4wLjBcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEVYVF9tZXNob3B0X2NvbXByZXNzaW9uIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbG9hZGVyO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgbG9hZEJ1ZmZlclZpZXdBc3luYyhjb250ZXh0LCBidWZmZXJWaWV3KSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCBidWZmZXJWaWV3LCB0aGlzLm5hbWUsIChleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlclZpZXdNZXNob3B0ID0gYnVmZmVyVmlldztcbiAgICAgICAgICAgIGlmIChidWZmZXJWaWV3TWVzaG9wdC5fbWVzaE9wdERhdGEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyVmlld01lc2hvcHQuX21lc2hPcHREYXRhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYnVmZmVyID0gQXJyYXlJdGVtLkdldChgJHtjb250ZXh0fS9idWZmZXJgLCB0aGlzLl9sb2FkZXIuZ2x0Zi5idWZmZXJzLCBleHRlbnNpb24uYnVmZmVyKTtcbiAgICAgICAgICAgIGJ1ZmZlclZpZXdNZXNob3B0Ll9tZXNoT3B0RGF0YSA9IHRoaXMuX2xvYWRlci5sb2FkQnVmZmVyQXN5bmMoYC9idWZmZXJzLyR7YnVmZmVyLmluZGV4fWAsIGJ1ZmZlciwgZXh0ZW5zaW9uLmJ5dGVPZmZzZXQgfHwgMCwgZXh0ZW5zaW9uLmJ5dGVMZW5ndGgpLnRoZW4oKGJ1ZmZlcikgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBNZXNob3B0Q29tcHJlc3Npb24uRGVmYXVsdC5kZWNvZGVHbHRmQnVmZmVyQXN5bmMoYnVmZmVyLCBleHRlbnNpb24uY291bnQsIGV4dGVuc2lvbi5ieXRlU3RyaWRlLCBleHRlbnNpb24ubW9kZSwgZXh0ZW5zaW9uLmZpbHRlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBidWZmZXJWaWV3TWVzaG9wdC5fbWVzaE9wdERhdGE7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEVYVF9tZXNob3B0X2NvbXByZXNzaW9uKGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RVhUX21lc2hvcHRfY29tcHJlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_meshopt_compression.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_texture_webp.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_texture_webp.js ***!
  \*********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXT_texture_webp: () => (/* binding */ EXT_texture_webp)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__]);\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst NAME = \"EXT_texture_webp\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_texture_webp/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass EXT_texture_webp {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /** The name of this extension. */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    _loadTextureAsync(context, texture, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.LoadExtensionAsync(context, texture, this.name, (extensionContext, extension) => {\n            const sampler = texture.sampler == undefined ? _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.DefaultSampler : _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${context}/sampler`, this._loader.gltf.samplers, texture.sampler);\n            const image = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${extensionContext}/source`, this._loader.gltf.images, extension.source);\n            return this._loader._createTextureAsync(context, sampler, image, (babylonTexture) => {\n                assign(babylonTexture);\n            }, undefined, !texture._textureInfo.nonColorData);\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new EXT_texture_webp(loader));\n//# sourceMappingURL=EXT_texture_webp.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvRVhUX3RleHR1cmVfd2VicC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QiwyREFBMkQsc0RBQVUsa0JBQWtCLHFEQUFTLFFBQVEsUUFBUTtBQUNoSCwwQkFBMEIscURBQVMsUUFBUSxpQkFBaUI7QUFDNUQ7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0VYVF90ZXh0dXJlX3dlYnAuanM/ZmVhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTFRGTG9hZGVyLCBBcnJheUl0ZW0gfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiRVhUX3RleHR1cmVfd2VicFwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9WZW5kb3IvRVhUX3RleHR1cmVfd2VicC9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBFWFRfdGV4dHVyZV93ZWJwIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLiAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IGxvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBfbG9hZFRleHR1cmVBc3luYyhjb250ZXh0LCB0ZXh0dXJlLCBhc3NpZ24pIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dGVuc2lvbkFzeW5jKGNvbnRleHQsIHRleHR1cmUsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc2FtcGxlciA9IHRleHR1cmUuc2FtcGxlciA9PSB1bmRlZmluZWQgPyBHTFRGTG9hZGVyLkRlZmF1bHRTYW1wbGVyIDogQXJyYXlJdGVtLkdldChgJHtjb250ZXh0fS9zYW1wbGVyYCwgdGhpcy5fbG9hZGVyLmdsdGYuc2FtcGxlcnMsIHRleHR1cmUuc2FtcGxlcik7XG4gICAgICAgICAgICBjb25zdCBpbWFnZSA9IEFycmF5SXRlbS5HZXQoYCR7ZXh0ZW5zaW9uQ29udGV4dH0vc291cmNlYCwgdGhpcy5fbG9hZGVyLmdsdGYuaW1hZ2VzLCBleHRlbnNpb24uc291cmNlKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2FkZXIuX2NyZWF0ZVRleHR1cmVBc3luYyhjb250ZXh0LCBzYW1wbGVyLCBpbWFnZSwgKGJhYnlsb25UZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgYXNzaWduKGJhYnlsb25UZXh0dXJlKTtcbiAgICAgICAgICAgIH0sIHVuZGVmaW5lZCwgIXRleHR1cmUuX3RleHR1cmVJbmZvLm5vbkNvbG9yRGF0YSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEVYVF90ZXh0dXJlX3dlYnAobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FWFRfdGV4dHVyZV93ZWJwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_texture_webp.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/ExtrasAsMetadata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/ExtrasAsMetadata.js ***!
  \*********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExtrasAsMetadata: () => (/* binding */ ExtrasAsMetadata)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__]);\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst NAME = \"ExtrasAsMetadata\";\n/**\n * Store glTF extras (if present) in BJS objects' metadata\n */\nclass ExtrasAsMetadata {\n    _assignExtras(babylonObject, gltfProp) {\n        if (gltfProp.extras && Object.keys(gltfProp.extras).length > 0) {\n            const metadata = (babylonObject.metadata = babylonObject.metadata || {});\n            const gltf = (metadata.gltf = metadata.gltf || {});\n            gltf.extras = gltfProp.extras;\n        }\n    }\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines whether this extension is enabled.\n         */\n        this.enabled = true;\n        this._loader = loader;\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadNodeAsync(context, node, assign) {\n        return this._loader.loadNodeAsync(context, node, (babylonTransformNode) => {\n            this._assignExtras(babylonTransformNode, node);\n            assign(babylonTransformNode);\n        });\n    }\n    /**\n     * @internal\n     */\n    loadCameraAsync(context, camera, assign) {\n        return this._loader.loadCameraAsync(context, camera, (babylonCamera) => {\n            this._assignExtras(babylonCamera, camera);\n            assign(babylonCamera);\n        });\n    }\n    /**\n     * @internal\n     */\n    createMaterial(context, material, babylonDrawMode) {\n        const babylonMaterial = this._loader.createMaterial(context, material, babylonDrawMode);\n        this._assignExtras(babylonMaterial, material);\n        return babylonMaterial;\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new ExtrasAsMetadata(loader));\n//# sourceMappingURL=ExtrasAsMetadata.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvRXh0cmFzQXNNZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG1GQUFtRjtBQUNuRiw2REFBNkQ7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0V4dHJhc0FzTWV0YWRhdGEuanM/NTgyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTFRGTG9hZGVyIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIkV4dHJhc0FzTWV0YWRhdGFcIjtcbi8qKlxuICogU3RvcmUgZ2xURiBleHRyYXMgKGlmIHByZXNlbnQpIGluIEJKUyBvYmplY3RzJyBtZXRhZGF0YVxuICovXG5leHBvcnQgY2xhc3MgRXh0cmFzQXNNZXRhZGF0YSB7XG4gICAgX2Fzc2lnbkV4dHJhcyhiYWJ5bG9uT2JqZWN0LCBnbHRmUHJvcCkge1xuICAgICAgICBpZiAoZ2x0ZlByb3AuZXh0cmFzICYmIE9iamVjdC5rZXlzKGdsdGZQcm9wLmV4dHJhcykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgY29uc3QgbWV0YWRhdGEgPSAoYmFieWxvbk9iamVjdC5tZXRhZGF0YSA9IGJhYnlsb25PYmplY3QubWV0YWRhdGEgfHwge30pO1xuICAgICAgICAgICAgY29uc3QgZ2x0ZiA9IChtZXRhZGF0YS5nbHRmID0gbWV0YWRhdGEuZ2x0ZiB8fCB7fSk7XG4gICAgICAgICAgICBnbHRmLmV4dHJhcyA9IGdsdGZQcm9wLmV4dHJhcztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgd2hldGhlciB0aGlzIGV4dGVuc2lvbiBpcyBlbmFibGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5lbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbG9hZGVyO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgbG9hZE5vZGVBc3luYyhjb250ZXh0LCBub2RlLCBhc3NpZ24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlci5sb2FkTm9kZUFzeW5jKGNvbnRleHQsIG5vZGUsIChiYWJ5bG9uVHJhbnNmb3JtTm9kZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fYXNzaWduRXh0cmFzKGJhYnlsb25UcmFuc2Zvcm1Ob2RlLCBub2RlKTtcbiAgICAgICAgICAgIGFzc2lnbihiYWJ5bG9uVHJhbnNmb3JtTm9kZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkQ2FtZXJhQXN5bmMoY29udGV4dCwgY2FtZXJhLCBhc3NpZ24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlci5sb2FkQ2FtZXJhQXN5bmMoY29udGV4dCwgY2FtZXJhLCAoYmFieWxvbkNhbWVyYSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fYXNzaWduRXh0cmFzKGJhYnlsb25DYW1lcmEsIGNhbWVyYSk7XG4gICAgICAgICAgICBhc3NpZ24oYmFieWxvbkNhbWVyYSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjcmVhdGVNYXRlcmlhbChjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbkRyYXdNb2RlKSB7XG4gICAgICAgIGNvbnN0IGJhYnlsb25NYXRlcmlhbCA9IHRoaXMuX2xvYWRlci5jcmVhdGVNYXRlcmlhbChjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbkRyYXdNb2RlKTtcbiAgICAgICAgdGhpcy5fYXNzaWduRXh0cmFzKGJhYnlsb25NYXRlcmlhbCwgbWF0ZXJpYWwpO1xuICAgICAgICByZXR1cm4gYmFieWxvbk1hdGVyaWFsO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEV4dHJhc0FzTWV0YWRhdGEobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeHRyYXNBc01ldGFkYXRhLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/ExtrasAsMetadata.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.data.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.data.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   animationPointerTree: () => (/* binding */ animationPointerTree)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Animations/animation.js */ \"@babylonjs/core/Animations/animation.js\");\n/* harmony import */ var _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoaderAnimation.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderAnimation.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable @typescript-eslint/naming-convention */\n\n\n\nfunction getColor3(_target, source, offset, scale) {\n    return _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(source, offset).scale(scale);\n}\nfunction getAlpha(_target, source, offset, scale) {\n    return source[offset + 3] * scale;\n}\nfunction getFloat(_target, source, offset, scale) {\n    return source[offset] * scale;\n}\nfunction getMinusFloat(_target, source, offset, scale) {\n    return -source[offset] * scale;\n}\nfunction getNextFloat(_target, source, offset, scale) {\n    return source[offset + 1] * scale;\n}\nfunction getFloatBy2(_target, source, offset, scale) {\n    return source[offset] * scale * 2;\n}\nfunction getTextureTransformTree(textureName) {\n    return {\n        scale: [\n            new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uScale`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vScale`, getNextFloat, () => 2),\n        ],\n        offset: [\n            new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, `${textureName}.uOffset`, getFloat, () => 2),\n            new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, `${textureName}.vOffset`, getNextFloat, () => 2),\n        ],\n        rotation: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, `${textureName}.wAng`, getMinusFloat, () => 1)],\n    };\n}\nclass CameraAnimationPropertyInfo extends _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__.AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys, callback) {\n        callback(target._babylonCamera, this._buildAnimation(name, fps, keys));\n    }\n}\nclass MaterialAnimationPropertyInfo extends _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__.AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys, callback) {\n        for (const fillMode in target._data) {\n            callback(target._data[fillMode].babylonMaterial, this._buildAnimation(name, fps, keys));\n        }\n    }\n}\nclass LightAnimationPropertyInfo extends _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__.AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys, callback) {\n        callback(target._babylonLight, this._buildAnimation(name, fps, keys));\n    }\n}\nconst nodesTree = {\n    __array__: {\n        __target__: true,\n        ..._glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_1__.nodeAnimationData,\n    },\n};\nconst camerasTree = {\n    __array__: {\n        __target__: true,\n        orthographic: {\n            xmag: [\n                new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"orthoLeft\", getMinusFloat, () => 1),\n                new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"orthoRight\", getNextFloat, () => 1),\n            ],\n            ymag: [\n                new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"orthoBottom\", getMinusFloat, () => 1),\n                new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"orthoTop\", getNextFloat, () => 1),\n            ],\n            zfar: [new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)],\n            znear: [new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)],\n        },\n        perspective: {\n            yfov: [new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"fov\", getFloat, () => 1)],\n            zfar: [new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"maxZ\", getFloat, () => 1)],\n            znear: [new CameraAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"minZ\", getFloat, () => 1)],\n        },\n    },\n};\nconst materialsTree = {\n    __array__: {\n        __target__: true,\n        pbrMetallicRoughness: {\n            baseColorFactor: [\n                new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"albedoColor\", getColor3, () => 4),\n                new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"alpha\", getAlpha, () => 4),\n            ],\n            metallicFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"metallic\", getFloat, () => 1)],\n            roughnessFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"roughness\", getFloat, () => 1)],\n            baseColorTexture: {\n                extensions: {\n                    KHR_texture_transform: getTextureTransformTree(\"albedoTexture\"),\n                },\n            },\n            metallicRoughnessTexture: {\n                extensions: {\n                    KHR_texture_transform: getTextureTransformTree(\"metallicRoughnessTexture\"),\n                },\n            },\n        },\n        emissiveFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"emissiveColor\", getColor3, () => 3)],\n        normalTexture: {\n            scale: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"bumpTexture.level\", getFloat, () => 1)],\n            extensions: {\n                KHR_texture_transform: getTextureTransformTree(\"bumpTexture\"),\n            },\n        },\n        occlusionTexture: {\n            strength: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"ambientTextureStrength\", getFloat, () => 1)],\n            extensions: {\n                KHR_texture_transform: getTextureTransformTree(\"ambientTexture\"),\n            },\n        },\n        emissiveTexture: {\n            extensions: {\n                KHR_texture_transform: getTextureTransformTree(\"emissiveTexture\"),\n            },\n        },\n        extensions: {\n            KHR_materials_anisotropy: {\n                anisotropyStrength: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.intensity\", getFloat, () => 1)],\n                anisotropyRotation: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"anisotropy.angle\", getFloat, () => 1)],\n                anisotropyTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"emissiveTexture\"),\n                    },\n                },\n            },\n            KHR_materials_clearcoat: {\n                clearcoatFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.intensity\", getFloat, () => 1)],\n                clearcoatRoughnessFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.roughness\", getFloat, () => 1)],\n                clearcoatTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"clearCoat.texture\"),\n                    },\n                },\n                clearcoatNormalTexture: {\n                    scale: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"clearCoat.bumpTexture.level\", getFloat, () => 1)],\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"clearCoat.bumpTexture\"),\n                    },\n                },\n                clearcoatRoughnessTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"clearCoat.textureRoughness\"),\n                    },\n                },\n            },\n            KHR_materials_dispersion: {\n                dispersion: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"subSurface.dispersion\", getFloat, () => 1)],\n            },\n            KHR_materials_emissive_strength: {\n                emissiveStrength: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"emissiveIntensity\", getFloat, () => 1)],\n            },\n            KHR_materials_ior: {\n                ior: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"indexOfRefraction\", getFloat, () => 1)],\n            },\n            KHR_materials_iridescence: {\n                iridescenceFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"iridescence.intensity\", getFloat, () => 1)],\n                iridescenceIor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"iridescence.indexOfRefraction\", getFloat, () => 1)],\n                iridescenceThicknessMinimum: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"iridescence.minimumThickness\", getFloat, () => 1)],\n                iridescenceThicknessMaximum: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"iridescence.maximumThickness\", getFloat, () => 1)],\n            },\n            KHR_materials_sheen: {\n                sheenColorFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"sheen.color\", getColor3, () => 3)],\n                sheenRoughnessFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"sheen.roughness\", getFloat, () => 1)],\n                sheenColorTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"sheen.texture\"),\n                    },\n                },\n                sheenRoughnessTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"sheen.textureRoughness\"),\n                    },\n                },\n            },\n            KHR_materials_specular: {\n                specularFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"metallicF0Factor\", getFloat, () => 1)],\n                specularColorFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"metallicReflectanceColor\", getColor3, () => 3)],\n                specularTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"metallicReflectanceTexture\"),\n                    },\n                },\n                specularColorTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"reflectanceTexture\"),\n                    },\n                },\n            },\n            KHR_materials_transmission: {\n                transmissionFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"subSurface.refractionIntensity\", getFloat, () => 1)],\n                transmissionTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"subSurface.refractionIntensityTexture\"),\n                    },\n                },\n            },\n            KHR_materials_volume: {\n                attenuationColor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"subSurface.tintColor\", getColor3, () => 3)],\n                attenuationDistance: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"subSurface.tintColorAtDistance\", getFloat, () => 1)],\n                thicknessFactor: [new MaterialAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"subSurface.maximumThickness\", getFloat, () => 1)],\n                thicknessTexture: {\n                    extensions: {\n                        KHR_texture_transform: getTextureTransformTree(\"subSurface.thicknessTexture\"),\n                    },\n                },\n            },\n        },\n    },\n};\nconst extensionsTree = {\n    KHR_lights_punctual: {\n        lights: {\n            __array__: {\n                __target__: true,\n                color: [new LightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_COLOR3, \"diffuse\", getColor3, () => 3)],\n                intensity: [new LightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"intensity\", getFloat, () => 1)],\n                range: [new LightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"range\", getFloat, () => 1)],\n                spot: {\n                    innerConeAngle: [new LightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"innerAngle\", getFloatBy2, () => 1)],\n                    outerConeAngle: [new LightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"angle\", getFloatBy2, () => 1)],\n                },\n            },\n        },\n    },\n};\n/** @internal */\nconst animationPointerTree = {\n    nodes: nodesTree,\n    materials: materialsTree,\n    cameras: camerasTree,\n    extensions: extensionsTree,\n};\n//# sourceMappingURL=KHR_animation_pointer.data.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.data.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.js ***!
  \**************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_animation_pointer: () => (/* binding */ KHR_animation_pointer)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Misc/logger.js */ \"@babylonjs/core/Misc/logger.js\");\n/* harmony import */ var _KHR_animation_pointer_data_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./KHR_animation_pointer.data.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.data.js\");\n/* harmony import */ var _gltfPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gltfPathToObjectConverter.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/gltfPathToObjectConverter.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__, _KHR_animation_pointer_data_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__, _KHR_animation_pointer_data_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nconst NAME = \"KHR_animation_pointer\";\n/**\n * Class to convert an animation pointer path to a smart object that\n * gets data from the animation buffer and creates animations.\n */\nclass AnimationPointerPathToObjectConverter extends _gltfPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_3__.GLTFPathToObjectConverter {\n    constructor(gltf) {\n        super(gltf, _KHR_animation_pointer_data_js__WEBPACK_IMPORTED_MODULE_2__.animationPointerTree);\n    }\n}\n/**\n * [Specification PR](https://github.com/KhronosGroup/glTF/pull/2147)\n * !!! Experimental Extension Subject to Changes !!!\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_animation_pointer {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this._pathToObjectConverter = new AnimationPointerPathToObjectConverter(this._loader.gltf);\n    }\n    /**\n     * Defines whether this extension is enabled.\n     */\n    get enabled() {\n        return this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._pathToObjectConverter; // GC\n    }\n    /**\n     * Loads a glTF animation channel.\n     * @param context The context when loading the asset\n     * @param animationContext The context of the animation when loading the asset\n     * @param animation The glTF animation property\n     * @param channel The glTF animation channel property\n     * @param onLoad Called for each animation loaded\n     * @returns A void promise that resolves when the load is complete or null if not handled\n     */\n    _loadAnimationChannelAsync(context, animationContext, animation, channel, onLoad) {\n        const extension = channel.target.extensions?.KHR_animation_pointer;\n        if (!extension || !this._pathToObjectConverter) {\n            return null;\n        }\n        if (channel.target.path !== \"pointer\" /* AnimationChannelTargetPath.POINTER */) {\n            _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__.Logger.Warn(`${context}/target/path: Value (${channel.target.path}) must be (${\"pointer\" /* AnimationChannelTargetPath.POINTER */}) when using the ${this.name} extension`);\n        }\n        if (channel.target.node != undefined) {\n            _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__.Logger.Warn(`${context}/target/node: Value (${channel.target.node}) must not be present when using the ${this.name} extension`);\n        }\n        const extensionContext = `${context}/extensions/${this.name}`;\n        const pointer = extension.pointer;\n        if (!pointer) {\n            throw new Error(`${extensionContext}: Pointer is missing`);\n        }\n        try {\n            const targetInfo = this._pathToObjectConverter.convert(pointer);\n            return this._loader._loadAnimationChannelFromTargetInfoAsync(context, animationContext, animation, channel, targetInfo, onLoad);\n        }\n        catch (e) {\n            _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_1__.Logger.Warn(`${extensionContext}/pointer: Invalid pointer (${pointer}) skipped`);\n            return null;\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_animation_pointer(loader));\n//# sourceMappingURL=KHR_animation_pointer.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX2FuaW1hdGlvbl9wb2ludGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThDO0FBQ1U7QUFDZTtBQUNJO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsb0ZBQXlCO0FBQzdFO0FBQ0Esb0JBQW9CLGdGQUFvQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksa0VBQU0sU0FBUyxRQUFRLHVCQUF1QixvQkFBb0IsYUFBYSxtREFBbUQsbUJBQW1CLFdBQVc7QUFDNUs7QUFDQTtBQUNBLFlBQVksa0VBQU0sU0FBUyxRQUFRLHVCQUF1QixvQkFBb0IsdUNBQXVDLFdBQVc7QUFDaEk7QUFDQSxvQ0FBb0MsUUFBUSxjQUFjLFVBQVU7QUFDcEU7QUFDQTtBQUNBLCtCQUErQixpQkFBaUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxrRUFBTSxTQUFTLGlCQUFpQiw2QkFBNkIsUUFBUTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0tIUl9hbmltYXRpb25fcG9pbnRlci5qcz83MGE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NaXNjL2xvZ2dlci5qc1wiO1xuaW1wb3J0IHsgYW5pbWF0aW9uUG9pbnRlclRyZWUgfSBmcm9tIFwiLi9LSFJfYW5pbWF0aW9uX3BvaW50ZXIuZGF0YS5qc1wiO1xuaW1wb3J0IHsgR0xURlBhdGhUb09iamVjdENvbnZlcnRlciB9IGZyb20gXCIuL2dsdGZQYXRoVG9PYmplY3RDb252ZXJ0ZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl9hbmltYXRpb25fcG9pbnRlclwiO1xuLyoqXG4gKiBDbGFzcyB0byBjb252ZXJ0IGFuIGFuaW1hdGlvbiBwb2ludGVyIHBhdGggdG8gYSBzbWFydCBvYmplY3QgdGhhdFxuICogZ2V0cyBkYXRhIGZyb20gdGhlIGFuaW1hdGlvbiBidWZmZXIgYW5kIGNyZWF0ZXMgYW5pbWF0aW9ucy5cbiAqL1xuY2xhc3MgQW5pbWF0aW9uUG9pbnRlclBhdGhUb09iamVjdENvbnZlcnRlciBleHRlbmRzIEdMVEZQYXRoVG9PYmplY3RDb252ZXJ0ZXIge1xuICAgIGNvbnN0cnVjdG9yKGdsdGYpIHtcbiAgICAgICAgc3VwZXIoZ2x0ZiwgYW5pbWF0aW9uUG9pbnRlclRyZWUpO1xuICAgIH1cbn1cbi8qKlxuICogW1NwZWNpZmljYXRpb24gUFJdKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9wdWxsLzIxNDcpXG4gKiAhISEgRXhwZXJpbWVudGFsIEV4dGVuc2lvbiBTdWJqZWN0IHRvIENoYW5nZXMgISEhXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfYW5pbWF0aW9uX3BvaW50ZXIge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuX3BhdGhUb09iamVjdENvbnZlcnRlciA9IG5ldyBBbmltYXRpb25Qb2ludGVyUGF0aFRvT2JqZWN0Q29udmVydGVyKHRoaXMuX2xvYWRlci5nbHRmKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB3aGV0aGVyIHRoaXMgZXh0ZW5zaW9uIGlzIGVuYWJsZWQuXG4gICAgICovXG4gICAgZ2V0IGVuYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICAgICAgZGVsZXRlIHRoaXMuX3BhdGhUb09iamVjdENvbnZlcnRlcjsgLy8gR0NcbiAgICB9XG4gICAgLyoqXG4gICAgICogTG9hZHMgYSBnbFRGIGFuaW1hdGlvbiBjaGFubmVsLlxuICAgICAqIEBwYXJhbSBjb250ZXh0IFRoZSBjb250ZXh0IHdoZW4gbG9hZGluZyB0aGUgYXNzZXRcbiAgICAgKiBAcGFyYW0gYW5pbWF0aW9uQ29udGV4dCBUaGUgY29udGV4dCBvZiB0aGUgYW5pbWF0aW9uIHdoZW4gbG9hZGluZyB0aGUgYXNzZXRcbiAgICAgKiBAcGFyYW0gYW5pbWF0aW9uIFRoZSBnbFRGIGFuaW1hdGlvbiBwcm9wZXJ0eVxuICAgICAqIEBwYXJhbSBjaGFubmVsIFRoZSBnbFRGIGFuaW1hdGlvbiBjaGFubmVsIHByb3BlcnR5XG4gICAgICogQHBhcmFtIG9uTG9hZCBDYWxsZWQgZm9yIGVhY2ggYW5pbWF0aW9uIGxvYWRlZFxuICAgICAqIEByZXR1cm5zIEEgdm9pZCBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgbG9hZCBpcyBjb21wbGV0ZSBvciBudWxsIGlmIG5vdCBoYW5kbGVkXG4gICAgICovXG4gICAgX2xvYWRBbmltYXRpb25DaGFubmVsQXN5bmMoY29udGV4dCwgYW5pbWF0aW9uQ29udGV4dCwgYW5pbWF0aW9uLCBjaGFubmVsLCBvbkxvYWQpIHtcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9uID0gY2hhbm5lbC50YXJnZXQuZXh0ZW5zaW9ucz8uS0hSX2FuaW1hdGlvbl9wb2ludGVyO1xuICAgICAgICBpZiAoIWV4dGVuc2lvbiB8fCAhdGhpcy5fcGF0aFRvT2JqZWN0Q29udmVydGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hhbm5lbC50YXJnZXQucGF0aCAhPT0gXCJwb2ludGVyXCIgLyogQW5pbWF0aW9uQ2hhbm5lbFRhcmdldFBhdGguUE9JTlRFUiAqLykge1xuICAgICAgICAgICAgTG9nZ2VyLldhcm4oYCR7Y29udGV4dH0vdGFyZ2V0L3BhdGg6IFZhbHVlICgke2NoYW5uZWwudGFyZ2V0LnBhdGh9KSBtdXN0IGJlICgke1wicG9pbnRlclwiIC8qIEFuaW1hdGlvbkNoYW5uZWxUYXJnZXRQYXRoLlBPSU5URVIgKi99KSB3aGVuIHVzaW5nIHRoZSAke3RoaXMubmFtZX0gZXh0ZW5zaW9uYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNoYW5uZWwudGFyZ2V0Lm5vZGUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBMb2dnZXIuV2FybihgJHtjb250ZXh0fS90YXJnZXQvbm9kZTogVmFsdWUgKCR7Y2hhbm5lbC50YXJnZXQubm9kZX0pIG11c3Qgbm90IGJlIHByZXNlbnQgd2hlbiB1c2luZyB0aGUgJHt0aGlzLm5hbWV9IGV4dGVuc2lvbmApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbkNvbnRleHQgPSBgJHtjb250ZXh0fS9leHRlbnNpb25zLyR7dGhpcy5uYW1lfWA7XG4gICAgICAgIGNvbnN0IHBvaW50ZXIgPSBleHRlbnNpb24ucG9pbnRlcjtcbiAgICAgICAgaWYgKCFwb2ludGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXh0ZW5zaW9uQ29udGV4dH06IFBvaW50ZXIgaXMgbWlzc2luZ2ApO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXRJbmZvID0gdGhpcy5fcGF0aFRvT2JqZWN0Q29udmVydGVyLmNvbnZlcnQocG9pbnRlcik7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9hZGVyLl9sb2FkQW5pbWF0aW9uQ2hhbm5lbEZyb21UYXJnZXRJbmZvQXN5bmMoY29udGV4dCwgYW5pbWF0aW9uQ29udGV4dCwgYW5pbWF0aW9uLCBjaGFubmVsLCB0YXJnZXRJbmZvLCBvbkxvYWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBMb2dnZXIuV2FybihgJHtleHRlbnNpb25Db250ZXh0fS9wb2ludGVyOiBJbnZhbGlkIHBvaW50ZXIgKCR7cG9pbnRlcn0pIHNraXBwZWRgKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxufVxuR0xURkxvYWRlci5SZWdpc3RlckV4dGVuc2lvbihOQU1FLCAobG9hZGVyKSA9PiBuZXcgS0hSX2FuaW1hdGlvbl9wb2ludGVyKGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S0hSX2FuaW1hdGlvbl9wb2ludGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_draco_mesh_compression.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_draco_mesh_compression.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_draco_mesh_compression: () => (/* binding */ KHR_draco_mesh_compression)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Meshes_Compression_dracoCompression_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Meshes/Compression/dracoCompression.js */ \"@babylonjs/core/Meshes/Compression/dracoCompression.js\");\n/* harmony import */ var _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Buffers/buffer.js */ \"@babylonjs/core/Buffers/buffer.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Meshes_Compression_dracoCompression_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Meshes_Compression_dracoCompression_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"KHR_draco_mesh_compression\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_draco_mesh_compression/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_draco_mesh_compression {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines whether to use the normalized flag from the glTF accessor instead of the Draco data. Defaults to true.\n         */\n        this.useNormalizedFlagFromAccessor = true;\n        this._loader = loader;\n        this.enabled = _babylonjs_core_Meshes_Compression_dracoCompression_js__WEBPACK_IMPORTED_MODULE_0__.DracoCompression.DecoderAvailable && this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        delete this.dracoCompression;\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    _loadVertexDataAsync(context, primitive, babylonMesh) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.LoadExtensionAsync(context, primitive, this.name, (extensionContext, extension) => {\n            if (primitive.mode != undefined) {\n                if (primitive.mode !== 4 /* MeshPrimitiveMode.TRIANGLES */ && primitive.mode !== 5 /* MeshPrimitiveMode.TRIANGLE_STRIP */) {\n                    throw new Error(`${context}: Unsupported mode ${primitive.mode}`);\n                }\n            }\n            const attributes = {};\n            const normalized = {};\n            const loadAttribute = (name, kind) => {\n                const uniqueId = extension.attributes[name];\n                if (uniqueId == undefined) {\n                    return;\n                }\n                babylonMesh._delayInfo = babylonMesh._delayInfo || [];\n                if (babylonMesh._delayInfo.indexOf(kind) === -1) {\n                    babylonMesh._delayInfo.push(kind);\n                }\n                attributes[kind] = uniqueId;\n                if (this.useNormalizedFlagFromAccessor) {\n                    const accessor = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.ArrayItem.TryGet(this._loader.gltf.accessors, primitive.attributes[name]);\n                    if (accessor) {\n                        normalized[kind] = accessor.normalized || false;\n                    }\n                }\n            };\n            loadAttribute(\"POSITION\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.PositionKind);\n            loadAttribute(\"NORMAL\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.NormalKind);\n            loadAttribute(\"TANGENT\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.TangentKind);\n            loadAttribute(\"TEXCOORD_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UVKind);\n            loadAttribute(\"TEXCOORD_1\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UV2Kind);\n            loadAttribute(\"TEXCOORD_2\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UV3Kind);\n            loadAttribute(\"TEXCOORD_3\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UV4Kind);\n            loadAttribute(\"TEXCOORD_4\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UV5Kind);\n            loadAttribute(\"TEXCOORD_5\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.UV6Kind);\n            loadAttribute(\"JOINTS_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.MatricesIndicesKind);\n            loadAttribute(\"WEIGHTS_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.MatricesWeightsKind);\n            loadAttribute(\"COLOR_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_1__.VertexBuffer.ColorKind);\n            const bufferView = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.ArrayItem.Get(extensionContext, this._loader.gltf.bufferViews, extension.bufferView);\n            if (!bufferView._dracoBabylonGeometry) {\n                bufferView._dracoBabylonGeometry = this._loader.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView).then((data) => {\n                    const dracoCompression = this.dracoCompression || _babylonjs_core_Meshes_Compression_dracoCompression_js__WEBPACK_IMPORTED_MODULE_0__.DracoCompression.Default;\n                    return dracoCompression._decodeMeshToGeometryForGltfAsync(babylonMesh.name, this._loader.babylonScene, data, attributes, normalized).catch((error) => {\n                        throw new Error(`${context}: ${error.message}`);\n                    });\n                });\n            }\n            return bufferView._dracoBabylonGeometry;\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_draco_mesh_compression(loader));\n//# sourceMappingURL=KHR_draco_mesh_compression.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX2RyYWNvX21lc2hfY29tcHJlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwRjtBQUN6QjtBQUNSO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9HQUFnQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBLHVDQUF1QyxRQUFRLHFCQUFxQixlQUFlO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxxREFBUztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDJFQUFZO0FBQ2xELG9DQUFvQywyRUFBWTtBQUNoRCxxQ0FBcUMsMkVBQVk7QUFDakQsd0NBQXdDLDJFQUFZO0FBQ3BELHdDQUF3QywyRUFBWTtBQUNwRCx3Q0FBd0MsMkVBQVk7QUFDcEQsd0NBQXdDLDJFQUFZO0FBQ3BELHdDQUF3QywyRUFBWTtBQUNwRCx3Q0FBd0MsMkVBQVk7QUFDcEQsc0NBQXNDLDJFQUFZO0FBQ2xELHVDQUF1QywyRUFBWTtBQUNuRCxxQ0FBcUMsMkVBQVk7QUFDakQsK0JBQStCLHFEQUFTO0FBQ3hDO0FBQ0Esb0dBQW9HLGlCQUFpQjtBQUNySCxzRUFBc0Usb0dBQWdCO0FBQ3RGO0FBQ0EsMkNBQTJDLFFBQVEsSUFBSSxjQUFjO0FBQ3JFLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0RBQVU7QUFDVixzRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX2RyYWNvX21lc2hfY29tcHJlc3Npb24uanM/ODAyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEcmFjb0NvbXByZXNzaW9uIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NZXNoZXMvQ29tcHJlc3Npb24vZHJhY29Db21wcmVzc2lvbi5qc1wiO1xuaW1wb3J0IHsgVmVydGV4QnVmZmVyIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9CdWZmZXJzL2J1ZmZlci5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciwgQXJyYXlJdGVtIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl9kcmFjb19tZXNoX2NvbXByZXNzaW9uXCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvYmxvYi9tYWluL2V4dGVuc2lvbnMvMi4wL0tocm9ub3MvS0hSX2RyYWNvX21lc2hfY29tcHJlc3Npb24vUkVBRE1FLm1kKVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX2RyYWNvX21lc2hfY29tcHJlc3Npb24ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyB3aGV0aGVyIHRvIHVzZSB0aGUgbm9ybWFsaXplZCBmbGFnIGZyb20gdGhlIGdsVEYgYWNjZXNzb3IgaW5zdGVhZCBvZiB0aGUgRHJhY28gZGF0YS4gRGVmYXVsdHMgdG8gdHJ1ZS5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudXNlTm9ybWFsaXplZEZsYWdGcm9tQWNjZXNzb3IgPSB0cnVlO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IERyYWNvQ29tcHJlc3Npb24uRGVjb2RlckF2YWlsYWJsZSAmJiB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMuZHJhY29Db21wcmVzc2lvbjtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgX2xvYWRWZXJ0ZXhEYXRhQXN5bmMoY29udGV4dCwgcHJpbWl0aXZlLCBiYWJ5bG9uTWVzaCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgcHJpbWl0aXZlLCB0aGlzLm5hbWUsIChleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24pID0+IHtcbiAgICAgICAgICAgIGlmIChwcmltaXRpdmUubW9kZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJpbWl0aXZlLm1vZGUgIT09IDQgLyogTWVzaFByaW1pdGl2ZU1vZGUuVFJJQU5HTEVTICovICYmIHByaW1pdGl2ZS5tb2RlICE9PSA1IC8qIE1lc2hQcmltaXRpdmVNb2RlLlRSSUFOR0xFX1NUUklQICovKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogVW5zdXBwb3J0ZWQgbW9kZSAke3ByaW1pdGl2ZS5tb2RlfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSB7fTtcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWQgPSB7fTtcbiAgICAgICAgICAgIGNvbnN0IGxvYWRBdHRyaWJ1dGUgPSAobmFtZSwga2luZCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVuaXF1ZUlkID0gZXh0ZW5zaW9uLmF0dHJpYnV0ZXNbbmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKHVuaXF1ZUlkID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJhYnlsb25NZXNoLl9kZWxheUluZm8gPSBiYWJ5bG9uTWVzaC5fZGVsYXlJbmZvIHx8IFtdO1xuICAgICAgICAgICAgICAgIGlmIChiYWJ5bG9uTWVzaC5fZGVsYXlJbmZvLmluZGV4T2Yoa2luZCkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhYnlsb25NZXNoLl9kZWxheUluZm8ucHVzaChraW5kKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYXR0cmlidXRlc1traW5kXSA9IHVuaXF1ZUlkO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnVzZU5vcm1hbGl6ZWRGbGFnRnJvbUFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFjY2Vzc29yID0gQXJyYXlJdGVtLlRyeUdldCh0aGlzLl9sb2FkZXIuZ2x0Zi5hY2Nlc3NvcnMsIHByaW1pdGl2ZS5hdHRyaWJ1dGVzW25hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub3JtYWxpemVkW2tpbmRdID0gYWNjZXNzb3Iubm9ybWFsaXplZCB8fCBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiUE9TSVRJT05cIiwgVmVydGV4QnVmZmVyLlBvc2l0aW9uS2luZCk7XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiTk9STUFMXCIsIFZlcnRleEJ1ZmZlci5Ob3JtYWxLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJUQU5HRU5UXCIsIFZlcnRleEJ1ZmZlci5UYW5nZW50S2luZCk7XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiVEVYQ09PUkRfMFwiLCBWZXJ0ZXhCdWZmZXIuVVZLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJURVhDT09SRF8xXCIsIFZlcnRleEJ1ZmZlci5VVjJLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJURVhDT09SRF8yXCIsIFZlcnRleEJ1ZmZlci5VVjNLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJURVhDT09SRF8zXCIsIFZlcnRleEJ1ZmZlci5VVjRLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJURVhDT09SRF80XCIsIFZlcnRleEJ1ZmZlci5VVjVLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJURVhDT09SRF81XCIsIFZlcnRleEJ1ZmZlci5VVjZLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJKT0lOVFNfMFwiLCBWZXJ0ZXhCdWZmZXIuTWF0cmljZXNJbmRpY2VzS2luZCk7XG4gICAgICAgICAgICBsb2FkQXR0cmlidXRlKFwiV0VJR0hUU18wXCIsIFZlcnRleEJ1ZmZlci5NYXRyaWNlc1dlaWdodHNLaW5kKTtcbiAgICAgICAgICAgIGxvYWRBdHRyaWJ1dGUoXCJDT0xPUl8wXCIsIFZlcnRleEJ1ZmZlci5Db2xvcktpbmQpO1xuICAgICAgICAgICAgY29uc3QgYnVmZmVyVmlldyA9IEFycmF5SXRlbS5HZXQoZXh0ZW5zaW9uQ29udGV4dCwgdGhpcy5fbG9hZGVyLmdsdGYuYnVmZmVyVmlld3MsIGV4dGVuc2lvbi5idWZmZXJWaWV3KTtcbiAgICAgICAgICAgIGlmICghYnVmZmVyVmlldy5fZHJhY29CYWJ5bG9uR2VvbWV0cnkpIHtcbiAgICAgICAgICAgICAgICBidWZmZXJWaWV3Ll9kcmFjb0JhYnlsb25HZW9tZXRyeSA9IHRoaXMuX2xvYWRlci5sb2FkQnVmZmVyVmlld0FzeW5jKGAvYnVmZmVyVmlld3MvJHtidWZmZXJWaWV3LmluZGV4fWAsIGJ1ZmZlclZpZXcpLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZHJhY29Db21wcmVzc2lvbiA9IHRoaXMuZHJhY29Db21wcmVzc2lvbiB8fCBEcmFjb0NvbXByZXNzaW9uLkRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkcmFjb0NvbXByZXNzaW9uLl9kZWNvZGVNZXNoVG9HZW9tZXRyeUZvckdsdGZBc3luYyhiYWJ5bG9uTWVzaC5uYW1lLCB0aGlzLl9sb2FkZXIuYmFieWxvblNjZW5lLCBkYXRhLCBhdHRyaWJ1dGVzLCBub3JtYWxpemVkKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBidWZmZXJWaWV3Ll9kcmFjb0JhYnlsb25HZW9tZXRyeTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuR0xURkxvYWRlci5SZWdpc3RlckV4dGVuc2lvbihOQU1FLCAobG9hZGVyKSA9PiBuZXcgS0hSX2RyYWNvX21lc2hfY29tcHJlc3Npb24obG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfZHJhY29fbWVzaF9jb21wcmVzc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_draco_mesh_compression.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_interactivity.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_interactivity.js ***!
  \**********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_interactivity: () => (/* binding */ KHR_interactivity)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_flowGraphCoordinator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/flowGraphCoordinator.js */ \"@babylonjs/core/FlowGraph/flowGraphCoordinator.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_flowGraph_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/flowGraph.js */ \"@babylonjs/core/FlowGraph/flowGraph.js\");\n/* harmony import */ var _interactivityFunctions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./interactivityFunctions.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityFunctions.js\");\n/* harmony import */ var _interactivityPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./interactivityPathToObjectConverter.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityPathToObjectConverter.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_FlowGraph_flowGraphCoordinator_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_flowGraph_js__WEBPACK_IMPORTED_MODULE_2__, _interactivityFunctions_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_FlowGraph_flowGraphCoordinator_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_flowGraph_js__WEBPACK_IMPORTED_MODULE_2__, _interactivityFunctions_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nconst NAME = \"KHR_interactivity\";\n/**\n * Loader extension for KHR_interactivity\n */\nclass KHR_interactivity {\n    /**\n     * @internal\n     * @param _loader\n     */\n    constructor(_loader) {\n        this._loader = _loader;\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n        this._pathConverter = new _interactivityPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_4__.InteractivityPathToObjectConverter(this._loader.gltf);\n    }\n    dispose() {\n        this._loader = null;\n        delete this._pathConverter;\n    }\n    onReady() {\n        if (!this._loader.babylonScene || !this._pathConverter) {\n            return;\n        }\n        const scene = this._loader.babylonScene;\n        const interactivityDefinition = this._loader.gltf.extensions?.KHR_interactivity;\n        const json = (0,_interactivityFunctions_js__WEBPACK_IMPORTED_MODULE_3__.convertGLTFToSerializedFlowGraph)(interactivityDefinition);\n        const coordinator = new _babylonjs_core_FlowGraph_flowGraphCoordinator_js__WEBPACK_IMPORTED_MODULE_1__.FlowGraphCoordinator({ scene });\n        _babylonjs_core_FlowGraph_flowGraph_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraph.Parse(json, { coordinator, pathConverter: this._pathConverter });\n        coordinator.start();\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_interactivity(loader));\n//# sourceMappingURL=KHR_interactivity.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX2ludGVyYWN0aXZpdHkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQzJDO0FBQ3RCO0FBQ1k7QUFDYztBQUM3RjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzR0FBa0M7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw0RkFBZ0M7QUFDckQsZ0NBQWdDLG1HQUFvQixHQUFHLE9BQU87QUFDOUQsUUFBUSw2RUFBUyxlQUFlLGlEQUFpRDtBQUNqRjtBQUNBO0FBQ0E7QUFDQSxzREFBVTtBQUNWLDZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfaW50ZXJhY3Rpdml0eS5qcz8yNWViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoQ29vcmRpbmF0b3IgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0Zsb3dHcmFwaC9mbG93R3JhcGhDb29yZGluYXRvci5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9GbG93R3JhcGgvZmxvd0dyYXBoLmpzXCI7XG5pbXBvcnQgeyBjb252ZXJ0R0xURlRvU2VyaWFsaXplZEZsb3dHcmFwaCB9IGZyb20gXCIuL2ludGVyYWN0aXZpdHlGdW5jdGlvbnMuanNcIjtcbmltcG9ydCB7IEludGVyYWN0aXZpdHlQYXRoVG9PYmplY3RDb252ZXJ0ZXIgfSBmcm9tIFwiLi9pbnRlcmFjdGl2aXR5UGF0aFRvT2JqZWN0Q29udmVydGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfaW50ZXJhY3Rpdml0eVwiO1xuLyoqXG4gKiBMb2FkZXIgZXh0ZW5zaW9uIGZvciBLSFJfaW50ZXJhY3Rpdml0eVxuICovXG5leHBvcnQgY2xhc3MgS0hSX2ludGVyYWN0aXZpdHkge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqIEBwYXJhbSBfbG9hZGVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoX2xvYWRlcikge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBfbG9hZGVyO1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgICAgICB0aGlzLl9wYXRoQ29udmVydGVyID0gbmV3IEludGVyYWN0aXZpdHlQYXRoVG9PYmplY3RDb252ZXJ0ZXIodGhpcy5fbG9hZGVyLmdsdGYpO1xuICAgIH1cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgICAgICBkZWxldGUgdGhpcy5fcGF0aENvbnZlcnRlcjtcbiAgICB9XG4gICAgb25SZWFkeSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9sb2FkZXIuYmFieWxvblNjZW5lIHx8ICF0aGlzLl9wYXRoQ29udmVydGVyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2NlbmUgPSB0aGlzLl9sb2FkZXIuYmFieWxvblNjZW5lO1xuICAgICAgICBjb25zdCBpbnRlcmFjdGl2aXR5RGVmaW5pdGlvbiA9IHRoaXMuX2xvYWRlci5nbHRmLmV4dGVuc2lvbnM/LktIUl9pbnRlcmFjdGl2aXR5O1xuICAgICAgICBjb25zdCBqc29uID0gY29udmVydEdMVEZUb1NlcmlhbGl6ZWRGbG93R3JhcGgoaW50ZXJhY3Rpdml0eURlZmluaXRpb24pO1xuICAgICAgICBjb25zdCBjb29yZGluYXRvciA9IG5ldyBGbG93R3JhcGhDb29yZGluYXRvcih7IHNjZW5lIH0pO1xuICAgICAgICBGbG93R3JhcGguUGFyc2UoanNvbiwgeyBjb29yZGluYXRvciwgcGF0aENvbnZlcnRlcjogdGhpcy5fcGF0aENvbnZlcnRlciB9KTtcbiAgICAgICAgY29vcmRpbmF0b3Iuc3RhcnQoKTtcbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfaW50ZXJhY3Rpdml0eShsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9pbnRlcmFjdGl2aXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_interactivity.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_lights_punctual.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_lights_punctual.js ***!
  \************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_lights: () => (/* binding */ KHR_lights)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Lights/directionalLight.js */ \"@babylonjs/core/Lights/directionalLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Lights/pointLight.js */ \"@babylonjs/core/Lights/pointLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Lights/spotLight.js */ \"@babylonjs/core/Lights/spotLight.js\");\n/* harmony import */ var _babylonjs_core_Lights_light_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Lights/light.js */ \"@babylonjs/core/Lights/light.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Lights_light_js__WEBPACK_IMPORTED_MODULE_5__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__]);\n([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Lights_light_js__WEBPACK_IMPORTED_MODULE_5__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\nconst NAME = \"KHR_lights_punctual\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_lights_punctual/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_lights {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        delete this._lights;\n    }\n    /** @internal */\n    onLoading() {\n        const extensions = this._loader.gltf.extensions;\n        if (extensions && extensions[this.name]) {\n            const extension = extensions[this.name];\n            this._lights = extension.lights;\n            _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__.ArrayItem.Assign(this._lights);\n        }\n    }\n    /**\n     * @internal\n     */\n    loadNodeAsync(context, node, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__.GLTFLoader.LoadExtensionAsync(context, node, this.name, (extensionContext, extension) => {\n            this._loader._allMaterialsDirtyRequired = true;\n            return this._loader.loadNodeAsync(context, node, (babylonMesh) => {\n                let babylonLight;\n                const light = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__.ArrayItem.Get(extensionContext, this._lights, extension.light);\n                const name = light.name || babylonMesh.name;\n                this._loader.babylonScene._blockEntityCollection = !!this._loader._assetContainer;\n                switch (light.type) {\n                    case \"directional\" /* KHRLightsPunctual_LightType.DIRECTIONAL */: {\n                        const babylonDirectionalLight = new _babylonjs_core_Lights_directionalLight_js__WEBPACK_IMPORTED_MODULE_2__.DirectionalLight(name, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.Backward(), this._loader.babylonScene);\n                        babylonDirectionalLight.position.setAll(0);\n                        babylonLight = babylonDirectionalLight;\n                        break;\n                    }\n                    case \"point\" /* KHRLightsPunctual_LightType.POINT */: {\n                        babylonLight = new _babylonjs_core_Lights_pointLight_js__WEBPACK_IMPORTED_MODULE_3__.PointLight(name, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.Zero(), this._loader.babylonScene);\n                        break;\n                    }\n                    case \"spot\" /* KHRLightsPunctual_LightType.SPOT */: {\n                        const babylonSpotLight = new _babylonjs_core_Lights_spotLight_js__WEBPACK_IMPORTED_MODULE_4__.SpotLight(name, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.Zero(), _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.Backward(), 0, 1, this._loader.babylonScene);\n                        babylonSpotLight.angle = ((light.spot && light.spot.outerConeAngle) || Math.PI / 4) * 2;\n                        babylonSpotLight.innerAngle = ((light.spot && light.spot.innerConeAngle) || 0) * 2;\n                        babylonLight = babylonSpotLight;\n                        break;\n                    }\n                    default: {\n                        this._loader.babylonScene._blockEntityCollection = false;\n                        throw new Error(`${extensionContext}: Invalid light type (${light.type})`);\n                    }\n                }\n                babylonLight._parentContainer = this._loader._assetContainer;\n                this._loader.babylonScene._blockEntityCollection = false;\n                light._babylonLight = babylonLight;\n                babylonLight.falloffType = _babylonjs_core_Lights_light_js__WEBPACK_IMPORTED_MODULE_5__.Light.FALLOFF_GLTF;\n                babylonLight.diffuse = light.color ? _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_1__.Color3.FromArray(light.color) : _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_1__.Color3.White();\n                babylonLight.intensity = light.intensity == undefined ? 1 : light.intensity;\n                babylonLight.range = light.range == undefined ? Number.MAX_VALUE : light.range;\n                babylonLight.parent = babylonMesh;\n                this._loader._babylonLights.push(babylonLight);\n                _glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__.GLTFLoader.AddPointerMetadata(babylonLight, extensionContext);\n                assign(babylonMesh);\n            });\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_6__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_lights(loader));\n//# sourceMappingURL=KHR_lights_punctual.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX2xpZ2h0c19wdW5jdHVhbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRDtBQUNGO0FBQ2lCO0FBQ1o7QUFDRjtBQUNSO0FBQ0M7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFEQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELHdGQUFnQixPQUFPLHlFQUFPO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsNEVBQVUsT0FBTyx5RUFBTztBQUNuRTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsMEVBQVMsT0FBTyx5RUFBTyxTQUFTLHlFQUFPO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGlCQUFpQix3QkFBd0IsV0FBVztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGtFQUFLO0FBQ2hELHFEQUFxRCx1RUFBTSwwQkFBMEIsdUVBQU07QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQVU7QUFDMUI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxzREFBVTtBQUNWLCtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbGlnaHRzX3B1bmN0dWFsLmpzPzVmMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjdG9yMyB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0aHMvbWF0aC52ZWN0b3IuanNcIjtcbmltcG9ydCB7IENvbG9yMyB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0aHMvbWF0aC5jb2xvci5qc1wiO1xuaW1wb3J0IHsgRGlyZWN0aW9uYWxMaWdodCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTGlnaHRzL2RpcmVjdGlvbmFsTGlnaHQuanNcIjtcbmltcG9ydCB7IFBvaW50TGlnaHQgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0xpZ2h0cy9wb2ludExpZ2h0LmpzXCI7XG5pbXBvcnQgeyBTcG90TGlnaHQgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0xpZ2h0cy9zcG90TGlnaHQuanNcIjtcbmltcG9ydCB7IExpZ2h0IH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9MaWdodHMvbGlnaHQuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIsIEFycmF5SXRlbSB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbGlnaHRzX3B1bmN0dWFsXCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvYmxvYi9tYWluL2V4dGVuc2lvbnMvMi4wL0tocm9ub3MvS0hSX2xpZ2h0c19wdW5jdHVhbC9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfbGlnaHRzIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbG9hZGVyO1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICAgICAgZGVsZXRlIHRoaXMuX2xpZ2h0cztcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIG9uTG9hZGluZygpIHtcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9ucyA9IHRoaXMuX2xvYWRlci5nbHRmLmV4dGVuc2lvbnM7XG4gICAgICAgIGlmIChleHRlbnNpb25zICYmIGV4dGVuc2lvbnNbdGhpcy5uYW1lXSkge1xuICAgICAgICAgICAgY29uc3QgZXh0ZW5zaW9uID0gZXh0ZW5zaW9uc1t0aGlzLm5hbWVdO1xuICAgICAgICAgICAgdGhpcy5fbGlnaHRzID0gZXh0ZW5zaW9uLmxpZ2h0cztcbiAgICAgICAgICAgIEFycmF5SXRlbS5Bc3NpZ24odGhpcy5fbGlnaHRzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTm9kZUFzeW5jKGNvbnRleHQsIG5vZGUsIGFzc2lnbikge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbm9kZSwgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9sb2FkZXIuX2FsbE1hdGVyaWFsc0RpcnR5UmVxdWlyZWQgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlci5sb2FkTm9kZUFzeW5jKGNvbnRleHQsIG5vZGUsIChiYWJ5bG9uTWVzaCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBiYWJ5bG9uTGlnaHQ7XG4gICAgICAgICAgICAgICAgY29uc3QgbGlnaHQgPSBBcnJheUl0ZW0uR2V0KGV4dGVuc2lvbkNvbnRleHQsIHRoaXMuX2xpZ2h0cywgZXh0ZW5zaW9uLmxpZ2h0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBuYW1lID0gbGlnaHQubmFtZSB8fCBiYWJ5bG9uTWVzaC5uYW1lO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvYWRlci5iYWJ5bG9uU2NlbmUuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbiA9ICEhdGhpcy5fbG9hZGVyLl9hc3NldENvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGxpZ2h0LnR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRpcmVjdGlvbmFsXCIgLyogS0hSTGlnaHRzUHVuY3R1YWxfTGlnaHRUeXBlLkRJUkVDVElPTkFMICovOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBiYWJ5bG9uRGlyZWN0aW9uYWxMaWdodCA9IG5ldyBEaXJlY3Rpb25hbExpZ2h0KG5hbWUsIFZlY3RvcjMuQmFja3dhcmQoKSwgdGhpcy5fbG9hZGVyLmJhYnlsb25TY2VuZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uRGlyZWN0aW9uYWxMaWdodC5wb3NpdGlvbi5zZXRBbGwoMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uTGlnaHQgPSBiYWJ5bG9uRGlyZWN0aW9uYWxMaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJwb2ludFwiIC8qIEtIUkxpZ2h0c1B1bmN0dWFsX0xpZ2h0VHlwZS5QT0lOVCAqLzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFieWxvbkxpZ2h0ID0gbmV3IFBvaW50TGlnaHQobmFtZSwgVmVjdG9yMy5aZXJvKCksIHRoaXMuX2xvYWRlci5iYWJ5bG9uU2NlbmUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNwb3RcIiAvKiBLSFJMaWdodHNQdW5jdHVhbF9MaWdodFR5cGUuU1BPVCAqLzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYmFieWxvblNwb3RMaWdodCA9IG5ldyBTcG90TGlnaHQobmFtZSwgVmVjdG9yMy5aZXJvKCksIFZlY3RvcjMuQmFja3dhcmQoKSwgMCwgMSwgdGhpcy5fbG9hZGVyLmJhYnlsb25TY2VuZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uU3BvdExpZ2h0LmFuZ2xlID0gKChsaWdodC5zcG90ICYmIGxpZ2h0LnNwb3Qub3V0ZXJDb25lQW5nbGUpIHx8IE1hdGguUEkgLyA0KSAqIDI7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uU3BvdExpZ2h0LmlubmVyQW5nbGUgPSAoKGxpZ2h0LnNwb3QgJiYgbGlnaHQuc3BvdC5pbm5lckNvbmVBbmdsZSkgfHwgMCkgKiAyO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFieWxvbkxpZ2h0ID0gYmFieWxvblNwb3RMaWdodDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2xvYWRlci5iYWJ5bG9uU2NlbmUuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2V4dGVuc2lvbkNvbnRleHR9OiBJbnZhbGlkIGxpZ2h0IHR5cGUgKCR7bGlnaHQudHlwZX0pYCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYmFieWxvbkxpZ2h0Ll9wYXJlbnRDb250YWluZXIgPSB0aGlzLl9sb2FkZXIuX2Fzc2V0Q29udGFpbmVyO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvYWRlci5iYWJ5bG9uU2NlbmUuX2Jsb2NrRW50aXR5Q29sbGVjdGlvbiA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGxpZ2h0Ll9iYWJ5bG9uTGlnaHQgPSBiYWJ5bG9uTGlnaHQ7XG4gICAgICAgICAgICAgICAgYmFieWxvbkxpZ2h0LmZhbGxvZmZUeXBlID0gTGlnaHQuRkFMTE9GRl9HTFRGO1xuICAgICAgICAgICAgICAgIGJhYnlsb25MaWdodC5kaWZmdXNlID0gbGlnaHQuY29sb3IgPyBDb2xvcjMuRnJvbUFycmF5KGxpZ2h0LmNvbG9yKSA6IENvbG9yMy5XaGl0ZSgpO1xuICAgICAgICAgICAgICAgIGJhYnlsb25MaWdodC5pbnRlbnNpdHkgPSBsaWdodC5pbnRlbnNpdHkgPT0gdW5kZWZpbmVkID8gMSA6IGxpZ2h0LmludGVuc2l0eTtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTGlnaHQucmFuZ2UgPSBsaWdodC5yYW5nZSA9PSB1bmRlZmluZWQgPyBOdW1iZXIuTUFYX1ZBTFVFIDogbGlnaHQucmFuZ2U7XG4gICAgICAgICAgICAgICAgYmFieWxvbkxpZ2h0LnBhcmVudCA9IGJhYnlsb25NZXNoO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvYWRlci5fYmFieWxvbkxpZ2h0cy5wdXNoKGJhYnlsb25MaWdodCk7XG4gICAgICAgICAgICAgICAgR0xURkxvYWRlci5BZGRQb2ludGVyTWV0YWRhdGEoYmFieWxvbkxpZ2h0LCBleHRlbnNpb25Db250ZXh0KTtcbiAgICAgICAgICAgICAgICBhc3NpZ24oYmFieWxvbk1lc2gpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9saWdodHMobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbGlnaHRzX3B1bmN0dWFsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_lights_punctual.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_anisotropy.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_anisotropy.js ***!
  \*****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_anisotropy: () => (/* binding */ KHR_materials_anisotropy)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_anisotropy\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_anisotropy)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_anisotropy {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 195;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadIridescencePropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadIridescencePropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.anisotropy.isEnabled = true;\n        babylonMaterial.anisotropy.intensity = properties.anisotropyStrength ?? 0;\n        babylonMaterial.anisotropy.angle = properties.anisotropyRotation ?? 0;\n        if (properties.anisotropyTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/anisotropyTexture`, properties.anisotropyTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Anisotropy Intensity)`;\n                babylonMaterial.anisotropy.texture = texture;\n            }));\n        }\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_anisotropy(loader));\n//# sourceMappingURL=KHR_materials_anisotropy.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19hbmlzb3Ryb3B5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRTtBQUM3QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsU0FBUztBQUNUO0FBQ0E7QUFDQSx5Q0FBeUMscUZBQVc7QUFDcEQsK0JBQStCLFFBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELFFBQVE7QUFDdkUsa0NBQWtDLHNCQUFzQjtBQUN4RDtBQUNBLGFBQWE7QUFDYjtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0Esc0RBQVU7QUFDVixvRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19hbmlzb3Ryb3B5LmpzPzU0MmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiS0hSX21hdGVyaWFsc19hbmlzb3Ryb3B5XCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvdHJlZS9tYWluL2V4dGVuc2lvbnMvMi4wL0tocm9ub3MvS0hSX21hdGVyaWFsc19hbmlzb3Ryb3B5KVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21hdGVyaWFsc19hbmlzb3Ryb3B5IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAxOTU7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZElyaWRlc2NlbmNlUHJvcGVydGllc0FzeW5jKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbiwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpLnRoZW4oKCkgPT4geyB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9sb2FkSXJpZGVzY2VuY2VQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgcHJvcGVydGllcywgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2NvbnRleHR9OiBNYXRlcmlhbCB0eXBlIG5vdCBzdXBwb3J0ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYW5pc290cm9weS5pc0VuYWJsZWQgPSB0cnVlO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYW5pc290cm9weS5pbnRlbnNpdHkgPSBwcm9wZXJ0aWVzLmFuaXNvdHJvcHlTdHJlbmd0aCA/PyAwO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYW5pc290cm9weS5hbmdsZSA9IHByb3BlcnRpZXMuYW5pc290cm9weVJvdGF0aW9uID8/IDA7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmFuaXNvdHJvcHlUZXh0dXJlKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkVGV4dHVyZUluZm9Bc3luYyhgJHtjb250ZXh0fS9hbmlzb3Ryb3B5VGV4dHVyZWAsIHByb3BlcnRpZXMuYW5pc290cm9weVRleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5uYW1lID0gYCR7YmFieWxvbk1hdGVyaWFsLm5hbWV9IChBbmlzb3Ryb3B5IEludGVuc2l0eSlgO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5hbmlzb3Ryb3B5LnRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfYW5pc290cm9weShsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9tYXRlcmlhbHNfYW5pc290cm9weS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_anisotropy.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_clearcoat.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_clearcoat.js ***!
  \****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_clearcoat: () => (/* binding */ KHR_materials_clearcoat)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_clearcoat\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_clearcoat/README.md)\n * [Playground Sample](https://www.babylonjs-playground.com/frame.html#7F7PN6#8)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_clearcoat {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 190;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadClearCoatPropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadClearCoatPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.clearCoat.isEnabled = true;\n        babylonMaterial.clearCoat.useRoughnessFromMainTexture = false;\n        babylonMaterial.clearCoat.remapF0OnInterfaceChange = false;\n        if (properties.clearcoatFactor != undefined) {\n            babylonMaterial.clearCoat.intensity = properties.clearcoatFactor;\n        }\n        else {\n            babylonMaterial.clearCoat.intensity = 0;\n        }\n        if (properties.clearcoatTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/clearcoatTexture`, properties.clearcoatTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (ClearCoat Intensity)`;\n                babylonMaterial.clearCoat.texture = texture;\n            }));\n        }\n        if (properties.clearcoatRoughnessFactor != undefined) {\n            babylonMaterial.clearCoat.roughness = properties.clearcoatRoughnessFactor;\n        }\n        else {\n            babylonMaterial.clearCoat.roughness = 0;\n        }\n        if (properties.clearcoatRoughnessTexture) {\n            properties.clearcoatRoughnessTexture.nonColorData = true;\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/clearcoatRoughnessTexture`, properties.clearcoatRoughnessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (ClearCoat Roughness)`;\n                babylonMaterial.clearCoat.textureRoughness = texture;\n            }));\n        }\n        if (properties.clearcoatNormalTexture) {\n            properties.clearcoatNormalTexture.nonColorData = true;\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/clearcoatNormalTexture`, properties.clearcoatNormalTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (ClearCoat Normal)`;\n                babylonMaterial.clearCoat.bumpTexture = texture;\n            }));\n            babylonMaterial.invertNormalMapX = !babylonMaterial.getScene().useRightHandedSystem;\n            babylonMaterial.invertNormalMapY = babylonMaterial.getScene().useRightHandedSystem;\n            if (properties.clearcoatNormalTexture.scale != undefined) {\n                babylonMaterial.clearCoat.bumpTexture.level = properties.clearcoatNormalTexture.scale;\n            }\n        }\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_clearcoat(loader));\n//# sourceMappingURL=KHR_materials_clearcoat.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19jbGVhcmNvYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDLHFGQUFXO0FBQ3BELCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxRQUFRO0FBQ3ZFLGtDQUFrQyxzQkFBc0I7QUFDeEQ7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELFFBQVE7QUFDdkUsa0NBQWtDLHNCQUFzQjtBQUN4RDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRDtBQUNBO0FBQ0Esc0RBQVU7QUFDVixtRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19jbGVhcmNvYXQuanM/MzVlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX2NsZWFyY29hdFwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl9tYXRlcmlhbHNfY2xlYXJjb2F0L1JFQURNRS5tZClcbiAqIFtQbGF5Z3JvdW5kIFNhbXBsZV0oaHR0cHM6Ly93d3cuYmFieWxvbmpzLXBsYXlncm91bmQuY29tL2ZyYW1lLmh0bWwjN0Y3UE42IzgpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfbWF0ZXJpYWxzX2NsZWFyY29hdCB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMTkwO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRDbGVhckNvYXRQcm9wZXJ0aWVzQXN5bmMoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWRDbGVhckNvYXRQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgcHJvcGVydGllcywgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2NvbnRleHR9OiBNYXRlcmlhbCB0eXBlIG5vdCBzdXBwb3J0ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuY2xlYXJDb2F0LmlzRW5hYmxlZCA9IHRydWU7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQudXNlUm91Z2huZXNzRnJvbU1haW5UZXh0dXJlID0gZmFsc2U7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQucmVtYXBGME9uSW50ZXJmYWNlQ2hhbmdlID0gZmFsc2U7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmNsZWFyY29hdEZhY3RvciAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQuaW50ZW5zaXR5ID0gcHJvcGVydGllcy5jbGVhcmNvYXRGYWN0b3I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuY2xlYXJDb2F0LmludGVuc2l0eSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuY2xlYXJjb2F0VGV4dHVyZSkge1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZFRleHR1cmVJbmZvQXN5bmMoYCR7Y29udGV4dH0vY2xlYXJjb2F0VGV4dHVyZWAsIHByb3BlcnRpZXMuY2xlYXJjb2F0VGV4dHVyZSwgKHRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLm5hbWUgPSBgJHtiYWJ5bG9uTWF0ZXJpYWwubmFtZX0gKENsZWFyQ29hdCBJbnRlbnNpdHkpYDtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuY2xlYXJDb2F0LnRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmNsZWFyY29hdFJvdWdobmVzc0ZhY3RvciAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQucm91Z2huZXNzID0gcHJvcGVydGllcy5jbGVhcmNvYXRSb3VnaG5lc3NGYWN0b3I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuY2xlYXJDb2F0LnJvdWdobmVzcyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuY2xlYXJjb2F0Um91Z2huZXNzVGV4dHVyZSkge1xuICAgICAgICAgICAgcHJvcGVydGllcy5jbGVhcmNvYXRSb3VnaG5lc3NUZXh0dXJlLm5vbkNvbG9yRGF0YSA9IHRydWU7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkVGV4dHVyZUluZm9Bc3luYyhgJHtjb250ZXh0fS9jbGVhcmNvYXRSb3VnaG5lc3NUZXh0dXJlYCwgcHJvcGVydGllcy5jbGVhcmNvYXRSb3VnaG5lc3NUZXh0dXJlLCAodGV4dHVyZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRleHR1cmUubmFtZSA9IGAke2JhYnlsb25NYXRlcmlhbC5uYW1lfSAoQ2xlYXJDb2F0IFJvdWdobmVzcylgO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQudGV4dHVyZVJvdWdobmVzcyA9IHRleHR1cmU7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuY2xlYXJjb2F0Tm9ybWFsVGV4dHVyZSkge1xuICAgICAgICAgICAgcHJvcGVydGllcy5jbGVhcmNvYXROb3JtYWxUZXh0dXJlLm5vbkNvbG9yRGF0YSA9IHRydWU7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkVGV4dHVyZUluZm9Bc3luYyhgJHtjb250ZXh0fS9jbGVhcmNvYXROb3JtYWxUZXh0dXJlYCwgcHJvcGVydGllcy5jbGVhcmNvYXROb3JtYWxUZXh0dXJlLCAodGV4dHVyZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRleHR1cmUubmFtZSA9IGAke2JhYnlsb25NYXRlcmlhbC5uYW1lfSAoQ2xlYXJDb2F0IE5vcm1hbClgO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5jbGVhckNvYXQuYnVtcFRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLmludmVydE5vcm1hbE1hcFggPSAhYmFieWxvbk1hdGVyaWFsLmdldFNjZW5lKCkudXNlUmlnaHRIYW5kZWRTeXN0ZW07XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuaW52ZXJ0Tm9ybWFsTWFwWSA9IGJhYnlsb25NYXRlcmlhbC5nZXRTY2VuZSgpLnVzZVJpZ2h0SGFuZGVkU3lzdGVtO1xuICAgICAgICAgICAgaWYgKHByb3BlcnRpZXMuY2xlYXJjb2F0Tm9ybWFsVGV4dHVyZS5zY2FsZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuY2xlYXJDb2F0LmJ1bXBUZXh0dXJlLmxldmVsID0gcHJvcGVydGllcy5jbGVhcmNvYXROb3JtYWxUZXh0dXJlLnNjYWxlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfY2xlYXJjb2F0KGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S0hSX21hdGVyaWFsc19jbGVhcmNvYXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_clearcoat.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_dispersion.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_dispersion.js ***!
  \*****************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_dispersion: () => (/* binding */ KHR_materials_dispersion)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_dispersion\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/87bd64a7f5e23c84b6aef2e6082069583ed0ddb4/extensions/2.0/Khronos/KHR_materials_dispersion/README.md)\n * @experimental\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_dispersion {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 174;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadDispersionPropertiesAsync(extensionContext, material, babylonMaterial, extension));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadDispersionPropertiesAsync(context, material, babylonMaterial, extension) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        // If transparency isn't enabled already, this extension shouldn't do anything.\n        // i.e. it requires either the KHR_materials_transmission or KHR_materials_translucency extensions.\n        if (!babylonMaterial.subSurface.isRefractionEnabled || !extension.dispersion) {\n            return Promise.resolve();\n        }\n        babylonMaterial.subSurface.isDispersionEnabled = true;\n        babylonMaterial.subSurface.dispersion = extension.dispersion;\n        return Promise.resolve();\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_dispersion(loader));\n//# sourceMappingURL=KHR_materials_dispersion.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19kaXNwZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRTtBQUM3QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDLHFGQUFXO0FBQ3BELCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBVTtBQUNWLG9EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbWF0ZXJpYWxzX2Rpc3BlcnNpb24uanM/Yzk0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX2Rpc3BlcnNpb25cIjtcbi8qKlxuICogW1NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iLzg3YmQ2NGE3ZjVlMjNjODRiNmFlZjJlNjA4MjA2OTU4M2VkMGRkYjQvZXh0ZW5zaW9ucy8yLjAvS2hyb25vcy9LSFJfbWF0ZXJpYWxzX2Rpc3BlcnNpb24vUkVBRE1FLm1kKVxuICogQGV4cGVyaW1lbnRhbFxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21hdGVyaWFsc19kaXNwZXJzaW9uIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAxNzQ7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsQmFzZVByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkRGlzcGVyc2lvblByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsLCBleHRlbnNpb24pKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWREaXNwZXJzaW9uUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwsIGV4dGVuc2lvbikge1xuICAgICAgICBpZiAoIShiYWJ5bG9uTWF0ZXJpYWwgaW5zdGFuY2VvZiBQQlJNYXRlcmlhbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdHJhbnNwYXJlbmN5IGlzbid0IGVuYWJsZWQgYWxyZWFkeSwgdGhpcyBleHRlbnNpb24gc2hvdWxkbid0IGRvIGFueXRoaW5nLlxuICAgICAgICAvLyBpLmUuIGl0IHJlcXVpcmVzIGVpdGhlciB0aGUgS0hSX21hdGVyaWFsc190cmFuc21pc3Npb24gb3IgS0hSX21hdGVyaWFsc190cmFuc2x1Y2VuY3kgZXh0ZW5zaW9ucy5cbiAgICAgICAgaWYgKCFiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5pc1JlZnJhY3Rpb25FbmFibGVkIHx8ICFleHRlbnNpb24uZGlzcGVyc2lvbikge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5zdWJTdXJmYWNlLmlzRGlzcGVyc2lvbkVuYWJsZWQgPSB0cnVlO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5kaXNwZXJzaW9uID0gZXh0ZW5zaW9uLmRpc3BlcnNpb247XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfbWF0ZXJpYWxzX2Rpc3BlcnNpb24obG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbWF0ZXJpYWxzX2Rpc3BlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_dispersion.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_emissive_strength.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_emissive_strength.js ***!
  \************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_emissive_strength: () => (/* binding */ KHR_materials_emissive_strength)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_emissive_strength\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_emissive_strength {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 170;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            return this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial).then(() => {\n                this._loadEmissiveProperties(extensionContext, extension, babylonMaterial);\n            });\n        });\n    }\n    _loadEmissiveProperties(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        if (properties.emissiveStrength !== undefined) {\n            babylonMaterial.emissiveIntensity = properties.emissiveStrength;\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_emissive_strength(loader));\n//# sourceMappingURL=KHR_materials_emissive_strength.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19lbWlzc2l2ZV9zdHJlbmd0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkU7QUFDN0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlDQUF5QyxxRkFBVztBQUNwRCwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBVTtBQUNWLDJEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbWF0ZXJpYWxzX2VtaXNzaXZlX3N0cmVuZ3RoLmpzPzE1YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiS0hSX21hdGVyaWFsc19lbWlzc2l2ZV9zdHJlbmd0aFwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl9tYXRlcmlhbHNfZW1pc3NpdmVfc3RyZW5ndGgvUkVBRE1FLm1kKVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21hdGVyaWFsc19lbWlzc2l2ZV9zdHJlbmd0aCB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMTcwO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlci5sb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9hZEVtaXNzaXZlUHJvcGVydGllcyhleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24sIGJhYnlsb25NYXRlcmlhbCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9sb2FkRW1pc3NpdmVQcm9wZXJ0aWVzKGNvbnRleHQsIHByb3BlcnRpZXMsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICBpZiAoIShiYWJ5bG9uTWF0ZXJpYWwgaW5zdGFuY2VvZiBQQlJNYXRlcmlhbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuZW1pc3NpdmVTdHJlbmd0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuZW1pc3NpdmVJbnRlbnNpdHkgPSBwcm9wZXJ0aWVzLmVtaXNzaXZlU3RyZW5ndGg7XG4gICAgICAgIH1cbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfbWF0ZXJpYWxzX2VtaXNzaXZlX3N0cmVuZ3RoKGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S0hSX21hdGVyaWFsc19lbWlzc2l2ZV9zdHJlbmd0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_emissive_strength.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_ior.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_ior.js ***!
  \**********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_ior: () => (/* binding */ KHR_materials_ior)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_ior\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_ior/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_ior {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 180;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadIorPropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadIorPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        if (properties.ior !== undefined) {\n            babylonMaterial.indexOfRefraction = properties.ior;\n        }\n        else {\n            babylonMaterial.indexOfRefraction = KHR_materials_ior._DEFAULT_IOR;\n        }\n        return Promise.resolve();\n    }\n}\n/**\n * Default ior Value from the spec.\n */\nKHR_materials_ior._DEFAULT_IOR = 1.5;\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_ior(loader));\n//# sourceMappingURL=KHR_materials_ior.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19pb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlDQUF5QyxxRkFBVztBQUNwRCwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQVU7QUFDViw2QyIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19pb3IuanM/ZjYxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX2lvclwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl9tYXRlcmlhbHNfaW9yL1JFQURNRS5tZClcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEtIUl9tYXRlcmlhbHNfaW9yIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAxODA7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZElvclByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24sIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKCgpID0+IHsgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfbG9hZElvclByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBwcm9wZXJ0aWVzLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgaWYgKCEoYmFieWxvbk1hdGVyaWFsIGluc3RhbmNlb2YgUEJSTWF0ZXJpYWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udGV4dH06IE1hdGVyaWFsIHR5cGUgbm90IHN1cHBvcnRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmlvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuaW5kZXhPZlJlZnJhY3Rpb24gPSBwcm9wZXJ0aWVzLmlvcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5pbmRleE9mUmVmcmFjdGlvbiA9IEtIUl9tYXRlcmlhbHNfaW9yLl9ERUZBVUxUX0lPUjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxufVxuLyoqXG4gKiBEZWZhdWx0IGlvciBWYWx1ZSBmcm9tIHRoZSBzcGVjLlxuICovXG5LSFJfbWF0ZXJpYWxzX2lvci5fREVGQVVMVF9JT1IgPSAxLjU7XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfbWF0ZXJpYWxzX2lvcihsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9tYXRlcmlhbHNfaW9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_ior.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_iridescence.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_iridescence.js ***!
  \******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_iridescence: () => (/* binding */ KHR_materials_iridescence)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_iridescence\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_iridescence/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_iridescence {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 195;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadIridescencePropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadIridescencePropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.iridescence.isEnabled = true;\n        babylonMaterial.iridescence.intensity = properties.iridescenceFactor ?? 0;\n        babylonMaterial.iridescence.indexOfRefraction = properties.iridescenceIor ?? properties.iridescenceIOR ?? 1.3;\n        babylonMaterial.iridescence.minimumThickness = properties.iridescenceThicknessMinimum ?? 100;\n        babylonMaterial.iridescence.maximumThickness = properties.iridescenceThicknessMaximum ?? 400;\n        if (properties.iridescenceTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/iridescenceTexture`, properties.iridescenceTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Iridescence Intensity)`;\n                babylonMaterial.iridescence.texture = texture;\n            }));\n        }\n        if (properties.iridescenceThicknessTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/iridescenceThicknessTexture`, properties.iridescenceThicknessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Iridescence Thickness)`;\n                babylonMaterial.iridescence.thicknessTexture = texture;\n            }));\n        }\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_iridescence(loader));\n//# sourceMappingURL=KHR_materials_iridescence.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19pcmlkZXNjZW5jZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkU7QUFDN0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDLHFGQUFXO0FBQ3BELCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQSxzREFBVTtBQUNWLHFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbWF0ZXJpYWxzX2lyaWRlc2NlbmNlLmpzPzg0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiS0hSX21hdGVyaWFsc19pcmlkZXNjZW5jZVwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl9tYXRlcmlhbHNfaXJpZGVzY2VuY2UvUkVBRE1FLm1kKVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21hdGVyaWFsc19pcmlkZXNjZW5jZSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMTk1O1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRJcmlkZXNjZW5jZVByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24sIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKCgpID0+IHsgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfbG9hZElyaWRlc2NlbmNlUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIHByb3BlcnRpZXMsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICBpZiAoIShiYWJ5bG9uTWF0ZXJpYWwgaW5zdGFuY2VvZiBQQlJNYXRlcmlhbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgYmFieWxvbk1hdGVyaWFsLmlyaWRlc2NlbmNlLmlzRW5hYmxlZCA9IHRydWU7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5pcmlkZXNjZW5jZS5pbnRlbnNpdHkgPSBwcm9wZXJ0aWVzLmlyaWRlc2NlbmNlRmFjdG9yID8/IDA7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5pcmlkZXNjZW5jZS5pbmRleE9mUmVmcmFjdGlvbiA9IHByb3BlcnRpZXMuaXJpZGVzY2VuY2VJb3IgPz8gcHJvcGVydGllcy5pcmlkZXNjZW5jZUlPUiA/PyAxLjM7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5pcmlkZXNjZW5jZS5taW5pbXVtVGhpY2tuZXNzID0gcHJvcGVydGllcy5pcmlkZXNjZW5jZVRoaWNrbmVzc01pbmltdW0gPz8gMTAwO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuaXJpZGVzY2VuY2UubWF4aW11bVRoaWNrbmVzcyA9IHByb3BlcnRpZXMuaXJpZGVzY2VuY2VUaGlja25lc3NNYXhpbXVtID8/IDQwMDtcbiAgICAgICAgaWYgKHByb3BlcnRpZXMuaXJpZGVzY2VuY2VUZXh0dXJlKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkVGV4dHVyZUluZm9Bc3luYyhgJHtjb250ZXh0fS9pcmlkZXNjZW5jZVRleHR1cmVgLCBwcm9wZXJ0aWVzLmlyaWRlc2NlbmNlVGV4dHVyZSwgKHRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLm5hbWUgPSBgJHtiYWJ5bG9uTWF0ZXJpYWwubmFtZX0gKElyaWRlc2NlbmNlIEludGVuc2l0eSlgO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5pcmlkZXNjZW5jZS50ZXh0dXJlID0gdGV4dHVyZTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcGVydGllcy5pcmlkZXNjZW5jZVRoaWNrbmVzc1RleHR1cmUpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGAke2NvbnRleHR9L2lyaWRlc2NlbmNlVGhpY2tuZXNzVGV4dHVyZWAsIHByb3BlcnRpZXMuaXJpZGVzY2VuY2VUaGlja25lc3NUZXh0dXJlLCAodGV4dHVyZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRleHR1cmUubmFtZSA9IGAke2JhYnlsb25NYXRlcmlhbC5uYW1lfSAoSXJpZGVzY2VuY2UgVGhpY2tuZXNzKWA7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLmlyaWRlc2NlbmNlLnRoaWNrbmVzc1RleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfaXJpZGVzY2VuY2UobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbWF0ZXJpYWxzX2lyaWRlc2NlbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_iridescence.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.js ***!
  \****************************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_pbrSpecularGlossiness: () => (/* binding */ KHR_materials_pbrSpecularGlossiness)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"KHR_materials_pbrSpecularGlossiness\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Archived/KHR_materials_pbrSpecularGlossiness/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_pbrSpecularGlossiness {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 200;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadSpecularGlossinessPropertiesAsync(extensionContext, extension, babylonMaterial));\n            this._loader.loadMaterialAlphaProperties(context, material, babylonMaterial);\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadSpecularGlossinessPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.metallic = null;\n        babylonMaterial.roughness = null;\n        if (properties.diffuseFactor) {\n            babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.FromArray(properties.diffuseFactor);\n            babylonMaterial.alpha = properties.diffuseFactor[3];\n        }\n        else {\n            babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.White();\n        }\n        babylonMaterial.reflectivityColor = properties.specularFactor ? _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.FromArray(properties.specularFactor) : _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.White();\n        babylonMaterial.microSurface = properties.glossinessFactor == undefined ? 1 : properties.glossinessFactor;\n        if (properties.diffuseTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/diffuseTexture`, properties.diffuseTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Diffuse)`;\n                babylonMaterial.albedoTexture = texture;\n            }));\n        }\n        if (properties.specularGlossinessTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/specularGlossinessTexture`, properties.specularGlossinessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Specular Glossiness)`;\n                babylonMaterial.reflectivityTexture = texture;\n                babylonMaterial.reflectivityTexture.hasAlpha = true;\n            }));\n            babylonMaterial.useMicroSurfaceFromReflectivityMapAlpha = true;\n        }\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_pbrSpecularGlossiness(loader));\n//# sourceMappingURL=KHR_materials_pbrSpecularGlossiness.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19wYnJTcGVjdWxhckdsb3NzaW5lc3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2RDtBQUNjO0FBQzdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDLHFGQUFXO0FBQ3BELCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUVBQU07QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHVFQUFNO0FBQ2hEO0FBQ0Esd0VBQXdFLHVFQUFNLHdDQUF3Qyx1RUFBTTtBQUM1SDtBQUNBO0FBQ0EsK0RBQStELFFBQVE7QUFDdkUsa0NBQWtDLHNCQUFzQjtBQUN4RDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsK0RBQStELFFBQVE7QUFDdkUsa0NBQWtDLHNCQUFzQjtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0tIUl9tYXRlcmlhbHNfcGJyU3BlY3VsYXJHbG9zc2luZXNzLmpzP2M0YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3IzIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRocy9tYXRoLmNvbG9yLmpzXCI7XG5pbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX3BiclNwZWN1bGFyR2xvc3NpbmVzc1wiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9BcmNoaXZlZC9LSFJfbWF0ZXJpYWxzX3BiclNwZWN1bGFyR2xvc3NpbmVzcy9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfbWF0ZXJpYWxzX3BiclNwZWN1bGFyR2xvc3NpbmVzcyB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMjAwO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbEJhc2VQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkU3BlY3VsYXJHbG9zc2luZXNzUHJvcGVydGllc0FzeW5jKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbiwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICB0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsQWxwaGFQcm9wZXJ0aWVzKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKCgpID0+IHsgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfbG9hZFNwZWN1bGFyR2xvc3NpbmVzc1Byb3BlcnRpZXNBc3luYyhjb250ZXh0LCBwcm9wZXJ0aWVzLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgaWYgKCEoYmFieWxvbk1hdGVyaWFsIGluc3RhbmNlb2YgUEJSTWF0ZXJpYWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udGV4dH06IE1hdGVyaWFsIHR5cGUgbm90IHN1cHBvcnRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5tZXRhbGxpYyA9IG51bGw7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5yb3VnaG5lc3MgPSBudWxsO1xuICAgICAgICBpZiAocHJvcGVydGllcy5kaWZmdXNlRmFjdG9yKSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvQ29sb3IgPSBDb2xvcjMuRnJvbUFycmF5KHByb3BlcnRpZXMuZGlmZnVzZUZhY3Rvcik7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxwaGEgPSBwcm9wZXJ0aWVzLmRpZmZ1c2VGYWN0b3JbM107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvQ29sb3IgPSBDb2xvcjMuV2hpdGUoKTtcbiAgICAgICAgfVxuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwucmVmbGVjdGl2aXR5Q29sb3IgPSBwcm9wZXJ0aWVzLnNwZWN1bGFyRmFjdG9yID8gQ29sb3IzLkZyb21BcnJheShwcm9wZXJ0aWVzLnNwZWN1bGFyRmFjdG9yKSA6IENvbG9yMy5XaGl0ZSgpO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwubWljcm9TdXJmYWNlID0gcHJvcGVydGllcy5nbG9zc2luZXNzRmFjdG9yID09IHVuZGVmaW5lZCA/IDEgOiBwcm9wZXJ0aWVzLmdsb3NzaW5lc3NGYWN0b3I7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLmRpZmZ1c2VUZXh0dXJlKSB7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkVGV4dHVyZUluZm9Bc3luYyhgJHtjb250ZXh0fS9kaWZmdXNlVGV4dHVyZWAsIHByb3BlcnRpZXMuZGlmZnVzZVRleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5uYW1lID0gYCR7YmFieWxvbk1hdGVyaWFsLm5hbWV9IChEaWZmdXNlKWA7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLmFsYmVkb1RleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLnNwZWN1bGFyR2xvc3NpbmVzc1RleHR1cmUpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGAke2NvbnRleHR9L3NwZWN1bGFyR2xvc3NpbmVzc1RleHR1cmVgLCBwcm9wZXJ0aWVzLnNwZWN1bGFyR2xvc3NpbmVzc1RleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5uYW1lID0gYCR7YmFieWxvbk1hdGVyaWFsLm5hbWV9IChTcGVjdWxhciBHbG9zc2luZXNzKWA7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnJlZmxlY3Rpdml0eVRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5yZWZsZWN0aXZpdHlUZXh0dXJlLmhhc0FscGhhID0gdHJ1ZTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC51c2VNaWNyb1N1cmZhY2VGcm9tUmVmbGVjdGl2aXR5TWFwQWxwaGEgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfcGJyU3BlY3VsYXJHbG9zc2luZXNzKGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9S0hSX21hdGVyaWFsc19wYnJTcGVjdWxhckdsb3NzaW5lc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_sheen.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_sheen.js ***!
  \************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_sheen: () => (/* binding */ KHR_materials_sheen)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"KHR_materials_sheen\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_sheen/README.md)\n * [Playground Sample](https://www.babylonjs-playground.com/frame.html#BNIZX6#4)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_sheen {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 190;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadSheenPropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadSheenPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.sheen.isEnabled = true;\n        babylonMaterial.sheen.intensity = 1;\n        if (properties.sheenColorFactor != undefined) {\n            babylonMaterial.sheen.color = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(properties.sheenColorFactor);\n        }\n        else {\n            babylonMaterial.sheen.color = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.Black();\n        }\n        if (properties.sheenColorTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/sheenColorTexture`, properties.sheenColorTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Sheen Color)`;\n                babylonMaterial.sheen.texture = texture;\n            }));\n        }\n        if (properties.sheenRoughnessFactor !== undefined) {\n            babylonMaterial.sheen.roughness = properties.sheenRoughnessFactor;\n        }\n        else {\n            babylonMaterial.sheen.roughness = 0;\n        }\n        if (properties.sheenRoughnessTexture) {\n            properties.sheenRoughnessTexture.nonColorData = true;\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/sheenRoughnessTexture`, properties.sheenRoughnessTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Sheen Roughness)`;\n                babylonMaterial.sheen.textureRoughness = texture;\n            }));\n        }\n        babylonMaterial.sheen.albedoScaling = true;\n        babylonMaterial.sheen.useRoughnessFromMainTexture = false;\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_sheen(loader));\n//# sourceMappingURL=KHR_materials_sheen.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19zaGVlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQ2U7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsU0FBUztBQUNUO0FBQ0E7QUFDQSx5Q0FBeUMscUZBQVc7QUFDcEQsK0JBQStCLFFBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx1RUFBTTtBQUNoRDtBQUNBO0FBQ0EsMENBQTBDLHVFQUFNO0FBQ2hEO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCxRQUFRO0FBQ3ZFLGtDQUFrQyxzQkFBc0I7QUFDeEQ7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQSxzREFBVTtBQUNWLCtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbWF0ZXJpYWxzX3NoZWVuLmpzP2M4ZTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuaW1wb3J0IHsgQ29sb3IzIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRocy9tYXRoLmNvbG9yLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX3NoZWVuXCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvYmxvYi9tYWluL2V4dGVuc2lvbnMvMi4wL0tocm9ub3MvS0hSX21hdGVyaWFsc19zaGVlbi9SRUFETUUubWQpXG4gKiBbUGxheWdyb3VuZCBTYW1wbGVdKGh0dHBzOi8vd3d3LmJhYnlsb25qcy1wbGF5Z3JvdW5kLmNvbS9mcmFtZS5odG1sI0JOSVpYNiM0KVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21hdGVyaWFsc19zaGVlbiB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMTkwO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRTaGVlblByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24sIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKCgpID0+IHsgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfbG9hZFNoZWVuUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIHByb3BlcnRpZXMsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICBpZiAoIShiYWJ5bG9uTWF0ZXJpYWwgaW5zdGFuY2VvZiBQQlJNYXRlcmlhbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtjb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLmlzRW5hYmxlZCA9IHRydWU7XG4gICAgICAgIGJhYnlsb25NYXRlcmlhbC5zaGVlbi5pbnRlbnNpdHkgPSAxO1xuICAgICAgICBpZiAocHJvcGVydGllcy5zaGVlbkNvbG9yRmFjdG9yICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLmNvbG9yID0gQ29sb3IzLkZyb21BcnJheShwcm9wZXJ0aWVzLnNoZWVuQ29sb3JGYWN0b3IpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLmNvbG9yID0gQ29sb3IzLkJsYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuc2hlZW5Db2xvclRleHR1cmUpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGAke2NvbnRleHR9L3NoZWVuQ29sb3JUZXh0dXJlYCwgcHJvcGVydGllcy5zaGVlbkNvbG9yVGV4dHVyZSwgKHRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLm5hbWUgPSBgJHtiYWJ5bG9uTWF0ZXJpYWwubmFtZX0gKFNoZWVuIENvbG9yKWA7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLnRleHR1cmUgPSB0ZXh0dXJlO1xuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLnNoZWVuUm91Z2huZXNzRmFjdG9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5zaGVlbi5yb3VnaG5lc3MgPSBwcm9wZXJ0aWVzLnNoZWVuUm91Z2huZXNzRmFjdG9yO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLnJvdWdobmVzcyA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuc2hlZW5Sb3VnaG5lc3NUZXh0dXJlKSB7XG4gICAgICAgICAgICBwcm9wZXJ0aWVzLnNoZWVuUm91Z2huZXNzVGV4dHVyZS5ub25Db2xvckRhdGEgPSB0cnVlO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZFRleHR1cmVJbmZvQXN5bmMoYCR7Y29udGV4dH0vc2hlZW5Sb3VnaG5lc3NUZXh0dXJlYCwgcHJvcGVydGllcy5zaGVlblJvdWdobmVzc1RleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5uYW1lID0gYCR7YmFieWxvbk1hdGVyaWFsLm5hbWV9IChTaGVlbiBSb3VnaG5lc3MpYDtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc2hlZW4udGV4dHVyZVJvdWdobmVzcyA9IHRleHR1cmU7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNoZWVuLmFsYmVkb1NjYWxpbmcgPSB0cnVlO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc2hlZW4udXNlUm91Z2huZXNzRnJvbU1haW5UZXh0dXJlID0gZmFsc2U7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfc2hlZW4obG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbWF0ZXJpYWxzX3NoZWVuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_sheen.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_specular.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_specular.js ***!
  \***************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_specular: () => (/* binding */ KHR_materials_specular)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"KHR_materials_specular\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_specular/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_specular {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 190;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadSpecularPropertiesAsync(extensionContext, extension, babylonMaterial));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadSpecularPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        if (properties.specularFactor !== undefined) {\n            babylonMaterial.metallicF0Factor = properties.specularFactor;\n        }\n        if (properties.specularColorFactor !== undefined) {\n            babylonMaterial.metallicReflectanceColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(properties.specularColorFactor);\n        }\n        if (properties.specularTexture) {\n            properties.specularTexture.nonColorData = true;\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/specularTexture`, properties.specularTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Specular F0 Strength)`;\n                babylonMaterial.metallicReflectanceTexture = texture;\n                babylonMaterial.useOnlyMetallicFromMetallicReflectanceTexture = true;\n            }));\n        }\n        if (properties.specularColorTexture) {\n            promises.push(this._loader.loadTextureInfoAsync(`${context}/specularColorTexture`, properties.specularColorTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Specular F0 Color)`;\n                babylonMaterial.reflectanceTexture = texture;\n            }));\n        }\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_specular(loader));\n//# sourceMappingURL=KHR_materials_specular.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc19zcGVjdWxhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQ2U7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDLHFGQUFXO0FBQ3BELCtCQUErQixRQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCx1RUFBTTtBQUM3RDtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RSxrQ0FBa0Msc0JBQXNCO0FBQ3hEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLCtEQUErRCxRQUFRO0FBQ3ZFLGtDQUFrQyxzQkFBc0I7QUFDeEQ7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBLHNEQUFVO0FBQ1Ysa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0tIUl9tYXRlcmlhbHNfc3BlY3VsYXIuanM/ZmZlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5pbXBvcnQgeyBDb2xvcjMgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGhzL21hdGguY29sb3IuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl9tYXRlcmlhbHNfc3BlY3VsYXJcIjtcbi8qKlxuICogW1NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iL21haW4vZXh0ZW5zaW9ucy8yLjAvS2hyb25vcy9LSFJfbWF0ZXJpYWxzX3NwZWN1bGFyL1JFQURNRS5tZClcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEtIUl9tYXRlcmlhbHNfc3BlY3VsYXIge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVmaW5lcyBhIG51bWJlciB0aGF0IGRldGVybWluZXMgdGhlIG9yZGVyIHRoZSBleHRlbnNpb25zIGFyZSBhcHBsaWVkLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5vcmRlciA9IDE5MDtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbG9hZGVyO1xuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0aGlzLl9sb2FkZXIuaXNFeHRlbnNpb25Vc2VkKE5BTUUpO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgbG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dGVuc2lvbkFzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCB0aGlzLm5hbWUsIChleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkU3BlY3VsYXJQcm9wZXJ0aWVzQXN5bmMoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWRTcGVjdWxhclByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBwcm9wZXJ0aWVzLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgaWYgKCEoYmFieWxvbk1hdGVyaWFsIGluc3RhbmNlb2YgUEJSTWF0ZXJpYWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udGV4dH06IE1hdGVyaWFsIHR5cGUgbm90IHN1cHBvcnRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzLnNwZWN1bGFyRmFjdG9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5tZXRhbGxpY0YwRmFjdG9yID0gcHJvcGVydGllcy5zcGVjdWxhckZhY3RvcjtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcGVydGllcy5zcGVjdWxhckNvbG9yRmFjdG9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5tZXRhbGxpY1JlZmxlY3RhbmNlQ29sb3IgPSBDb2xvcjMuRnJvbUFycmF5KHByb3BlcnRpZXMuc3BlY3VsYXJDb2xvckZhY3Rvcik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuc3BlY3VsYXJUZXh0dXJlKSB7XG4gICAgICAgICAgICBwcm9wZXJ0aWVzLnNwZWN1bGFyVGV4dHVyZS5ub25Db2xvckRhdGEgPSB0cnVlO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZFRleHR1cmVJbmZvQXN5bmMoYCR7Y29udGV4dH0vc3BlY3VsYXJUZXh0dXJlYCwgcHJvcGVydGllcy5zcGVjdWxhclRleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5uYW1lID0gYCR7YmFieWxvbk1hdGVyaWFsLm5hbWV9IChTcGVjdWxhciBGMCBTdHJlbmd0aClgO1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5tZXRhbGxpY1JlZmxlY3RhbmNlVGV4dHVyZSA9IHRleHR1cmU7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnVzZU9ubHlNZXRhbGxpY0Zyb21NZXRhbGxpY1JlZmxlY3RhbmNlVGV4dHVyZSA9IHRydWU7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByb3BlcnRpZXMuc3BlY3VsYXJDb2xvclRleHR1cmUpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGAke2NvbnRleHR9L3NwZWN1bGFyQ29sb3JUZXh0dXJlYCwgcHJvcGVydGllcy5zcGVjdWxhckNvbG9yVGV4dHVyZSwgKHRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLm5hbWUgPSBgJHtiYWJ5bG9uTWF0ZXJpYWwubmFtZX0gKFNwZWN1bGFyIEYwIENvbG9yKWA7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnJlZmxlY3RhbmNlVGV4dHVyZSA9IHRleHR1cmU7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKS50aGVuKCgpID0+IHsgfSk7XG4gICAgfVxufVxuR0xURkxvYWRlci5SZWdpc3RlckV4dGVuc2lvbihOQU1FLCAobG9hZGVyKSA9PiBuZXcgS0hSX21hdGVyaWFsc19zcGVjdWxhcihsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9tYXRlcmlhbHNfc3BlY3VsYXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_specular.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_translucency.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_translucency.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_translucency: () => (/* binding */ KHR_materials_translucency)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_translucency\";\n/**\n * [Proposed Specification](https://github.com/KhronosGroup/glTF/pull/1825)\n * !!! Experimental Extension Subject to Changes !!!\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_translucency {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 174;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n        if (this.enabled) {\n            loader.parent.transparencyAsCoverage = true;\n        }\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadTranslucentPropertiesAsync(extensionContext, material, babylonMaterial, extension));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadTranslucentPropertiesAsync(context, material, babylonMaterial, extension) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const pbrMaterial = babylonMaterial;\n        // Enables \"translucency\" texture which represents diffusely-transmitted light.\n        pbrMaterial.subSurface.isTranslucencyEnabled = true;\n        // Since this extension models thin-surface transmission only, we must make the\n        // internal IOR == 1.0 and set the thickness to 0.\n        pbrMaterial.subSurface.volumeIndexOfRefraction = 1.0;\n        pbrMaterial.subSurface.minimumThickness = 0.0;\n        pbrMaterial.subSurface.maximumThickness = 0.0;\n        // Albedo colour will tint transmission.\n        pbrMaterial.subSurface.useAlbedoToTintTranslucency = true;\n        if (extension.translucencyFactor !== undefined) {\n            pbrMaterial.subSurface.translucencyIntensity = extension.translucencyFactor;\n        }\n        else {\n            pbrMaterial.subSurface.translucencyIntensity = 0.0;\n            pbrMaterial.subSurface.isTranslucencyEnabled = false;\n            return Promise.resolve();\n        }\n        if (extension.translucencyTexture) {\n            extension.translucencyTexture.nonColorData = true;\n            return this._loader.loadTextureInfoAsync(`${context}/translucencyTexture`, extension.translucencyTexture).then((texture) => {\n                pbrMaterial.subSurface.translucencyIntensityTexture = texture;\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_translucency(loader));\n//# sourceMappingURL=KHR_materials_translucency.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc190cmFuc2x1Y2VuY3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsU0FBUztBQUNUO0FBQ0E7QUFDQSx5Q0FBeUMscUZBQVc7QUFDcEQsK0JBQStCLFFBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFFBQVE7QUFDaEU7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQVU7QUFDVixzRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc190cmFuc2x1Y2VuY3kuanM/NjY2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX3RyYW5zbHVjZW5jeVwiO1xuLyoqXG4gKiBbUHJvcG9zZWQgU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL3B1bGwvMTgyNSlcbiAqICEhISBFeHBlcmltZW50YWwgRXh0ZW5zaW9uIFN1YmplY3QgdG8gQ2hhbmdlcyAhISFcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEtIUl9tYXRlcmlhbHNfdHJhbnNsdWNlbmN5IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAxNzQ7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgbG9hZGVyLnBhcmVudC50cmFuc3BhcmVuY3lBc0NvdmVyYWdlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5fbG9hZGVyID0gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgbG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dGVuc2lvbkFzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCB0aGlzLm5hbWUsIChleHRlbnNpb25Db250ZXh0LCBleHRlbnNpb24pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2VzID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRlci5sb2FkTWF0ZXJpYWxCYXNlUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSk7XG4gICAgICAgICAgICBwcm9taXNlcy5wdXNoKHRoaXMuX2xvYWRUcmFuc2x1Y2VudFByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsLCBleHRlbnNpb24pKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWRUcmFuc2x1Y2VudFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsLCBleHRlbnNpb24pIHtcbiAgICAgICAgaWYgKCEoYmFieWxvbk1hdGVyaWFsIGluc3RhbmNlb2YgUEJSTWF0ZXJpYWwpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7Y29udGV4dH06IE1hdGVyaWFsIHR5cGUgbm90IHN1cHBvcnRlZGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBick1hdGVyaWFsID0gYmFieWxvbk1hdGVyaWFsO1xuICAgICAgICAvLyBFbmFibGVzIFwidHJhbnNsdWNlbmN5XCIgdGV4dHVyZSB3aGljaCByZXByZXNlbnRzIGRpZmZ1c2VseS10cmFuc21pdHRlZCBsaWdodC5cbiAgICAgICAgcGJyTWF0ZXJpYWwuc3ViU3VyZmFjZS5pc1RyYW5zbHVjZW5jeUVuYWJsZWQgPSB0cnVlO1xuICAgICAgICAvLyBTaW5jZSB0aGlzIGV4dGVuc2lvbiBtb2RlbHMgdGhpbi1zdXJmYWNlIHRyYW5zbWlzc2lvbiBvbmx5LCB3ZSBtdXN0IG1ha2UgdGhlXG4gICAgICAgIC8vIGludGVybmFsIElPUiA9PSAxLjAgYW5kIHNldCB0aGUgdGhpY2tuZXNzIHRvIDAuXG4gICAgICAgIHBick1hdGVyaWFsLnN1YlN1cmZhY2Uudm9sdW1lSW5kZXhPZlJlZnJhY3Rpb24gPSAxLjA7XG4gICAgICAgIHBick1hdGVyaWFsLnN1YlN1cmZhY2UubWluaW11bVRoaWNrbmVzcyA9IDAuMDtcbiAgICAgICAgcGJyTWF0ZXJpYWwuc3ViU3VyZmFjZS5tYXhpbXVtVGhpY2tuZXNzID0gMC4wO1xuICAgICAgICAvLyBBbGJlZG8gY29sb3VyIHdpbGwgdGludCB0cmFuc21pc3Npb24uXG4gICAgICAgIHBick1hdGVyaWFsLnN1YlN1cmZhY2UudXNlQWxiZWRvVG9UaW50VHJhbnNsdWNlbmN5ID0gdHJ1ZTtcbiAgICAgICAgaWYgKGV4dGVuc2lvbi50cmFuc2x1Y2VuY3lGYWN0b3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcGJyTWF0ZXJpYWwuc3ViU3VyZmFjZS50cmFuc2x1Y2VuY3lJbnRlbnNpdHkgPSBleHRlbnNpb24udHJhbnNsdWNlbmN5RmFjdG9yO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcGJyTWF0ZXJpYWwuc3ViU3VyZmFjZS50cmFuc2x1Y2VuY3lJbnRlbnNpdHkgPSAwLjA7XG4gICAgICAgICAgICBwYnJNYXRlcmlhbC5zdWJTdXJmYWNlLmlzVHJhbnNsdWNlbmN5RW5hYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChleHRlbnNpb24udHJhbnNsdWNlbmN5VGV4dHVyZSkge1xuICAgICAgICAgICAgZXh0ZW5zaW9uLnRyYW5zbHVjZW5jeVRleHR1cmUubm9uQ29sb3JEYXRhID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2FkZXIubG9hZFRleHR1cmVJbmZvQXN5bmMoYCR7Y29udGV4dH0vdHJhbnNsdWNlbmN5VGV4dHVyZWAsIGV4dGVuc2lvbi50cmFuc2x1Y2VuY3lUZXh0dXJlKS50aGVuKCh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgcGJyTWF0ZXJpYWwuc3ViU3VyZmFjZS50cmFuc2x1Y2VuY3lJbnRlbnNpdHlUZXh0dXJlID0gdGV4dHVyZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgICB9XG4gICAgfVxufVxuR0xURkxvYWRlci5SZWdpc3RlckV4dGVuc2lvbihOQU1FLCAobG9hZGVyKSA9PiBuZXcgS0hSX21hdGVyaWFsc190cmFuc2x1Y2VuY3kobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbWF0ZXJpYWxzX3RyYW5zbHVjZW5jeS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_translucency.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_transmission.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_transmission.js ***!
  \*******************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_transmission: () => (/* binding */ KHR_materials_transmission)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Materials_Textures_renderTargetTexture_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/renderTargetTexture.js */ \"@babylonjs/core/Materials/Textures/renderTargetTexture.js\");\n/* harmony import */ var _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Misc/observable.js */ \"@babylonjs/core/Misc/observable.js\");\n/* harmony import */ var _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Engines/constants.js */ \"@babylonjs/core/Engines/constants.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Materials_Textures_renderTargetTexture_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Materials_Textures_renderTargetTexture_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n/**\n * A class to handle setting up the rendering of opaque objects to be shown through transmissive objects.\n */\nclass TransmissionHelper {\n    /**\n     * Creates the default options for the helper.\n     * @returns the default options\n     */\n    static _GetDefaultOptions() {\n        return {\n            renderSize: 1024,\n            samples: 4,\n            lodGenerationScale: 1,\n            lodGenerationOffset: -4,\n            renderTargetTextureType: _babylonjs_core_Engines_constants_js__WEBPACK_IMPORTED_MODULE_4__.Constants.TEXTURETYPE_HALF_FLOAT,\n            generateMipmaps: true,\n        };\n    }\n    /**\n     * constructor\n     * @param options Defines the options we want to customize the helper\n     * @param scene The scene to add the material to\n     */\n    constructor(options, scene) {\n        this._opaqueRenderTarget = null;\n        this._opaqueMeshesCache = [];\n        this._transparentMeshesCache = [];\n        this._materialObservers = {};\n        this._options = {\n            ...TransmissionHelper._GetDefaultOptions(),\n            ...options,\n        };\n        this._scene = scene;\n        this._scene._transmissionHelper = this;\n        this.onErrorObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_3__.Observable();\n        this._scene.onDisposeObservable.addOnce(() => {\n            this.dispose();\n        });\n        this._parseScene();\n        this._setupRenderTargets();\n    }\n    /**\n     * Updates the background according to the new options\n     * @param options\n     */\n    updateOptions(options) {\n        // First check if any options are actually being changed. If not, exit.\n        const newValues = Object.keys(options).filter((key) => this._options[key] !== options[key]);\n        if (!newValues.length) {\n            return;\n        }\n        const newOptions = {\n            ...this._options,\n            ...options,\n        };\n        const oldOptions = this._options;\n        this._options = newOptions;\n        // If size changes, recreate everything\n        if (newOptions.renderSize !== oldOptions.renderSize ||\n            newOptions.renderTargetTextureType !== oldOptions.renderTargetTextureType ||\n            newOptions.generateMipmaps !== oldOptions.generateMipmaps ||\n            !this._opaqueRenderTarget) {\n            this._setupRenderTargets();\n        }\n        else {\n            this._opaqueRenderTarget.samples = newOptions.samples;\n            this._opaqueRenderTarget.lodGenerationScale = newOptions.lodGenerationScale;\n            this._opaqueRenderTarget.lodGenerationOffset = newOptions.lodGenerationOffset;\n        }\n    }\n    /**\n     * @returns the opaque render target texture or null if not available.\n     */\n    getOpaqueTarget() {\n        return this._opaqueRenderTarget;\n    }\n    _shouldRenderAsTransmission(material) {\n        if (!material) {\n            return false;\n        }\n        if (material instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial && material.subSurface.isRefractionEnabled) {\n            return true;\n        }\n        return false;\n    }\n    _addMesh(mesh) {\n        this._materialObservers[mesh.uniqueId] = mesh.onMaterialChangedObservable.add(this._onMeshMaterialChanged.bind(this));\n        // we need to defer the processing because _addMesh may be called as part as an instance mesh creation, in which case some\n        // internal properties are not setup yet, like _sourceMesh (needed when doing mesh.material below)\n        _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_5__.Tools.SetImmediate(() => {\n            if (this._shouldRenderAsTransmission(mesh.material)) {\n                mesh.material.refractionTexture = this._opaqueRenderTarget;\n                if (this._transparentMeshesCache.indexOf(mesh) === -1) {\n                    this._transparentMeshesCache.push(mesh);\n                }\n            }\n            else {\n                if (this._opaqueMeshesCache.indexOf(mesh) === -1) {\n                    this._opaqueMeshesCache.push(mesh);\n                }\n            }\n        });\n    }\n    _removeMesh(mesh) {\n        mesh.onMaterialChangedObservable.remove(this._materialObservers[mesh.uniqueId]);\n        delete this._materialObservers[mesh.uniqueId];\n        let idx = this._transparentMeshesCache.indexOf(mesh);\n        if (idx !== -1) {\n            this._transparentMeshesCache.splice(idx, 1);\n        }\n        idx = this._opaqueMeshesCache.indexOf(mesh);\n        if (idx !== -1) {\n            this._opaqueMeshesCache.splice(idx, 1);\n        }\n    }\n    _parseScene() {\n        this._scene.meshes.forEach(this._addMesh.bind(this));\n        // Listen for when a mesh is added to the scene and add it to our cache lists.\n        this._scene.onNewMeshAddedObservable.add(this._addMesh.bind(this));\n        // Listen for when a mesh is removed from to the scene and remove it from our cache lists.\n        this._scene.onMeshRemovedObservable.add(this._removeMesh.bind(this));\n    }\n    // When one of the meshes in the scene has its material changed, make sure that it's in the correct cache list.\n    _onMeshMaterialChanged(mesh) {\n        const transparentIdx = this._transparentMeshesCache.indexOf(mesh);\n        const opaqueIdx = this._opaqueMeshesCache.indexOf(mesh);\n        // If the material is transparent, make sure that it's added to the transparent list and removed from the opaque list\n        const useTransmission = this._shouldRenderAsTransmission(mesh.material);\n        if (useTransmission) {\n            if (mesh.material instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial) {\n                mesh.material.subSurface.refractionTexture = this._opaqueRenderTarget;\n            }\n            if (opaqueIdx !== -1) {\n                this._opaqueMeshesCache.splice(opaqueIdx, 1);\n                this._transparentMeshesCache.push(mesh);\n            }\n            else if (transparentIdx === -1) {\n                this._transparentMeshesCache.push(mesh);\n            }\n            // If the material is opaque, make sure that it's added to the opaque list and removed from the transparent list\n        }\n        else {\n            if (transparentIdx !== -1) {\n                this._transparentMeshesCache.splice(transparentIdx, 1);\n                this._opaqueMeshesCache.push(mesh);\n            }\n            else if (opaqueIdx === -1) {\n                this._opaqueMeshesCache.push(mesh);\n            }\n        }\n    }\n    /**\n     * @internal\n     * Check if the opaque render target has not been disposed and can still be used.\n     * @returns\n     */\n    _isRenderTargetValid() {\n        return this._opaqueRenderTarget?.getInternalTexture() !== null;\n    }\n    /**\n     * @internal\n     * Setup the render targets according to the specified options.\n     */\n    _setupRenderTargets() {\n        if (this._opaqueRenderTarget) {\n            this._opaqueRenderTarget.dispose();\n        }\n        this._opaqueRenderTarget = new _babylonjs_core_Materials_Textures_renderTargetTexture_js__WEBPACK_IMPORTED_MODULE_2__.RenderTargetTexture(\"opaqueSceneTexture\", this._options.renderSize, this._scene, this._options.generateMipmaps, undefined, this._options.renderTargetTextureType);\n        this._opaqueRenderTarget.ignoreCameraViewport = true;\n        this._opaqueRenderTarget.renderList = this._opaqueMeshesCache;\n        this._opaqueRenderTarget.clearColor = this._options.clearColor?.clone() ?? this._scene.clearColor.clone();\n        this._opaqueRenderTarget.gammaSpace = false;\n        this._opaqueRenderTarget.lodGenerationScale = this._options.lodGenerationScale;\n        this._opaqueRenderTarget.lodGenerationOffset = this._options.lodGenerationOffset;\n        this._opaqueRenderTarget.samples = this._options.samples;\n        this._opaqueRenderTarget.renderSprites = true;\n        this._opaqueRenderTarget.renderParticles = true;\n        let sceneImageProcessingapplyByPostProcess;\n        let saveSceneEnvIntensity;\n        this._opaqueRenderTarget.onBeforeBindObservable.add((opaqueRenderTarget) => {\n            saveSceneEnvIntensity = this._scene.environmentIntensity;\n            this._scene.environmentIntensity = 1.0;\n            sceneImageProcessingapplyByPostProcess = this._scene.imageProcessingConfiguration.applyByPostProcess;\n            if (!this._options.clearColor) {\n                this._scene.clearColor.toLinearSpaceToRef(opaqueRenderTarget.clearColor, this._scene.getEngine().useExactSrgbConversions);\n            }\n            else {\n                opaqueRenderTarget.clearColor.copyFrom(this._options.clearColor);\n            }\n            // we do not use the applyByPostProcess setter to avoid flagging all the materials as \"image processing dirty\"!\n            this._scene.imageProcessingConfiguration._applyByPostProcess = true;\n        });\n        this._opaqueRenderTarget.onAfterUnbindObservable.add(() => {\n            this._scene.environmentIntensity = saveSceneEnvIntensity;\n            this._scene.imageProcessingConfiguration._applyByPostProcess = sceneImageProcessingapplyByPostProcess;\n        });\n        this._transparentMeshesCache.forEach((mesh) => {\n            if (this._shouldRenderAsTransmission(mesh.material)) {\n                mesh.material.refractionTexture = this._opaqueRenderTarget;\n            }\n        });\n    }\n    /**\n     * Dispose all the elements created by the Helper.\n     */\n    dispose() {\n        this._scene._transmissionHelper = undefined;\n        if (this._opaqueRenderTarget) {\n            this._opaqueRenderTarget.dispose();\n            this._opaqueRenderTarget = null;\n        }\n        this._transparentMeshesCache = [];\n        this._opaqueMeshesCache = [];\n    }\n}\nconst NAME = \"KHR_materials_transmission\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_transmission/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_transmission {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 175;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n        if (this.enabled) {\n            loader.parent.transparencyAsCoverage = true;\n        }\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadTransparentPropertiesAsync(extensionContext, material, babylonMaterial, extension));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadTransparentPropertiesAsync(context, material, babylonMaterial, extension) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const pbrMaterial = babylonMaterial;\n        // Enables \"refraction\" texture which represents transmitted light.\n        pbrMaterial.subSurface.isRefractionEnabled = true;\n        // Since this extension models thin-surface transmission only, we must make IOR = 1.0\n        pbrMaterial.subSurface.volumeIndexOfRefraction = 1.0;\n        // Albedo colour will tint transmission.\n        pbrMaterial.subSurface.useAlbedoToTintRefraction = true;\n        if (extension.transmissionFactor !== undefined) {\n            pbrMaterial.subSurface.refractionIntensity = extension.transmissionFactor;\n            const scene = pbrMaterial.getScene();\n            if (pbrMaterial.subSurface.refractionIntensity && !scene._transmissionHelper) {\n                new TransmissionHelper({}, pbrMaterial.getScene());\n            }\n            else if (pbrMaterial.subSurface.refractionIntensity && !scene._transmissionHelper?._isRenderTargetValid()) {\n                // If the render target is not valid, recreate it.\n                scene._transmissionHelper?._setupRenderTargets();\n            }\n        }\n        else {\n            pbrMaterial.subSurface.refractionIntensity = 0.0;\n            pbrMaterial.subSurface.isRefractionEnabled = false;\n            return Promise.resolve();\n        }\n        pbrMaterial.subSurface.minimumThickness = 0.0;\n        pbrMaterial.subSurface.maximumThickness = 0.0;\n        if (extension.transmissionTexture) {\n            extension.transmissionTexture.nonColorData = true;\n            return this._loader.loadTextureInfoAsync(`${context}/transmissionTexture`, extension.transmissionTexture, undefined).then((texture) => {\n                pbrMaterial.subSurface.refractionIntensityTexture = texture;\n                pbrMaterial.subSurface.useGltfStyleTextures = true;\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_transmission(loader));\n//# sourceMappingURL=KHR_materials_transmission.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_transmission.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_unlit.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_unlit.js ***!
  \************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_unlit: () => (/* binding */ KHR_materials_unlit)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"KHR_materials_unlit\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_unlit/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_unlit {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 210;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.LoadExtensionAsync(context, material, this.name, () => {\n            return this._loadUnlitPropertiesAsync(context, material, babylonMaterial);\n        });\n    }\n    _loadUnlitPropertiesAsync(context, material, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_1__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.unlit = true;\n        const properties = material.pbrMetallicRoughness;\n        if (properties) {\n            if (properties.baseColorFactor) {\n                babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.FromArray(properties.baseColorFactor);\n                babylonMaterial.alpha = properties.baseColorFactor[3];\n            }\n            else {\n                babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_0__.Color3.White();\n            }\n            if (properties.baseColorTexture) {\n                promises.push(this._loader.loadTextureInfoAsync(`${context}/baseColorTexture`, properties.baseColorTexture, (texture) => {\n                    texture.name = `${babylonMaterial.name} (Base Color)`;\n                    babylonMaterial.albedoTexture = texture;\n                }));\n            }\n        }\n        if (material.doubleSided) {\n            babylonMaterial.backFaceCulling = false;\n            babylonMaterial.twoSidedLighting = true;\n        }\n        this._loader.loadMaterialAlphaProperties(context, material, babylonMaterial);\n        return Promise.all(promises).then(() => { });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_unlit(loader));\n//# sourceMappingURL=KHR_materials_unlit.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc191bmxpdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZEO0FBQ2M7QUFDN0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlDQUF5QyxxRkFBVztBQUNwRCwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsdUVBQU07QUFDcEQ7QUFDQTtBQUNBO0FBQ0EsOENBQThDLHVFQUFNO0FBQ3BEO0FBQ0E7QUFDQSxtRUFBbUUsUUFBUTtBQUMzRSxzQ0FBc0Msc0JBQXNCO0FBQzVEO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQSxzREFBVTtBQUNWLCtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfbWF0ZXJpYWxzX3VubGl0LmpzPzk0MDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3IzIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9NYXRocy9tYXRoLmNvbG9yLmpzXCI7XG5pbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWF0ZXJpYWxzX3VubGl0XCI7XG4vKipcbiAqIFtTcGVjaWZpY2F0aW9uXShodHRwczovL2dpdGh1Yi5jb20vS2hyb25vc0dyb3VwL2dsVEYvYmxvYi9tYWluL2V4dGVuc2lvbnMvMi4wL0tocm9ub3MvS0hSX21hdGVyaWFsc191bmxpdC9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfbWF0ZXJpYWxzX3VubGl0IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAyMTA7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGxvYWRNYXRlcmlhbFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgdGhpcy5uYW1lLCAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9hZFVubGl0UHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWRVbmxpdFByb3BlcnRpZXNBc3luYyhjb250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsKSB7XG4gICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2NvbnRleHR9OiBNYXRlcmlhbCB0eXBlIG5vdCBzdXBwb3J0ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwcm9taXNlcyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwudW5saXQgPSB0cnVlO1xuICAgICAgICBjb25zdCBwcm9wZXJ0aWVzID0gbWF0ZXJpYWwucGJyTWV0YWxsaWNSb3VnaG5lc3M7XG4gICAgICAgIGlmIChwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICBpZiAocHJvcGVydGllcy5iYXNlQ29sb3JGYWN0b3IpIHtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvQ29sb3IgPSBDb2xvcjMuRnJvbUFycmF5KHByb3BlcnRpZXMuYmFzZUNvbG9yRmFjdG9yKTtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxwaGEgPSBwcm9wZXJ0aWVzLmJhc2VDb2xvckZhY3RvclszXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5hbGJlZG9Db2xvciA9IENvbG9yMy5XaGl0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb3BlcnRpZXMuYmFzZUNvbG9yVGV4dHVyZSkge1xuICAgICAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGAke2NvbnRleHR9L2Jhc2VDb2xvclRleHR1cmVgLCBwcm9wZXJ0aWVzLmJhc2VDb2xvclRleHR1cmUsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRleHR1cmUubmFtZSA9IGAke2JhYnlsb25NYXRlcmlhbC5uYW1lfSAoQmFzZSBDb2xvcilgO1xuICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvVGV4dHVyZSA9IHRleHR1cmU7XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChtYXRlcmlhbC5kb3VibGVTaWRlZCkge1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLmJhY2tGYWNlQ3VsbGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnR3b1NpZGVkTGlnaHRpbmcgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2xvYWRlci5sb2FkTWF0ZXJpYWxBbHBoYVByb3BlcnRpZXMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCk7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tYXRlcmlhbHNfdW5saXQobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfbWF0ZXJpYWxzX3VubGl0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_unlit.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_variants.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_variants.js ***!
  \***************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_variants: () => (/* binding */ KHR_materials_variants)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Meshes/mesh.js */ \"@babylonjs/core/Meshes/mesh.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_variants\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_variants/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_variants {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * Gets the list of available variant names for this asset.\n     * @param rootMesh The glTF root mesh\n     * @returns the list of all the variant names for this model\n     */\n    static GetAvailableVariants(rootMesh) {\n        const extensionMetadata = this._GetExtensionMetadata(rootMesh);\n        if (!extensionMetadata) {\n            return [];\n        }\n        return Object.keys(extensionMetadata.variants);\n    }\n    /**\n     * Gets the list of available variant names for this asset.\n     * @param rootMesh The glTF root mesh\n     * @returns the list of all the variant names for this model\n     */\n    getAvailableVariants(rootMesh) {\n        return KHR_materials_variants.GetAvailableVariants(rootMesh);\n    }\n    /**\n     * Select a variant given a variant name or a list of variant names.\n     * @param rootMesh The glTF root mesh\n     * @param variantName The variant name(s) to select.\n     */\n    static SelectVariant(rootMesh, variantName) {\n        const extensionMetadata = this._GetExtensionMetadata(rootMesh);\n        if (!extensionMetadata) {\n            throw new Error(`Cannot select variant on a glTF mesh that does not have the ${NAME} extension`);\n        }\n        const select = (variantName) => {\n            const entries = extensionMetadata.variants[variantName];\n            if (entries) {\n                for (const entry of entries) {\n                    entry.mesh.material = entry.material;\n                }\n            }\n        };\n        if (variantName instanceof Array) {\n            for (const name of variantName) {\n                select(name);\n            }\n        }\n        else {\n            select(variantName);\n        }\n        extensionMetadata.lastSelected = variantName;\n    }\n    /**\n     * Select a variant given a variant name or a list of variant names.\n     * @param rootMesh The glTF root mesh\n     * @param variantName The variant name(s) to select.\n     */\n    selectVariant(rootMesh, variantName) {\n        KHR_materials_variants.SelectVariant(rootMesh, variantName);\n    }\n    /**\n     * Reset back to the original before selecting a variant.\n     * @param rootMesh The glTF root mesh\n     */\n    static Reset(rootMesh) {\n        const extensionMetadata = this._GetExtensionMetadata(rootMesh);\n        if (!extensionMetadata) {\n            throw new Error(`Cannot reset on a glTF mesh that does not have the ${NAME} extension`);\n        }\n        for (const entry of extensionMetadata.original) {\n            entry.mesh.material = entry.material;\n        }\n        extensionMetadata.lastSelected = null;\n    }\n    /**\n     * Reset back to the original before selecting a variant.\n     * @param rootMesh The glTF root mesh\n     */\n    reset(rootMesh) {\n        KHR_materials_variants.Reset(rootMesh);\n    }\n    /**\n     * Gets the last selected variant name(s) or null if original.\n     * @param rootMesh The glTF root mesh\n     * @returns The selected variant name(s).\n     */\n    static GetLastSelectedVariant(rootMesh) {\n        const extensionMetadata = this._GetExtensionMetadata(rootMesh);\n        if (!extensionMetadata) {\n            throw new Error(`Cannot get the last selected variant on a glTF mesh that does not have the ${NAME} extension`);\n        }\n        return extensionMetadata.lastSelected;\n    }\n    /**\n     * Gets the last selected variant name(s) or null if original.\n     * @param rootMesh The glTF root mesh\n     * @returns The selected variant name(s).\n     */\n    getLastSelectedVariant(rootMesh) {\n        return KHR_materials_variants.GetLastSelectedVariant(rootMesh);\n    }\n    static _GetExtensionMetadata(rootMesh) {\n        return rootMesh?._internalMetadata?.gltf?.[NAME] || null;\n    }\n    /** @internal */\n    onLoading() {\n        const extensions = this._loader.gltf.extensions;\n        if (extensions && extensions[this.name]) {\n            const extension = extensions[this.name];\n            this._variants = extension.variants;\n        }\n    }\n    /**\n     * @internal\n     */\n    _loadMeshPrimitiveAsync(context, name, node, mesh, primitive, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.LoadExtensionAsync(context, primitive, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader._loadMeshPrimitiveAsync(context, name, node, mesh, primitive, (babylonMesh) => {\n                assign(babylonMesh);\n                if (babylonMesh instanceof _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_1__.Mesh) {\n                    const babylonDrawMode = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader._GetDrawMode(context, primitive.mode);\n                    const root = this._loader.rootBabylonMesh;\n                    const metadata = root ? (root._internalMetadata = root._internalMetadata || {}) : {};\n                    const gltf = (metadata.gltf = metadata.gltf || {});\n                    const extensionMetadata = (gltf[NAME] = gltf[NAME] || { lastSelected: null, original: [], variants: {} });\n                    // Store the original material.\n                    extensionMetadata.original.push({ mesh: babylonMesh, material: babylonMesh.material });\n                    // For each mapping, look at the variants and make a new entry for them.\n                    for (let mappingIndex = 0; mappingIndex < extension.mappings.length; ++mappingIndex) {\n                        const mapping = extension.mappings[mappingIndex];\n                        const material = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${extensionContext}/mappings/${mappingIndex}/material`, this._loader.gltf.materials, mapping.material);\n                        promises.push(this._loader._loadMaterialAsync(`#/materials/${mapping.material}`, material, babylonMesh, babylonDrawMode, (babylonMaterial) => {\n                            for (let mappingVariantIndex = 0; mappingVariantIndex < mapping.variants.length; ++mappingVariantIndex) {\n                                const variantIndex = mapping.variants[mappingVariantIndex];\n                                const variant = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`/extensions/${NAME}/variants/${variantIndex}`, this._variants, variantIndex);\n                                extensionMetadata.variants[variant.name] = extensionMetadata.variants[variant.name] || [];\n                                extensionMetadata.variants[variant.name].push({\n                                    mesh: babylonMesh,\n                                    material: babylonMaterial,\n                                });\n                                // Replace the target when original mesh is cloned\n                                babylonMesh.onClonedObservable.add((newOne) => {\n                                    const newMesh = newOne;\n                                    let metadata = null;\n                                    let newRoot = newMesh;\n                                    // Find root to get medata\n                                    do {\n                                        newRoot = newRoot.parent;\n                                        if (!newRoot) {\n                                            return;\n                                        }\n                                        metadata = KHR_materials_variants._GetExtensionMetadata(newRoot);\n                                    } while (metadata === null);\n                                    // Need to clone the metadata on the root (first time only)\n                                    if (root && metadata === KHR_materials_variants._GetExtensionMetadata(root)) {\n                                        // Copy main metadata\n                                        newRoot._internalMetadata = {};\n                                        for (const key in root._internalMetadata) {\n                                            newRoot._internalMetadata[key] = root._internalMetadata[key];\n                                        }\n                                        // Copy the gltf metadata\n                                        newRoot._internalMetadata.gltf = [];\n                                        for (const key in root._internalMetadata.gltf) {\n                                            newRoot._internalMetadata.gltf[key] = root._internalMetadata.gltf[key];\n                                        }\n                                        // Duplicate the extension specific metadata\n                                        newRoot._internalMetadata.gltf[NAME] = { lastSelected: null, original: [], variants: {} };\n                                        for (const original of metadata.original) {\n                                            newRoot._internalMetadata.gltf[NAME].original.push({\n                                                mesh: original.mesh,\n                                                material: original.material,\n                                            });\n                                        }\n                                        for (const key in metadata.variants) {\n                                            if (Object.prototype.hasOwnProperty.call(metadata.variants, key)) {\n                                                newRoot._internalMetadata.gltf[NAME].variants[key] = [];\n                                                for (const variantEntry of metadata.variants[key]) {\n                                                    newRoot._internalMetadata.gltf[NAME].variants[key].push({\n                                                        mesh: variantEntry.mesh,\n                                                        material: variantEntry.material,\n                                                    });\n                                                }\n                                            }\n                                        }\n                                        metadata = newRoot._internalMetadata.gltf[NAME];\n                                    }\n                                    // Relocate\n                                    for (const target of metadata.original) {\n                                        if (target.mesh === babylonMesh) {\n                                            target.mesh = newMesh;\n                                        }\n                                    }\n                                    for (const target of metadata.variants[variant.name]) {\n                                        if (target.mesh === babylonMesh) {\n                                            target.mesh = newMesh;\n                                        }\n                                    }\n                                });\n                            }\n                        }));\n                    }\n                }\n            }));\n            return Promise.all(promises).then(([babylonMesh]) => {\n                return babylonMesh;\n            });\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_variants(loader));\n//# sourceMappingURL=KHR_materials_variants.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_variants.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_volume.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_volume.js ***!
  \*************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_materials_volume: () => (/* binding */ KHR_materials_volume)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_materials_volume\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_volume/README.md)\n * @since 5.0.0\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_materials_volume {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 173;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n        if (this.enabled) {\n            // We need to disable instance usage because the attenuation factor depends on the node scale of each individual mesh\n            this._loader._disableInstancedMesh++;\n        }\n    }\n    /** @internal */\n    dispose() {\n        if (this.enabled) {\n            this._loader._disableInstancedMesh--;\n        }\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n            promises.push(this._loadVolumePropertiesAsync(extensionContext, material, babylonMaterial, extension));\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    _loadVolumePropertiesAsync(context, material, babylonMaterial, extension) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        // If transparency isn't enabled already, this extension shouldn't do anything.\n        // i.e. it requires either the KHR_materials_transmission or KHR_materials_translucency extensions.\n        if ((!babylonMaterial.subSurface.isRefractionEnabled && !babylonMaterial.subSurface.isTranslucencyEnabled) || !extension.thicknessFactor) {\n            return Promise.resolve();\n        }\n        // IOR in this extension only affects interior.\n        babylonMaterial.subSurface.volumeIndexOfRefraction = babylonMaterial.indexOfRefraction;\n        const attenuationDistance = extension.attenuationDistance !== undefined ? extension.attenuationDistance : Number.MAX_VALUE;\n        babylonMaterial.subSurface.tintColorAtDistance = attenuationDistance;\n        if (extension.attenuationColor !== undefined && extension.attenuationColor.length == 3) {\n            babylonMaterial.subSurface.tintColor.copyFromFloats(extension.attenuationColor[0], extension.attenuationColor[1], extension.attenuationColor[2]);\n        }\n        babylonMaterial.subSurface.minimumThickness = 0.0;\n        babylonMaterial.subSurface.maximumThickness = extension.thicknessFactor;\n        babylonMaterial.subSurface.useThicknessAsDepth = true;\n        if (extension.thicknessTexture) {\n            extension.thicknessTexture.nonColorData = true;\n            return this._loader.loadTextureInfoAsync(`${context}/thicknessTexture`, extension.thicknessTexture).then((texture) => {\n                babylonMaterial.subSurface.thicknessTexture = texture;\n                babylonMaterial.subSurface.useGltfStyleTextures = true;\n            });\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_materials_volume(loader));\n//# sourceMappingURL=KHR_materials_volume.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21hdGVyaWFsc192b2x1bWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTJFO0FBQzdCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHlDQUF5QyxxRkFBVztBQUNwRCwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsUUFBUTtBQUNoRTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0tIUl9tYXRlcmlhbHNfdm9sdW1lLmpzP2Y0ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiS0hSX21hdGVyaWFsc192b2x1bWVcIjtcbi8qKlxuICogW1NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iL21haW4vZXh0ZW5zaW9ucy8yLjAvS2hyb25vcy9LSFJfbWF0ZXJpYWxzX3ZvbHVtZS9SRUFETUUubWQpXG4gKiBAc2luY2UgNS4wLjBcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEtIUl9tYXRlcmlhbHNfdm9sdW1lIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERlZmluZXMgYSBudW1iZXIgdGhhdCBkZXRlcm1pbmVzIHRoZSBvcmRlciB0aGUgZXh0ZW5zaW9ucyBhcmUgYXBwbGllZC5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMub3JkZXIgPSAxNzM7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gdGhpcy5fbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICAgICAgaWYgKHRoaXMuZW5hYmxlZCkge1xuICAgICAgICAgICAgLy8gV2UgbmVlZCB0byBkaXNhYmxlIGluc3RhbmNlIHVzYWdlIGJlY2F1c2UgdGhlIGF0dGVudWF0aW9uIGZhY3RvciBkZXBlbmRzIG9uIHRoZSBub2RlIHNjYWxlIG9mIGVhY2ggaW5kaXZpZHVhbCBtZXNoXG4gICAgICAgICAgICB0aGlzLl9sb2FkZXIuX2Rpc2FibGVJbnN0YW5jZWRNZXNoKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2xvYWRlci5fZGlzYWJsZUluc3RhbmNlZE1lc2gtLTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkTWF0ZXJpYWxQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dGVuc2lvbkNvbnRleHQsIGV4dGVuc2lvbikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZGVyLmxvYWRNYXRlcmlhbEJhc2VQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCkpO1xuICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpKTtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2godGhpcy5fbG9hZFZvbHVtZVByb3BlcnRpZXNBc3luYyhleHRlbnNpb25Db250ZXh0LCBtYXRlcmlhbCwgYmFieWxvbk1hdGVyaWFsLCBleHRlbnNpb24pKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7IH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2xvYWRWb2x1bWVQcm9wZXJ0aWVzQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIGJhYnlsb25NYXRlcmlhbCwgZXh0ZW5zaW9uKSB7XG4gICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2NvbnRleHR9OiBNYXRlcmlhbCB0eXBlIG5vdCBzdXBwb3J0ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0cmFuc3BhcmVuY3kgaXNuJ3QgZW5hYmxlZCBhbHJlYWR5LCB0aGlzIGV4dGVuc2lvbiBzaG91bGRuJ3QgZG8gYW55dGhpbmcuXG4gICAgICAgIC8vIGkuZS4gaXQgcmVxdWlyZXMgZWl0aGVyIHRoZSBLSFJfbWF0ZXJpYWxzX3RyYW5zbWlzc2lvbiBvciBLSFJfbWF0ZXJpYWxzX3RyYW5zbHVjZW5jeSBleHRlbnNpb25zLlxuICAgICAgICBpZiAoKCFiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5pc1JlZnJhY3Rpb25FbmFibGVkICYmICFiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5pc1RyYW5zbHVjZW5jeUVuYWJsZWQpIHx8ICFleHRlbnNpb24udGhpY2tuZXNzRmFjdG9yKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSU9SIGluIHRoaXMgZXh0ZW5zaW9uIG9ubHkgYWZmZWN0cyBpbnRlcmlvci5cbiAgICAgICAgYmFieWxvbk1hdGVyaWFsLnN1YlN1cmZhY2Uudm9sdW1lSW5kZXhPZlJlZnJhY3Rpb24gPSBiYWJ5bG9uTWF0ZXJpYWwuaW5kZXhPZlJlZnJhY3Rpb247XG4gICAgICAgIGNvbnN0IGF0dGVudWF0aW9uRGlzdGFuY2UgPSBleHRlbnNpb24uYXR0ZW51YXRpb25EaXN0YW5jZSAhPT0gdW5kZWZpbmVkID8gZXh0ZW5zaW9uLmF0dGVudWF0aW9uRGlzdGFuY2UgOiBOdW1iZXIuTUFYX1ZBTFVFO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS50aW50Q29sb3JBdERpc3RhbmNlID0gYXR0ZW51YXRpb25EaXN0YW5jZTtcbiAgICAgICAgaWYgKGV4dGVuc2lvbi5hdHRlbnVhdGlvbkNvbG9yICE9PSB1bmRlZmluZWQgJiYgZXh0ZW5zaW9uLmF0dGVudWF0aW9uQ29sb3IubGVuZ3RoID09IDMpIHtcbiAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5zdWJTdXJmYWNlLnRpbnRDb2xvci5jb3B5RnJvbUZsb2F0cyhleHRlbnNpb24uYXR0ZW51YXRpb25Db2xvclswXSwgZXh0ZW5zaW9uLmF0dGVudWF0aW9uQ29sb3JbMV0sIGV4dGVuc2lvbi5hdHRlbnVhdGlvbkNvbG9yWzJdKTtcbiAgICAgICAgfVxuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5taW5pbXVtVGhpY2tuZXNzID0gMC4wO1xuICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuc3ViU3VyZmFjZS5tYXhpbXVtVGhpY2tuZXNzID0gZXh0ZW5zaW9uLnRoaWNrbmVzc0ZhY3RvcjtcbiAgICAgICAgYmFieWxvbk1hdGVyaWFsLnN1YlN1cmZhY2UudXNlVGhpY2tuZXNzQXNEZXB0aCA9IHRydWU7XG4gICAgICAgIGlmIChleHRlbnNpb24udGhpY2tuZXNzVGV4dHVyZSkge1xuICAgICAgICAgICAgZXh0ZW5zaW9uLnRoaWNrbmVzc1RleHR1cmUubm9uQ29sb3JEYXRhID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2FkZXIubG9hZFRleHR1cmVJbmZvQXN5bmMoYCR7Y29udGV4dH0vdGhpY2tuZXNzVGV4dHVyZWAsIGV4dGVuc2lvbi50aGlja25lc3NUZXh0dXJlKS50aGVuKCh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnN1YlN1cmZhY2UudGhpY2tuZXNzVGV4dHVyZSA9IHRleHR1cmU7XG4gICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnN1YlN1cmZhY2UudXNlR2x0ZlN0eWxlVGV4dHVyZXMgPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfbWF0ZXJpYWxzX3ZvbHVtZShsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9tYXRlcmlhbHNfdm9sdW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_volume.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_mesh_quantization.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_mesh_quantization.js ***!
  \**************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_mesh_quantization: () => (/* binding */ KHR_mesh_quantization)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__]);\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst NAME = \"KHR_mesh_quantization\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_mesh_quantization/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_mesh_quantization {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this.enabled = loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() { }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_mesh_quantization(loader));\n//# sourceMappingURL=KHR_mesh_quantization.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21lc2hfcXVhbnRpemF0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQVU7QUFDVixpRCIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX21lc2hfcXVhbnRpemF0aW9uLmpzPzMwMWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJLSFJfbWVzaF9xdWFudGl6YXRpb25cIjtcbi8qKlxuICogW1NwZWNpZmljYXRpb25dKGh0dHBzOi8vZ2l0aHViLmNvbS9LaHJvbm9zR3JvdXAvZ2xURi9ibG9iL21haW4vZXh0ZW5zaW9ucy8yLjAvS2hyb25vcy9LSFJfbWVzaF9xdWFudGl6YXRpb24vUkVBRE1FLm1kKVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG5leHBvcnQgY2xhc3MgS0hSX21lc2hfcXVhbnRpemF0aW9uIHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBuYW1lIG9mIHRoaXMgZXh0ZW5zaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYW1lID0gTkFNRTtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7IH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl9tZXNoX3F1YW50aXphdGlvbihsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl9tZXNoX3F1YW50aXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_mesh_quantization.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_basisu.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_basisu.js ***!
  \***********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_texture_basisu: () => (/* binding */ KHR_texture_basisu)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__]);\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst NAME = \"KHR_texture_basisu\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_basisu/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_texture_basisu {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /** The name of this extension. */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    _loadTextureAsync(context, texture, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.LoadExtensionAsync(context, texture, this.name, (extensionContext, extension) => {\n            const sampler = texture.sampler == undefined ? _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.DefaultSampler : _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${context}/sampler`, this._loader.gltf.samplers, texture.sampler);\n            const image = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.ArrayItem.Get(`${extensionContext}/source`, this._loader.gltf.images, extension.source);\n            return this._loader._createTextureAsync(context, sampler, image, (babylonTexture) => {\n                assign(babylonTexture);\n            }, texture._textureInfo.nonColorData ? { useRGBAIfASTCBC7NotAvailableWhenUASTC: true } : undefined, !texture._textureInfo.nonColorData);\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_texture_basisu(loader));\n//# sourceMappingURL=KHR_texture_basisu.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX3RleHR1cmVfYmFzaXN1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXlEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFVO0FBQ3pCLDJEQUEyRCxzREFBVSxrQkFBa0IscURBQVMsUUFBUSxRQUFRO0FBQ2hILDBCQUEwQixxREFBUyxRQUFRLGlCQUFpQjtBQUM1RDtBQUNBO0FBQ0EsYUFBYSx3Q0FBd0MsOENBQThDO0FBQ25HLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0RBQVU7QUFDViw4QyIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX3RleHR1cmVfYmFzaXN1LmpzPzEzMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xURkxvYWRlciwgQXJyYXlJdGVtIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl90ZXh0dXJlX2Jhc2lzdVwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl90ZXh0dXJlX2Jhc2lzdS9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfdGV4dHVyZV9iYXNpc3Uge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlcikge1xuICAgICAgICAvKiogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlcjtcbiAgICAgICAgdGhpcy5lbmFibGVkID0gbG9hZGVyLmlzRXh0ZW5zaW9uVXNlZChOQU1FKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuX2xvYWRlciA9IG51bGw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIF9sb2FkVGV4dHVyZUFzeW5jKGNvbnRleHQsIHRleHR1cmUsIGFzc2lnbikge1xuICAgICAgICByZXR1cm4gR0xURkxvYWRlci5Mb2FkRXh0ZW5zaW9uQXN5bmMoY29udGV4dCwgdGV4dHVyZSwgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzYW1wbGVyID0gdGV4dHVyZS5zYW1wbGVyID09IHVuZGVmaW5lZCA/IEdMVEZMb2FkZXIuRGVmYXVsdFNhbXBsZXIgOiBBcnJheUl0ZW0uR2V0KGAke2NvbnRleHR9L3NhbXBsZXJgLCB0aGlzLl9sb2FkZXIuZ2x0Zi5zYW1wbGVycywgdGV4dHVyZS5zYW1wbGVyKTtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlID0gQXJyYXlJdGVtLkdldChgJHtleHRlbnNpb25Db250ZXh0fS9zb3VyY2VgLCB0aGlzLl9sb2FkZXIuZ2x0Zi5pbWFnZXMsIGV4dGVuc2lvbi5zb3VyY2UpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2xvYWRlci5fY3JlYXRlVGV4dHVyZUFzeW5jKGNvbnRleHQsIHNhbXBsZXIsIGltYWdlLCAoYmFieWxvblRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICBhc3NpZ24oYmFieWxvblRleHR1cmUpO1xuICAgICAgICAgICAgfSwgdGV4dHVyZS5fdGV4dHVyZUluZm8ubm9uQ29sb3JEYXRhID8geyB1c2VSR0JBSWZBU1RDQkM3Tm90QXZhaWxhYmxlV2hlblVBU1RDOiB0cnVlIH0gOiB1bmRlZmluZWQsICF0ZXh0dXJlLl90ZXh0dXJlSW5mby5ub25Db2xvckRhdGEpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfdGV4dHVyZV9iYXNpc3UobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfdGV4dHVyZV9iYXNpc3UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_basisu.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_transform.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_transform.js ***!
  \**************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_texture_transform: () => (/* binding */ KHR_texture_transform)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/texture.js */ \"@babylonjs/core/Materials/Textures/texture.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"KHR_texture_transform\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_transform/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_texture_transform {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * @internal\n     */\n    loadTextureInfoAsync(context, textureInfo, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtensionAsync(context, textureInfo, this.name, (extensionContext, extension) => {\n            return this._loader.loadTextureInfoAsync(context, textureInfo, (babylonTexture) => {\n                if (!(babylonTexture instanceof _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_0__.Texture)) {\n                    throw new Error(`${extensionContext}: Texture type not supported`);\n                }\n                if (extension.offset) {\n                    babylonTexture.uOffset = extension.offset[0];\n                    babylonTexture.vOffset = extension.offset[1];\n                }\n                // Always rotate around the origin.\n                babylonTexture.uRotationCenter = 0;\n                babylonTexture.vRotationCenter = 0;\n                if (extension.rotation) {\n                    babylonTexture.wAng = -extension.rotation;\n                }\n                if (extension.scale) {\n                    babylonTexture.uScale = extension.scale[0];\n                    babylonTexture.vScale = extension.scale[1];\n                }\n                if (extension.texCoord != undefined) {\n                    babylonTexture.coordinatesIndex = extension.texCoord;\n                }\n                assign(babylonTexture);\n            });\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_texture_transform(loader));\n//# sourceMappingURL=KHR_texture_transform.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX3RleHR1cmVfdHJhbnNmb3JtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3RTtBQUMxQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxnREFBZ0Qsa0ZBQU87QUFDdkQsdUNBQXVDLGlCQUFpQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNEQUFVO0FBQ1YsaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL0tIUl90ZXh0dXJlX3RyYW5zZm9ybS5qcz9jM2NmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHR1cmUgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9UZXh0dXJlcy90ZXh0dXJlLmpzXCI7XG5pbXBvcnQgeyBHTFRGTG9hZGVyIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl90ZXh0dXJlX3RyYW5zZm9ybVwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl90ZXh0dXJlX3RyYW5zZm9ybS9SRUFETUUubWQpXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBLSFJfdGV4dHVyZV90cmFuc2Zvcm0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogVGhlIG5hbWUgb2YgdGhpcyBleHRlbnNpb24uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBsb2FkVGV4dHVyZUluZm9Bc3luYyhjb250ZXh0LCB0ZXh0dXJlSW5mbywgYXNzaWduKSB7XG4gICAgICAgIHJldHVybiBHTFRGTG9hZGVyLkxvYWRFeHRlbnNpb25Bc3luYyhjb250ZXh0LCB0ZXh0dXJlSW5mbywgdGhpcy5uYW1lLCAoZXh0ZW5zaW9uQ29udGV4dCwgZXh0ZW5zaW9uKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9hZGVyLmxvYWRUZXh0dXJlSW5mb0FzeW5jKGNvbnRleHQsIHRleHR1cmVJbmZvLCAoYmFieWxvblRleHR1cmUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIShiYWJ5bG9uVGV4dHVyZSBpbnN0YW5jZW9mIFRleHR1cmUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtleHRlbnNpb25Db250ZXh0fTogVGV4dHVyZSB0eXBlIG5vdCBzdXBwb3J0ZWRgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGV4dGVuc2lvbi5vZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgYmFieWxvblRleHR1cmUudU9mZnNldCA9IGV4dGVuc2lvbi5vZmZzZXRbMF07XG4gICAgICAgICAgICAgICAgICAgIGJhYnlsb25UZXh0dXJlLnZPZmZzZXQgPSBleHRlbnNpb24ub2Zmc2V0WzFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBBbHdheXMgcm90YXRlIGFyb3VuZCB0aGUgb3JpZ2luLlxuICAgICAgICAgICAgICAgIGJhYnlsb25UZXh0dXJlLnVSb3RhdGlvbkNlbnRlciA9IDA7XG4gICAgICAgICAgICAgICAgYmFieWxvblRleHR1cmUudlJvdGF0aW9uQ2VudGVyID0gMDtcbiAgICAgICAgICAgICAgICBpZiAoZXh0ZW5zaW9uLnJvdGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhYnlsb25UZXh0dXJlLndBbmcgPSAtZXh0ZW5zaW9uLnJvdGF0aW9uO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZXh0ZW5zaW9uLnNjYWxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhYnlsb25UZXh0dXJlLnVTY2FsZSA9IGV4dGVuc2lvbi5zY2FsZVswXTtcbiAgICAgICAgICAgICAgICAgICAgYmFieWxvblRleHR1cmUudlNjYWxlID0gZXh0ZW5zaW9uLnNjYWxlWzFdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZXh0ZW5zaW9uLnRleENvb3JkICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uVGV4dHVyZS5jb29yZGluYXRlc0luZGV4ID0gZXh0ZW5zaW9uLnRleENvb3JkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhc3NpZ24oYmFieWxvblRleHR1cmUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IEtIUl90ZXh0dXJlX3RyYW5zZm9ybShsb2FkZXIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUtIUl90ZXh0dXJlX3RyYW5zZm9ybS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_transform.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_xmp_json_ld.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_xmp_json_ld.js ***!
  \********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KHR_xmp_json_ld: () => (/* binding */ KHR_xmp_json_ld)\n/* harmony export */ });\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__]);\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst NAME = \"KHR_xmp_json_ld\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_xmp_json_ld/README.md)\n * @since 5.0.0\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass KHR_xmp_json_ld {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 100;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /**\n     * Called after the loader state changes to LOADING.\n     */\n    onLoading() {\n        if (this._loader.rootBabylonMesh === null) {\n            return;\n        }\n        const xmp_gltf = this._loader.gltf.extensions?.KHR_xmp_json_ld;\n        const xmp_node = this._loader.gltf.asset?.extensions?.KHR_xmp_json_ld;\n        if (xmp_gltf && xmp_node) {\n            const packet = +xmp_node.packet;\n            if (xmp_gltf.packets && packet < xmp_gltf.packets.length) {\n                this._loader.rootBabylonMesh.metadata = this._loader.rootBabylonMesh.metadata || {};\n                this._loader.rootBabylonMesh.metadata.xmp = xmp_gltf.packets[packet];\n            }\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader.RegisterExtension(NAME, (loader) => new KHR_xmp_json_ld(loader));\n//# sourceMappingURL=KHR_xmp_json_ld.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvS0hSX3htcF9qc29uX2xkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBVTtBQUNWLDJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9LSFJfeG1wX2pzb25fbGQuanM/NDNkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTFRGTG9hZGVyIH0gZnJvbSBcIi4uL2dsVEZMb2FkZXIuanNcIjtcbmNvbnN0IE5BTUUgPSBcIktIUl94bXBfanNvbl9sZFwiO1xuLyoqXG4gKiBbU3BlY2lmaWNhdGlvbl0oaHR0cHM6Ly9naXRodWIuY29tL0tocm9ub3NHcm91cC9nbFRGL2Jsb2IvbWFpbi9leHRlbnNpb25zLzIuMC9LaHJvbm9zL0tIUl94bXBfanNvbl9sZC9SRUFETUUubWQpXG4gKiBAc2luY2UgNS4wLjBcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIEtIUl94bXBfanNvbl9sZCB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IobG9hZGVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBUaGUgbmFtZSBvZiB0aGlzIGV4dGVuc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubmFtZSA9IE5BTUU7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEZWZpbmVzIGEgbnVtYmVyIHRoYXQgZGV0ZXJtaW5lcyB0aGUgb3JkZXIgdGhlIGV4dGVuc2lvbnMgYXJlIGFwcGxpZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLm9yZGVyID0gMTAwO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgYWZ0ZXIgdGhlIGxvYWRlciBzdGF0ZSBjaGFuZ2VzIHRvIExPQURJTkcuXG4gICAgICovXG4gICAgb25Mb2FkaW5nKCkge1xuICAgICAgICBpZiAodGhpcy5fbG9hZGVyLnJvb3RCYWJ5bG9uTWVzaCA9PT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHhtcF9nbHRmID0gdGhpcy5fbG9hZGVyLmdsdGYuZXh0ZW5zaW9ucz8uS0hSX3htcF9qc29uX2xkO1xuICAgICAgICBjb25zdCB4bXBfbm9kZSA9IHRoaXMuX2xvYWRlci5nbHRmLmFzc2V0Py5leHRlbnNpb25zPy5LSFJfeG1wX2pzb25fbGQ7XG4gICAgICAgIGlmICh4bXBfZ2x0ZiAmJiB4bXBfbm9kZSkge1xuICAgICAgICAgICAgY29uc3QgcGFja2V0ID0gK3htcF9ub2RlLnBhY2tldDtcbiAgICAgICAgICAgIGlmICh4bXBfZ2x0Zi5wYWNrZXRzICYmIHBhY2tldCA8IHhtcF9nbHRmLnBhY2tldHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9hZGVyLnJvb3RCYWJ5bG9uTWVzaC5tZXRhZGF0YSA9IHRoaXMuX2xvYWRlci5yb290QmFieWxvbk1lc2gubWV0YWRhdGEgfHwge307XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9hZGVyLnJvb3RCYWJ5bG9uTWVzaC5tZXRhZGF0YS54bXAgPSB4bXBfZ2x0Zi5wYWNrZXRzW3BhY2tldF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5HTFRGTG9hZGVyLlJlZ2lzdGVyRXh0ZW5zaW9uKE5BTUUsIChsb2FkZXIpID0+IG5ldyBLSFJfeG1wX2pzb25fbGQobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1LSFJfeG1wX2pzb25fbGQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_xmp_json_ld.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_audio_emitter.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_audio_emitter.js ***!
  \***********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSFT_audio_emitter: () => (/* binding */ MSFT_audio_emitter)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\n/* harmony import */ var _babylonjs_core_Animations_animationEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Animations/animationEvent.js */ \"@babylonjs/core/Animations/animationEvent.js\");\n/* harmony import */ var _babylonjs_core_Audio_sound_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Audio/sound.js */ \"@babylonjs/core/Audio/sound.js\");\n/* harmony import */ var _babylonjs_core_Audio_weightedsound_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Audio/weightedsound.js */ \"@babylonjs/core/Audio/weightedsound.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Animations_animationEvent_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Audio_sound_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Audio_weightedsound_js__WEBPACK_IMPORTED_MODULE_4__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__]);\n([_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Animations_animationEvent_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Audio_sound_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Audio_weightedsound_js__WEBPACK_IMPORTED_MODULE_4__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\nconst NAME = \"MSFT_audio_emitter\";\n/**\n * [Specification](https://github.com/najadojo/glTF/blob/MSFT_audio_emitter/extensions/2.0/Vendor/MSFT_audio_emitter/README.md)\n * !!! Experimental Extension Subject to Changes !!!\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass MSFT_audio_emitter {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        this._clips = null;\n        this._emitters = null;\n    }\n    /** @internal */\n    onLoading() {\n        const extensions = this._loader.gltf.extensions;\n        if (extensions && extensions[this.name]) {\n            const extension = extensions[this.name];\n            this._clips = extension.clips;\n            this._emitters = extension.emitters;\n            _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Assign(this._clips);\n            _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Assign(this._emitters);\n        }\n    }\n    /**\n     * @internal\n     */\n    loadSceneAsync(context, scene) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader.LoadExtensionAsync(context, scene, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            promises.push(this._loader.loadSceneAsync(context, scene));\n            for (const emitterIndex of extension.emitters) {\n                const emitter = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Get(`${extensionContext}/emitters`, this._emitters, emitterIndex);\n                if (emitter.refDistance != undefined ||\n                    emitter.maxDistance != undefined ||\n                    emitter.rolloffFactor != undefined ||\n                    emitter.distanceModel != undefined ||\n                    emitter.innerAngle != undefined ||\n                    emitter.outerAngle != undefined) {\n                    throw new Error(`${extensionContext}: Direction or Distance properties are not allowed on emitters attached to a scene`);\n                }\n                promises.push(this._loadEmitterAsync(`${extensionContext}/emitters/${emitter.index}`, emitter));\n            }\n            return Promise.all(promises).then(() => { });\n        });\n    }\n    /**\n     * @internal\n     */\n    loadNodeAsync(context, node, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader.LoadExtensionAsync(context, node, this.name, (extensionContext, extension) => {\n            const promises = new Array();\n            return this._loader\n                .loadNodeAsync(extensionContext, node, (babylonMesh) => {\n                for (const emitterIndex of extension.emitters) {\n                    const emitter = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Get(`${extensionContext}/emitters`, this._emitters, emitterIndex);\n                    promises.push(this._loadEmitterAsync(`${extensionContext}/emitters/${emitter.index}`, emitter).then(() => {\n                        for (const sound of emitter._babylonSounds) {\n                            sound.attachToMesh(babylonMesh);\n                            if (emitter.innerAngle != undefined || emitter.outerAngle != undefined) {\n                                sound.setLocalDirectionToMesh(_babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector3.Forward());\n                                sound.setDirectionalCone(2 * _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.ToDegrees(emitter.innerAngle == undefined ? Math.PI : emitter.innerAngle), 2 * _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.ToDegrees(emitter.outerAngle == undefined ? Math.PI : emitter.outerAngle), 0);\n                            }\n                        }\n                    }));\n                }\n                assign(babylonMesh);\n            })\n                .then((babylonMesh) => {\n                return Promise.all(promises).then(() => {\n                    return babylonMesh;\n                });\n            });\n        });\n    }\n    /**\n     * @internal\n     */\n    loadAnimationAsync(context, animation) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader.LoadExtensionAsync(context, animation, this.name, (extensionContext, extension) => {\n            return this._loader.loadAnimationAsync(context, animation).then((babylonAnimationGroup) => {\n                const promises = new Array();\n                _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Assign(extension.events);\n                for (const event of extension.events) {\n                    promises.push(this._loadAnimationEventAsync(`${extensionContext}/events/${event.index}`, context, animation, event, babylonAnimationGroup));\n                }\n                return Promise.all(promises).then(() => {\n                    return babylonAnimationGroup;\n                });\n            });\n        });\n    }\n    _loadClipAsync(context, clip) {\n        if (clip._objectURL) {\n            return clip._objectURL;\n        }\n        let promise;\n        if (clip.uri) {\n            promise = this._loader.loadUriAsync(context, clip, clip.uri);\n        }\n        else {\n            const bufferView = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Get(`${context}/bufferView`, this._loader.gltf.bufferViews, clip.bufferView);\n            promise = this._loader.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView);\n        }\n        clip._objectURL = promise.then((data) => {\n            return URL.createObjectURL(new Blob([data], { type: clip.mimeType }));\n        });\n        return clip._objectURL;\n    }\n    _loadEmitterAsync(context, emitter) {\n        emitter._babylonSounds = emitter._babylonSounds || [];\n        if (!emitter._babylonData) {\n            const clipPromises = new Array();\n            const name = emitter.name || `emitter${emitter.index}`;\n            const options = {\n                loop: false,\n                autoplay: false,\n                volume: emitter.volume == undefined ? 1 : emitter.volume,\n            };\n            for (let i = 0; i < emitter.clips.length; i++) {\n                const clipContext = `/extensions/${this.name}/clips`;\n                const clip = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Get(clipContext, this._clips, emitter.clips[i].clip);\n                clipPromises.push(this._loadClipAsync(`${clipContext}/${emitter.clips[i].clip}`, clip).then((objectURL) => {\n                    const sound = (emitter._babylonSounds[i] = new _babylonjs_core_Audio_sound_js__WEBPACK_IMPORTED_MODULE_3__.Sound(name, objectURL, this._loader.babylonScene, null, options));\n                    sound.refDistance = emitter.refDistance || 1;\n                    sound.maxDistance = emitter.maxDistance || 256;\n                    sound.rolloffFactor = emitter.rolloffFactor || 1;\n                    sound.distanceModel = emitter.distanceModel || \"exponential\";\n                }));\n            }\n            const promise = Promise.all(clipPromises).then(() => {\n                const weights = emitter.clips.map((clip) => {\n                    return clip.weight || 1;\n                });\n                const weightedSound = new _babylonjs_core_Audio_weightedsound_js__WEBPACK_IMPORTED_MODULE_4__.WeightedSound(emitter.loop || false, emitter._babylonSounds, weights);\n                if (emitter.innerAngle) {\n                    weightedSound.directionalConeInnerAngle = 2 * _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.ToDegrees(emitter.innerAngle);\n                }\n                if (emitter.outerAngle) {\n                    weightedSound.directionalConeOuterAngle = 2 * _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.ToDegrees(emitter.outerAngle);\n                }\n                if (emitter.volume) {\n                    weightedSound.volume = emitter.volume;\n                }\n                emitter._babylonData.sound = weightedSound;\n            });\n            emitter._babylonData = {\n                loaded: promise,\n            };\n        }\n        return emitter._babylonData.loaded;\n    }\n    _getEventAction(context, sound, action, time, startOffset) {\n        switch (action) {\n            case \"play\" /* IMSFTAudioEmitter_AnimationEventAction.play */: {\n                return (currentFrame) => {\n                    const frameOffset = (startOffset || 0) + (currentFrame - time);\n                    sound.play(frameOffset);\n                };\n            }\n            case \"stop\" /* IMSFTAudioEmitter_AnimationEventAction.stop */: {\n                return () => {\n                    sound.stop();\n                };\n            }\n            case \"pause\" /* IMSFTAudioEmitter_AnimationEventAction.pause */: {\n                return () => {\n                    sound.pause();\n                };\n            }\n            default: {\n                throw new Error(`${context}: Unsupported action ${action}`);\n            }\n        }\n    }\n    _loadAnimationEventAsync(context, animationContext, animation, event, babylonAnimationGroup) {\n        if (babylonAnimationGroup.targetedAnimations.length == 0) {\n            return Promise.resolve();\n        }\n        const babylonAnimation = babylonAnimationGroup.targetedAnimations[0];\n        const emitterIndex = event.emitter;\n        const emitter = _glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.ArrayItem.Get(`/extensions/${this.name}/emitters`, this._emitters, emitterIndex);\n        return this._loadEmitterAsync(context, emitter).then(() => {\n            const sound = emitter._babylonData.sound;\n            if (sound) {\n                const babylonAnimationEvent = new _babylonjs_core_Animations_animationEvent_js__WEBPACK_IMPORTED_MODULE_2__.AnimationEvent(event.time, this._getEventAction(context, sound, event.action, event.time, event.startOffset));\n                babylonAnimation.animation.addEvent(babylonAnimationEvent);\n                // Make sure all started audio stops when this animation is terminated.\n                babylonAnimationGroup.onAnimationGroupEndObservable.add(() => {\n                    sound.stop();\n                });\n                babylonAnimationGroup.onAnimationGroupPauseObservable.add(() => {\n                    sound.pause();\n                });\n            }\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_5__.GLTFLoader.RegisterExtension(NAME, (loader) => new MSFT_audio_emitter(loader));\n//# sourceMappingURL=MSFT_audio_emitter.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_audio_emitter.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_lod.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_lod.js ***!
  \*************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSFT_lod: () => (/* binding */ MSFT_lod)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Misc/observable.js */ \"@babylonjs/core/Misc/observable.js\");\n/* harmony import */ var _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Misc/deferred.js */ \"@babylonjs/core/Misc/deferred.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst NAME = \"MSFT_lod\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/MSFT_lod/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass MSFT_lod {\n    /**\n     * @internal\n     */\n    constructor(loader) {\n        /**\n         * The name of this extension.\n         */\n        this.name = NAME;\n        /**\n         * Defines a number that determines the order the extensions are applied.\n         */\n        this.order = 100;\n        /**\n         * Maximum number of LODs to load, starting from the lowest LOD.\n         */\n        this.maxLODsToLoad = 10;\n        /**\n         * Observable raised when all node LODs of one level are loaded.\n         * The event data is the index of the loaded LOD starting from zero.\n         * Dispose the loader to cancel the loading of the next level of LODs.\n         */\n        this.onNodeLODsLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when all material LODs of one level are loaded.\n         * The event data is the index of the loaded LOD starting from zero.\n         * Dispose the loader to cancel the loading of the next level of LODs.\n         */\n        this.onMaterialLODsLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        this._bufferLODs = new Array();\n        this._nodeIndexLOD = null;\n        this._nodeSignalLODs = new Array();\n        this._nodePromiseLODs = new Array();\n        this._nodeBufferLODs = new Array();\n        this._materialIndexLOD = null;\n        this._materialSignalLODs = new Array();\n        this._materialPromiseLODs = new Array();\n        this._materialBufferLODs = new Array();\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n        this._nodeIndexLOD = null;\n        this._nodeSignalLODs.length = 0;\n        this._nodePromiseLODs.length = 0;\n        this._nodeBufferLODs.length = 0;\n        this._materialIndexLOD = null;\n        this._materialSignalLODs.length = 0;\n        this._materialPromiseLODs.length = 0;\n        this._materialBufferLODs.length = 0;\n        this.onMaterialLODsLoadedObservable.clear();\n        this.onNodeLODsLoadedObservable.clear();\n    }\n    /** @internal */\n    onReady() {\n        for (let indexLOD = 0; indexLOD < this._nodePromiseLODs.length; indexLOD++) {\n            const promise = Promise.all(this._nodePromiseLODs[indexLOD]).then(() => {\n                if (indexLOD !== 0) {\n                    this._loader.endPerformanceCounter(`Node LOD ${indexLOD}`);\n                    this._loader.log(`Loaded node LOD ${indexLOD}`);\n                }\n                this.onNodeLODsLoadedObservable.notifyObservers(indexLOD);\n                if (indexLOD !== this._nodePromiseLODs.length - 1) {\n                    this._loader.startPerformanceCounter(`Node LOD ${indexLOD + 1}`);\n                    this._loadBufferLOD(this._nodeBufferLODs, indexLOD + 1);\n                    if (this._nodeSignalLODs[indexLOD]) {\n                        this._nodeSignalLODs[indexLOD].resolve();\n                    }\n                }\n            });\n            this._loader._completePromises.push(promise);\n        }\n        for (let indexLOD = 0; indexLOD < this._materialPromiseLODs.length; indexLOD++) {\n            const promise = Promise.all(this._materialPromiseLODs[indexLOD]).then(() => {\n                if (indexLOD !== 0) {\n                    this._loader.endPerformanceCounter(`Material LOD ${indexLOD}`);\n                    this._loader.log(`Loaded material LOD ${indexLOD}`);\n                }\n                this.onMaterialLODsLoadedObservable.notifyObservers(indexLOD);\n                if (indexLOD !== this._materialPromiseLODs.length - 1) {\n                    this._loader.startPerformanceCounter(`Material LOD ${indexLOD + 1}`);\n                    this._loadBufferLOD(this._materialBufferLODs, indexLOD + 1);\n                    if (this._materialSignalLODs[indexLOD]) {\n                        this._materialSignalLODs[indexLOD].resolve();\n                    }\n                }\n            });\n            this._loader._completePromises.push(promise);\n        }\n    }\n    /**\n     * @internal\n     */\n    loadSceneAsync(context, scene) {\n        const promise = this._loader.loadSceneAsync(context, scene);\n        this._loadBufferLOD(this._bufferLODs, 0);\n        return promise;\n    }\n    /**\n     * @internal\n     */\n    loadNodeAsync(context, node, assign) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.LoadExtensionAsync(context, node, this.name, (extensionContext, extension) => {\n            let firstPromise;\n            const nodeLODs = this._getLODs(extensionContext, node, this._loader.gltf.nodes, extension.ids);\n            this._loader.logOpen(`${extensionContext}`);\n            for (let indexLOD = 0; indexLOD < nodeLODs.length; indexLOD++) {\n                const nodeLOD = nodeLODs[indexLOD];\n                if (indexLOD !== 0) {\n                    this._nodeIndexLOD = indexLOD;\n                    this._nodeSignalLODs[indexLOD] = this._nodeSignalLODs[indexLOD] || new _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n                }\n                const assignWrap = (babylonTransformNode) => {\n                    assign(babylonTransformNode);\n                    babylonTransformNode.setEnabled(false);\n                };\n                const promise = this._loader.loadNodeAsync(`/nodes/${nodeLOD.index}`, nodeLOD, assignWrap).then((babylonMesh) => {\n                    if (indexLOD !== 0) {\n                        // TODO: should not rely on _babylonTransformNode\n                        const previousNodeLOD = nodeLODs[indexLOD - 1];\n                        if (previousNodeLOD._babylonTransformNode) {\n                            this._disposeTransformNode(previousNodeLOD._babylonTransformNode);\n                            delete previousNodeLOD._babylonTransformNode;\n                        }\n                    }\n                    babylonMesh.setEnabled(true);\n                    return babylonMesh;\n                });\n                this._nodePromiseLODs[indexLOD] = this._nodePromiseLODs[indexLOD] || [];\n                if (indexLOD === 0) {\n                    firstPromise = promise;\n                }\n                else {\n                    this._nodeIndexLOD = null;\n                    this._nodePromiseLODs[indexLOD].push(promise);\n                }\n            }\n            this._loader.logClose();\n            return firstPromise;\n        });\n    }\n    /**\n     * @internal\n     */\n    _loadMaterialAsync(context, material, babylonMesh, babylonDrawMode, assign) {\n        // Don't load material LODs if already loading a node LOD.\n        if (this._nodeIndexLOD) {\n            return null;\n        }\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.LoadExtensionAsync(context, material, this.name, (extensionContext, extension) => {\n            let firstPromise;\n            const materialLODs = this._getLODs(extensionContext, material, this._loader.gltf.materials, extension.ids);\n            this._loader.logOpen(`${extensionContext}`);\n            for (let indexLOD = 0; indexLOD < materialLODs.length; indexLOD++) {\n                const materialLOD = materialLODs[indexLOD];\n                if (indexLOD !== 0) {\n                    this._materialIndexLOD = indexLOD;\n                }\n                const promise = this._loader\n                    ._loadMaterialAsync(`/materials/${materialLOD.index}`, materialLOD, babylonMesh, babylonDrawMode, (babylonMaterial) => {\n                    if (indexLOD === 0) {\n                        assign(babylonMaterial);\n                    }\n                })\n                    .then((babylonMaterial) => {\n                    if (indexLOD !== 0) {\n                        assign(babylonMaterial);\n                        // TODO: should not rely on _data\n                        const previousDataLOD = materialLODs[indexLOD - 1]._data;\n                        if (previousDataLOD[babylonDrawMode]) {\n                            this._disposeMaterials([previousDataLOD[babylonDrawMode].babylonMaterial]);\n                            delete previousDataLOD[babylonDrawMode];\n                        }\n                    }\n                    return babylonMaterial;\n                });\n                this._materialPromiseLODs[indexLOD] = this._materialPromiseLODs[indexLOD] || [];\n                if (indexLOD === 0) {\n                    firstPromise = promise;\n                }\n                else {\n                    this._materialIndexLOD = null;\n                    this._materialPromiseLODs[indexLOD].push(promise);\n                }\n            }\n            this._loader.logClose();\n            return firstPromise;\n        });\n    }\n    /**\n     * @internal\n     */\n    _loadUriAsync(context, property, uri) {\n        // Defer the loading of uris if loading a node or material LOD.\n        if (this._nodeIndexLOD !== null) {\n            this._loader.log(`deferred`);\n            const previousIndexLOD = this._nodeIndexLOD - 1;\n            this._nodeSignalLODs[previousIndexLOD] = this._nodeSignalLODs[previousIndexLOD] || new _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n            return this._nodeSignalLODs[this._nodeIndexLOD - 1].promise.then(() => {\n                return this._loader.loadUriAsync(context, property, uri);\n            });\n        }\n        else if (this._materialIndexLOD !== null) {\n            this._loader.log(`deferred`);\n            const previousIndexLOD = this._materialIndexLOD - 1;\n            this._materialSignalLODs[previousIndexLOD] = this._materialSignalLODs[previousIndexLOD] || new _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();\n            return this._materialSignalLODs[previousIndexLOD].promise.then(() => {\n                return this._loader.loadUriAsync(context, property, uri);\n            });\n        }\n        return null;\n    }\n    /**\n     * @internal\n     */\n    loadBufferAsync(context, buffer, byteOffset, byteLength) {\n        if (this._loader.parent.useRangeRequests && !buffer.uri) {\n            if (!this._loader.bin) {\n                throw new Error(`${context}: Uri is missing or the binary glTF is missing its binary chunk`);\n            }\n            const loadAsync = (bufferLODs, indexLOD) => {\n                const start = byteOffset;\n                const end = start + byteLength - 1;\n                let bufferLOD = bufferLODs[indexLOD];\n                if (bufferLOD) {\n                    bufferLOD.start = Math.min(bufferLOD.start, start);\n                    bufferLOD.end = Math.max(bufferLOD.end, end);\n                }\n                else {\n                    bufferLOD = { start: start, end: end, loaded: new _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred() };\n                    bufferLODs[indexLOD] = bufferLOD;\n                }\n                return bufferLOD.loaded.promise.then((data) => {\n                    return new Uint8Array(data.buffer, data.byteOffset + byteOffset - bufferLOD.start, byteLength);\n                });\n            };\n            this._loader.log(`deferred`);\n            if (this._nodeIndexLOD !== null) {\n                return loadAsync(this._nodeBufferLODs, this._nodeIndexLOD);\n            }\n            else if (this._materialIndexLOD !== null) {\n                return loadAsync(this._materialBufferLODs, this._materialIndexLOD);\n            }\n            else {\n                return loadAsync(this._bufferLODs, 0);\n            }\n        }\n        return null;\n    }\n    _loadBufferLOD(bufferLODs, indexLOD) {\n        const bufferLOD = bufferLODs[indexLOD];\n        if (bufferLOD) {\n            this._loader.log(`Loading buffer range [${bufferLOD.start}-${bufferLOD.end}]`);\n            this._loader.bin.readAsync(bufferLOD.start, bufferLOD.end - bufferLOD.start + 1).then((data) => {\n                bufferLOD.loaded.resolve(data);\n            }, (error) => {\n                bufferLOD.loaded.reject(error);\n            });\n        }\n    }\n    /**\n     * @returns an array of LOD properties from lowest to highest.\n     * @param context\n     * @param property\n     * @param array\n     * @param ids\n     */\n    _getLODs(context, property, array, ids) {\n        if (this.maxLODsToLoad <= 0) {\n            throw new Error(\"maxLODsToLoad must be greater than zero\");\n        }\n        const properties = [];\n        for (let i = ids.length - 1; i >= 0; i--) {\n            properties.push(_glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.ArrayItem.Get(`${context}/ids/${ids[i]}`, array, ids[i]));\n            if (properties.length === this.maxLODsToLoad) {\n                return properties;\n            }\n        }\n        properties.push(property);\n        return properties;\n    }\n    _disposeTransformNode(babylonTransformNode) {\n        const babylonMaterials = [];\n        const babylonMaterial = babylonTransformNode.material;\n        if (babylonMaterial) {\n            babylonMaterials.push(babylonMaterial);\n        }\n        for (const babylonMesh of babylonTransformNode.getChildMeshes()) {\n            if (babylonMesh.material) {\n                babylonMaterials.push(babylonMesh.material);\n            }\n        }\n        babylonTransformNode.dispose();\n        const babylonMaterialsToDispose = babylonMaterials.filter((babylonMaterial) => this._loader.babylonScene.meshes.every((mesh) => mesh.material != babylonMaterial));\n        this._disposeMaterials(babylonMaterialsToDispose);\n    }\n    _disposeMaterials(babylonMaterials) {\n        const babylonTextures = {};\n        for (const babylonMaterial of babylonMaterials) {\n            for (const babylonTexture of babylonMaterial.getActiveTextures()) {\n                babylonTextures[babylonTexture.uniqueId] = babylonTexture;\n            }\n            babylonMaterial.dispose();\n        }\n        for (const uniqueId in babylonTextures) {\n            for (const babylonMaterial of this._loader.babylonScene.materials) {\n                if (babylonMaterial.hasTexture(babylonTextures[uniqueId])) {\n                    delete babylonTextures[uniqueId];\n                }\n            }\n        }\n        for (const uniqueId in babylonTextures) {\n            babylonTextures[uniqueId].dispose();\n        }\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_2__.GLTFLoader.RegisterExtension(NAME, (loader) => new MSFT_lod(loader));\n//# sourceMappingURL=MSFT_lod.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_lod.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_minecraftMesh.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_minecraftMesh.js ***!
  \***********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSFT_minecraftMesh: () => (/* binding */ MSFT_minecraftMesh)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"MSFT_minecraftMesh\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass MSFT_minecraftMesh {\n    /** @internal */\n    constructor(loader) {\n        /** @internal */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /** @internal */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtraAsync(context, material, this.name, (extraContext, extra) => {\n            if (extra) {\n                if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n                    throw new Error(`${extraContext}: Material type not supported`);\n                }\n                const promise = this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial);\n                if (babylonMaterial.needAlphaBlending()) {\n                    babylonMaterial.forceDepthWrite = true;\n                    babylonMaterial.separateCullingPass = true;\n                }\n                babylonMaterial.backFaceCulling = babylonMaterial.forceDepthWrite;\n                babylonMaterial.twoSidedLighting = true;\n                return promise;\n            }\n            return null;\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new MSFT_minecraftMesh(loader));\n//# sourceMappingURL=MSFT_minecraftMesh.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvTVNGVF9taW5lY3JhZnRNZXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRTtBQUM3QjtBQUM5QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBVTtBQUN6QjtBQUNBLGlEQUFpRCxxRkFBVztBQUM1RCx1Q0FBdUMsYUFBYTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxzREFBVTtBQUNWLDhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9NU0ZUX21pbmVjcmFmdE1lc2guanM/YzBlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQlJNYXRlcmlhbCB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvTWF0ZXJpYWxzL1BCUi9wYnJNYXRlcmlhbC5qc1wiO1xuaW1wb3J0IHsgR0xURkxvYWRlciB9IGZyb20gXCIuLi9nbFRGTG9hZGVyLmpzXCI7XG5jb25zdCBOQU1FID0gXCJNU0ZUX21pbmVjcmFmdE1lc2hcIjtcbi8qKiBAaW50ZXJuYWwgKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb25cbmV4cG9ydCBjbGFzcyBNU0ZUX21pbmVjcmFmdE1lc2gge1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgbG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dHJhQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dHJhQ29udGV4dCwgZXh0cmEpID0+IHtcbiAgICAgICAgICAgIGlmIChleHRyYSkge1xuICAgICAgICAgICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXh0cmFDb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSB0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpO1xuICAgICAgICAgICAgICAgIGlmIChiYWJ5bG9uTWF0ZXJpYWwubmVlZEFscGhhQmxlbmRpbmcoKSkge1xuICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuZm9yY2VEZXB0aFdyaXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYmFieWxvbk1hdGVyaWFsLnNlcGFyYXRlQ3VsbGluZ1Bhc3MgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYmFja0ZhY2VDdWxsaW5nID0gYmFieWxvbk1hdGVyaWFsLmZvcmNlRGVwdGhXcml0ZTtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwudHdvU2lkZWRMaWdodGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuR0xURkxvYWRlci5SZWdpc3RlckV4dGVuc2lvbihOQU1FLCAobG9hZGVyKSA9PiBuZXcgTVNGVF9taW5lY3JhZnRNZXNoKGxvYWRlcikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TVNGVF9taW5lY3JhZnRNZXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_minecraftMesh.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_sRGBFactors.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_sRGBFactors.js ***!
  \*********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MSFT_sRGBFactors: () => (/* binding */ MSFT_sRGBFactors)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__, _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst NAME = \"MSFT_sRGBFactors\";\n/** @internal */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass MSFT_sRGBFactors {\n    /** @internal */\n    constructor(loader) {\n        /** @internal */\n        this.name = NAME;\n        this._loader = loader;\n        this.enabled = this._loader.isExtensionUsed(NAME);\n    }\n    /** @internal */\n    dispose() {\n        this._loader = null;\n    }\n    /** @internal */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return _glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.LoadExtraAsync(context, material, this.name, (extraContext, extra) => {\n            if (extra) {\n                if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_0__.PBRMaterial)) {\n                    throw new Error(`${extraContext}: Material type not supported`);\n                }\n                const promise = this._loader.loadMaterialPropertiesAsync(context, material, babylonMaterial);\n                const useExactSrgbConversions = babylonMaterial.getScene().getEngine().useExactSrgbConversions;\n                if (!babylonMaterial.albedoTexture) {\n                    babylonMaterial.albedoColor.toLinearSpaceToRef(babylonMaterial.albedoColor, useExactSrgbConversions);\n                }\n                if (!babylonMaterial.reflectivityTexture) {\n                    babylonMaterial.reflectivityColor.toLinearSpaceToRef(babylonMaterial.reflectivityColor, useExactSrgbConversions);\n                }\n                return promise;\n            }\n            return null;\n        });\n    }\n}\n_glTFLoader_js__WEBPACK_IMPORTED_MODULE_1__.GLTFLoader.RegisterExtension(NAME, (loader) => new MSFT_sRGBFactors(loader));\n//# sourceMappingURL=MSFT_sRGBFactors.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvTVNGVF9zUkdCRmFjdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkU7QUFDN0I7QUFDOUM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVU7QUFDekI7QUFDQSxpREFBaUQscUZBQVc7QUFDNUQsdUNBQXVDLGFBQWE7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxzREFBVTtBQUNWLDRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9NU0ZUX3NSR0JGYWN0b3JzLmpzP2EyNjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUEJSTWF0ZXJpYWwgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGVyaWFscy9QQlIvcGJyTWF0ZXJpYWwuanNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwiLi4vZ2xURkxvYWRlci5qc1wiO1xuY29uc3QgTkFNRSA9IFwiTVNGVF9zUkdCRmFjdG9yc1wiO1xuLyoqIEBpbnRlcm5hbCAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvblxuZXhwb3J0IGNsYXNzIE1TRlRfc1JHQkZhY3RvcnMge1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBjb25zdHJ1Y3Rvcihsb2FkZXIpIHtcbiAgICAgICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgICAgICB0aGlzLm5hbWUgPSBOQU1FO1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuZW5hYmxlZCA9IHRoaXMuX2xvYWRlci5pc0V4dGVuc2lvblVzZWQoTkFNRSk7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLl9sb2FkZXIgPSBudWxsO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgbG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpIHtcbiAgICAgICAgcmV0dXJuIEdMVEZMb2FkZXIuTG9hZEV4dHJhQXN5bmMoY29udGV4dCwgbWF0ZXJpYWwsIHRoaXMubmFtZSwgKGV4dHJhQ29udGV4dCwgZXh0cmEpID0+IHtcbiAgICAgICAgICAgIGlmIChleHRyYSkge1xuICAgICAgICAgICAgICAgIGlmICghKGJhYnlsb25NYXRlcmlhbCBpbnN0YW5jZW9mIFBCUk1hdGVyaWFsKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXh0cmFDb250ZXh0fTogTWF0ZXJpYWwgdHlwZSBub3Qgc3VwcG9ydGVkYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSB0aGlzLl9sb2FkZXIubG9hZE1hdGVyaWFsUHJvcGVydGllc0FzeW5jKGNvbnRleHQsIG1hdGVyaWFsLCBiYWJ5bG9uTWF0ZXJpYWwpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHVzZUV4YWN0U3JnYkNvbnZlcnNpb25zID0gYmFieWxvbk1hdGVyaWFsLmdldFNjZW5lKCkuZ2V0RW5naW5lKCkudXNlRXhhY3RTcmdiQ29udmVyc2lvbnM7XG4gICAgICAgICAgICAgICAgaWYgKCFiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvVGV4dHVyZSkge1xuICAgICAgICAgICAgICAgICAgICBiYWJ5bG9uTWF0ZXJpYWwuYWxiZWRvQ29sb3IudG9MaW5lYXJTcGFjZVRvUmVmKGJhYnlsb25NYXRlcmlhbC5hbGJlZG9Db2xvciwgdXNlRXhhY3RTcmdiQ29udmVyc2lvbnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWJhYnlsb25NYXRlcmlhbC5yZWZsZWN0aXZpdHlUZXh0dXJlKSB7XG4gICAgICAgICAgICAgICAgICAgIGJhYnlsb25NYXRlcmlhbC5yZWZsZWN0aXZpdHlDb2xvci50b0xpbmVhclNwYWNlVG9SZWYoYmFieWxvbk1hdGVyaWFsLnJlZmxlY3Rpdml0eUNvbG9yLCB1c2VFeGFjdFNyZ2JDb252ZXJzaW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbkdMVEZMb2FkZXIuUmVnaXN0ZXJFeHRlbnNpb24oTkFNRSwgKGxvYWRlcikgPT4gbmV3IE1TRlRfc1JHQkZhY3RvcnMobG9hZGVyKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NU0ZUX3NSR0JGYWN0b3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_sRGBFactors.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/gltfPathToObjectConverter.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/gltfPathToObjectConverter.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFPathToObjectConverter: () => (/* binding */ GLTFPathToObjectConverter)\n/* harmony export */ });\n/**\n * A converter that takes a glTF Object Model JSON Pointer\n * and transforms it into an ObjectAccessorContainer, allowing\n * objects referenced in the glTF to be associated with their\n * respective Babylon.js objects.\n */\nclass GLTFPathToObjectConverter {\n    constructor(_gltf, _infoTree) {\n        this._gltf = _gltf;\n        this._infoTree = _infoTree;\n    }\n    /**\n     * The pointer string is represented by a [JSON pointer](https://datatracker.ietf.org/doc/html/rfc6901).\n     * <animationPointer> := /<rootNode>/<assetIndex>/<propertyPath>\n     * <rootNode> := \"nodes\" | \"materials\" | \"meshes\" | \"cameras\" | \"extensions\"\n     * <assetIndex> := <digit> | <name>\n     * <propertyPath> := <extensionPath> | <standardPath>\n     * <extensionPath> := \"extensions\"/<name>/<standardPath>\n     * <standardPath> := <name> | <name>/<standardPath>\n     * <name> := W+\n     * <digit> := D+\n     *\n     * Examples:\n     *  - \"/nodes/0/rotation\"\n     *  - \"/materials/2/emissiveFactor\"\n     *  - \"/materials/2/pbrMetallicRoughness/baseColorFactor\"\n     *  - \"/materials/2/extensions/KHR_materials_emissive_strength/emissiveStrength\"\n     *\n     * @param path The path to convert\n     * @returns The object and info associated with the path\n     */\n    convert(path) {\n        let objectTree = this._gltf;\n        let infoTree = this._infoTree;\n        let target = undefined;\n        if (!path.startsWith(\"/\")) {\n            throw new Error(\"Path must start with a /\");\n        }\n        const parts = path.split(\"/\");\n        parts.shift();\n        for (const part of parts) {\n            if (infoTree.__array__) {\n                infoTree = infoTree.__array__;\n            }\n            else {\n                infoTree = infoTree[part];\n                if (!infoTree) {\n                    throw new Error(`Path ${path} is invalid`);\n                }\n            }\n            if (objectTree === undefined) {\n                throw new Error(`Path ${path} is invalid`);\n            }\n            objectTree = objectTree[part];\n            if (infoTree.__target__) {\n                target = objectTree;\n            }\n        }\n        return {\n            object: target,\n            info: infoTree,\n        };\n    }\n}\n//# sourceMappingURL=gltfPathToObjectConverter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvZ2x0ZlBhdGhUb09iamVjdENvbnZlcnRlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxNQUFNO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvRXh0ZW5zaW9ucy9nbHRmUGF0aFRvT2JqZWN0Q29udmVydGVyLmpzPzIzMWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGNvbnZlcnRlciB0aGF0IHRha2VzIGEgZ2xURiBPYmplY3QgTW9kZWwgSlNPTiBQb2ludGVyXG4gKiBhbmQgdHJhbnNmb3JtcyBpdCBpbnRvIGFuIE9iamVjdEFjY2Vzc29yQ29udGFpbmVyLCBhbGxvd2luZ1xuICogb2JqZWN0cyByZWZlcmVuY2VkIGluIHRoZSBnbFRGIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCB0aGVpclxuICogcmVzcGVjdGl2ZSBCYWJ5bG9uLmpzIG9iamVjdHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBHTFRGUGF0aFRvT2JqZWN0Q29udmVydGVyIHtcbiAgICBjb25zdHJ1Y3RvcihfZ2x0ZiwgX2luZm9UcmVlKSB7XG4gICAgICAgIHRoaXMuX2dsdGYgPSBfZ2x0ZjtcbiAgICAgICAgdGhpcy5faW5mb1RyZWUgPSBfaW5mb1RyZWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBwb2ludGVyIHN0cmluZyBpcyByZXByZXNlbnRlZCBieSBhIFtKU09OIHBvaW50ZXJdKGh0dHBzOi8vZGF0YXRyYWNrZXIuaWV0Zi5vcmcvZG9jL2h0bWwvcmZjNjkwMSkuXG4gICAgICogPGFuaW1hdGlvblBvaW50ZXI+IDo9IC88cm9vdE5vZGU+Lzxhc3NldEluZGV4Pi88cHJvcGVydHlQYXRoPlxuICAgICAqIDxyb290Tm9kZT4gOj0gXCJub2Rlc1wiIHwgXCJtYXRlcmlhbHNcIiB8IFwibWVzaGVzXCIgfCBcImNhbWVyYXNcIiB8IFwiZXh0ZW5zaW9uc1wiXG4gICAgICogPGFzc2V0SW5kZXg+IDo9IDxkaWdpdD4gfCA8bmFtZT5cbiAgICAgKiA8cHJvcGVydHlQYXRoPiA6PSA8ZXh0ZW5zaW9uUGF0aD4gfCA8c3RhbmRhcmRQYXRoPlxuICAgICAqIDxleHRlbnNpb25QYXRoPiA6PSBcImV4dGVuc2lvbnNcIi88bmFtZT4vPHN0YW5kYXJkUGF0aD5cbiAgICAgKiA8c3RhbmRhcmRQYXRoPiA6PSA8bmFtZT4gfCA8bmFtZT4vPHN0YW5kYXJkUGF0aD5cbiAgICAgKiA8bmFtZT4gOj0gVytcbiAgICAgKiA8ZGlnaXQ+IDo9IEQrXG4gICAgICpcbiAgICAgKiBFeGFtcGxlczpcbiAgICAgKiAgLSBcIi9ub2Rlcy8wL3JvdGF0aW9uXCJcbiAgICAgKiAgLSBcIi9tYXRlcmlhbHMvMi9lbWlzc2l2ZUZhY3RvclwiXG4gICAgICogIC0gXCIvbWF0ZXJpYWxzLzIvcGJyTWV0YWxsaWNSb3VnaG5lc3MvYmFzZUNvbG9yRmFjdG9yXCJcbiAgICAgKiAgLSBcIi9tYXRlcmlhbHMvMi9leHRlbnNpb25zL0tIUl9tYXRlcmlhbHNfZW1pc3NpdmVfc3RyZW5ndGgvZW1pc3NpdmVTdHJlbmd0aFwiXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aCBUaGUgcGF0aCB0byBjb252ZXJ0XG4gICAgICogQHJldHVybnMgVGhlIG9iamVjdCBhbmQgaW5mbyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhdGhcbiAgICAgKi9cbiAgICBjb252ZXJ0KHBhdGgpIHtcbiAgICAgICAgbGV0IG9iamVjdFRyZWUgPSB0aGlzLl9nbHRmO1xuICAgICAgICBsZXQgaW5mb1RyZWUgPSB0aGlzLl9pbmZvVHJlZTtcbiAgICAgICAgbGV0IHRhcmdldCA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKCFwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIG11c3Qgc3RhcnQgd2l0aCBhIC9cIik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFydHMgPSBwYXRoLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgcGFydHMuc2hpZnQoKTtcbiAgICAgICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhcnRzKSB7XG4gICAgICAgICAgICBpZiAoaW5mb1RyZWUuX19hcnJheV9fKSB7XG4gICAgICAgICAgICAgICAgaW5mb1RyZWUgPSBpbmZvVHJlZS5fX2FycmF5X187XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBpbmZvVHJlZSA9IGluZm9UcmVlW3BhcnRdO1xuICAgICAgICAgICAgICAgIGlmICghaW5mb1RyZWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXRoICR7cGF0aH0gaXMgaW52YWxpZGApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChvYmplY3RUcmVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFBhdGggJHtwYXRofSBpcyBpbnZhbGlkYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvYmplY3RUcmVlID0gb2JqZWN0VHJlZVtwYXJ0XTtcbiAgICAgICAgICAgIGlmIChpbmZvVHJlZS5fX3RhcmdldF9fKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gb2JqZWN0VHJlZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb2JqZWN0OiB0YXJnZXQsXG4gICAgICAgICAgICBpbmZvOiBpbmZvVHJlZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbHRmUGF0aFRvT2JqZWN0Q29udmVydGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/gltfPathToObjectConverter.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/index.js ***!
  \**********************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _EXT_lights_image_based_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EXT_lights_image_based.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_lights_image_based.js\");\n/* harmony import */ var _EXT_mesh_gpu_instancing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EXT_mesh_gpu_instancing.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.js\");\n/* harmony import */ var _EXT_meshopt_compression_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EXT_meshopt_compression.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_meshopt_compression.js\");\n/* harmony import */ var _EXT_texture_webp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EXT_texture_webp.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/EXT_texture_webp.js\");\n/* harmony import */ var _KHR_draco_mesh_compression_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./KHR_draco_mesh_compression.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_draco_mesh_compression.js\");\n/* harmony import */ var _KHR_lights_punctual_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./KHR_lights_punctual.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_lights_punctual.js\");\n/* harmony import */ var _KHR_materials_pbrSpecularGlossiness_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./KHR_materials_pbrSpecularGlossiness.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_pbrSpecularGlossiness.js\");\n/* harmony import */ var _KHR_materials_unlit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./KHR_materials_unlit.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_unlit.js\");\n/* harmony import */ var _KHR_materials_clearcoat_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./KHR_materials_clearcoat.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_clearcoat.js\");\n/* harmony import */ var _KHR_materials_iridescence_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./KHR_materials_iridescence.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_iridescence.js\");\n/* harmony import */ var _KHR_materials_anisotropy_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./KHR_materials_anisotropy.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_anisotropy.js\");\n/* harmony import */ var _KHR_materials_emissive_strength_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./KHR_materials_emissive_strength.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_emissive_strength.js\");\n/* harmony import */ var _KHR_materials_sheen_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./KHR_materials_sheen.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_sheen.js\");\n/* harmony import */ var _KHR_materials_specular_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./KHR_materials_specular.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_specular.js\");\n/* harmony import */ var _KHR_materials_ior_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./KHR_materials_ior.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_ior.js\");\n/* harmony import */ var _KHR_materials_variants_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./KHR_materials_variants.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_variants.js\");\n/* harmony import */ var _KHR_materials_transmission_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./KHR_materials_transmission.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_transmission.js\");\n/* harmony import */ var _KHR_materials_translucency_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./KHR_materials_translucency.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_translucency.js\");\n/* harmony import */ var _KHR_materials_volume_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./KHR_materials_volume.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_volume.js\");\n/* harmony import */ var _KHR_materials_dispersion_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./KHR_materials_dispersion.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_materials_dispersion.js\");\n/* harmony import */ var _KHR_mesh_quantization_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./KHR_mesh_quantization.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_mesh_quantization.js\");\n/* harmony import */ var _KHR_texture_basisu_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./KHR_texture_basisu.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_basisu.js\");\n/* harmony import */ var _KHR_texture_transform_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./KHR_texture_transform.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_texture_transform.js\");\n/* harmony import */ var _KHR_xmp_json_ld_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./KHR_xmp_json_ld.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_xmp_json_ld.js\");\n/* harmony import */ var _KHR_animation_pointer_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./KHR_animation_pointer.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_animation_pointer.js\");\n/* harmony import */ var _MSFT_audio_emitter_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./MSFT_audio_emitter.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_audio_emitter.js\");\n/* harmony import */ var _MSFT_lod_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./MSFT_lod.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_lod.js\");\n/* harmony import */ var _MSFT_minecraftMesh_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./MSFT_minecraftMesh.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_minecraftMesh.js\");\n/* harmony import */ var _MSFT_sRGBFactors_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./MSFT_sRGBFactors.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/MSFT_sRGBFactors.js\");\n/* harmony import */ var _KHR_interactivity_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./KHR_interactivity.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/KHR_interactivity.js\");\n/* harmony import */ var _ExtrasAsMetadata_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ExtrasAsMetadata.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/ExtrasAsMetadata.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_EXT_lights_image_based_js__WEBPACK_IMPORTED_MODULE_0__, _EXT_mesh_gpu_instancing_js__WEBPACK_IMPORTED_MODULE_1__, _EXT_meshopt_compression_js__WEBPACK_IMPORTED_MODULE_2__, _EXT_texture_webp_js__WEBPACK_IMPORTED_MODULE_3__, _KHR_draco_mesh_compression_js__WEBPACK_IMPORTED_MODULE_4__, _KHR_lights_punctual_js__WEBPACK_IMPORTED_MODULE_5__, _KHR_materials_pbrSpecularGlossiness_js__WEBPACK_IMPORTED_MODULE_6__, _KHR_materials_unlit_js__WEBPACK_IMPORTED_MODULE_7__, _KHR_materials_clearcoat_js__WEBPACK_IMPORTED_MODULE_8__, _KHR_materials_iridescence_js__WEBPACK_IMPORTED_MODULE_9__, _KHR_materials_anisotropy_js__WEBPACK_IMPORTED_MODULE_10__, _KHR_materials_emissive_strength_js__WEBPACK_IMPORTED_MODULE_11__, _KHR_materials_sheen_js__WEBPACK_IMPORTED_MODULE_12__, _KHR_materials_specular_js__WEBPACK_IMPORTED_MODULE_13__, _KHR_materials_ior_js__WEBPACK_IMPORTED_MODULE_14__, _KHR_materials_variants_js__WEBPACK_IMPORTED_MODULE_15__, _KHR_materials_transmission_js__WEBPACK_IMPORTED_MODULE_16__, _KHR_materials_translucency_js__WEBPACK_IMPORTED_MODULE_17__, _KHR_materials_volume_js__WEBPACK_IMPORTED_MODULE_18__, _KHR_materials_dispersion_js__WEBPACK_IMPORTED_MODULE_19__, _KHR_mesh_quantization_js__WEBPACK_IMPORTED_MODULE_20__, _KHR_texture_basisu_js__WEBPACK_IMPORTED_MODULE_21__, _KHR_texture_transform_js__WEBPACK_IMPORTED_MODULE_22__, _KHR_xmp_json_ld_js__WEBPACK_IMPORTED_MODULE_23__, _KHR_animation_pointer_js__WEBPACK_IMPORTED_MODULE_24__, _MSFT_audio_emitter_js__WEBPACK_IMPORTED_MODULE_25__, _MSFT_lod_js__WEBPACK_IMPORTED_MODULE_26__, _MSFT_minecraftMesh_js__WEBPACK_IMPORTED_MODULE_27__, _MSFT_sRGBFactors_js__WEBPACK_IMPORTED_MODULE_28__, _KHR_interactivity_js__WEBPACK_IMPORTED_MODULE_29__, _ExtrasAsMetadata_js__WEBPACK_IMPORTED_MODULE_30__]);\n([_EXT_lights_image_based_js__WEBPACK_IMPORTED_MODULE_0__, _EXT_mesh_gpu_instancing_js__WEBPACK_IMPORTED_MODULE_1__, _EXT_meshopt_compression_js__WEBPACK_IMPORTED_MODULE_2__, _EXT_texture_webp_js__WEBPACK_IMPORTED_MODULE_3__, _KHR_draco_mesh_compression_js__WEBPACK_IMPORTED_MODULE_4__, _KHR_lights_punctual_js__WEBPACK_IMPORTED_MODULE_5__, _KHR_materials_pbrSpecularGlossiness_js__WEBPACK_IMPORTED_MODULE_6__, _KHR_materials_unlit_js__WEBPACK_IMPORTED_MODULE_7__, _KHR_materials_clearcoat_js__WEBPACK_IMPORTED_MODULE_8__, _KHR_materials_iridescence_js__WEBPACK_IMPORTED_MODULE_9__, _KHR_materials_anisotropy_js__WEBPACK_IMPORTED_MODULE_10__, _KHR_materials_emissive_strength_js__WEBPACK_IMPORTED_MODULE_11__, _KHR_materials_sheen_js__WEBPACK_IMPORTED_MODULE_12__, _KHR_materials_specular_js__WEBPACK_IMPORTED_MODULE_13__, _KHR_materials_ior_js__WEBPACK_IMPORTED_MODULE_14__, _KHR_materials_variants_js__WEBPACK_IMPORTED_MODULE_15__, _KHR_materials_transmission_js__WEBPACK_IMPORTED_MODULE_16__, _KHR_materials_translucency_js__WEBPACK_IMPORTED_MODULE_17__, _KHR_materials_volume_js__WEBPACK_IMPORTED_MODULE_18__, _KHR_materials_dispersion_js__WEBPACK_IMPORTED_MODULE_19__, _KHR_mesh_quantization_js__WEBPACK_IMPORTED_MODULE_20__, _KHR_texture_basisu_js__WEBPACK_IMPORTED_MODULE_21__, _KHR_texture_transform_js__WEBPACK_IMPORTED_MODULE_22__, _KHR_xmp_json_ld_js__WEBPACK_IMPORTED_MODULE_23__, _KHR_animation_pointer_js__WEBPACK_IMPORTED_MODULE_24__, _MSFT_audio_emitter_js__WEBPACK_IMPORTED_MODULE_25__, _MSFT_lod_js__WEBPACK_IMPORTED_MODULE_26__, _MSFT_minecraftMesh_js__WEBPACK_IMPORTED_MODULE_27__, _MSFT_sRGBFactors_js__WEBPACK_IMPORTED_MODULE_28__, _KHR_interactivity_js__WEBPACK_IMPORTED_MODULE_29__, _ExtrasAsMetadata_js__WEBPACK_IMPORTED_MODULE_30__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _EXT_lights_image_based_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _EXT_lights_image_based_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _EXT_mesh_gpu_instancing_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _EXT_mesh_gpu_instancing_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _EXT_meshopt_compression_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _EXT_meshopt_compression_js__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _EXT_texture_webp_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _EXT_texture_webp_js__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_draco_mesh_compression_js__WEBPACK_IMPORTED_MODULE_4__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_draco_mesh_compression_js__WEBPACK_IMPORTED_MODULE_4__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_lights_punctual_js__WEBPACK_IMPORTED_MODULE_5__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_lights_punctual_js__WEBPACK_IMPORTED_MODULE_5__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_pbrSpecularGlossiness_js__WEBPACK_IMPORTED_MODULE_6__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_pbrSpecularGlossiness_js__WEBPACK_IMPORTED_MODULE_6__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_unlit_js__WEBPACK_IMPORTED_MODULE_7__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_unlit_js__WEBPACK_IMPORTED_MODULE_7__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_clearcoat_js__WEBPACK_IMPORTED_MODULE_8__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_clearcoat_js__WEBPACK_IMPORTED_MODULE_8__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_iridescence_js__WEBPACK_IMPORTED_MODULE_9__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_iridescence_js__WEBPACK_IMPORTED_MODULE_9__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_anisotropy_js__WEBPACK_IMPORTED_MODULE_10__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_anisotropy_js__WEBPACK_IMPORTED_MODULE_10__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_emissive_strength_js__WEBPACK_IMPORTED_MODULE_11__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_emissive_strength_js__WEBPACK_IMPORTED_MODULE_11__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_sheen_js__WEBPACK_IMPORTED_MODULE_12__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_sheen_js__WEBPACK_IMPORTED_MODULE_12__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_specular_js__WEBPACK_IMPORTED_MODULE_13__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_specular_js__WEBPACK_IMPORTED_MODULE_13__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_ior_js__WEBPACK_IMPORTED_MODULE_14__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_ior_js__WEBPACK_IMPORTED_MODULE_14__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_variants_js__WEBPACK_IMPORTED_MODULE_15__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_variants_js__WEBPACK_IMPORTED_MODULE_15__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_transmission_js__WEBPACK_IMPORTED_MODULE_16__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_transmission_js__WEBPACK_IMPORTED_MODULE_16__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_translucency_js__WEBPACK_IMPORTED_MODULE_17__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_translucency_js__WEBPACK_IMPORTED_MODULE_17__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_volume_js__WEBPACK_IMPORTED_MODULE_18__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_volume_js__WEBPACK_IMPORTED_MODULE_18__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_materials_dispersion_js__WEBPACK_IMPORTED_MODULE_19__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_materials_dispersion_js__WEBPACK_IMPORTED_MODULE_19__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_mesh_quantization_js__WEBPACK_IMPORTED_MODULE_20__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_mesh_quantization_js__WEBPACK_IMPORTED_MODULE_20__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_texture_basisu_js__WEBPACK_IMPORTED_MODULE_21__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_texture_basisu_js__WEBPACK_IMPORTED_MODULE_21__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_texture_transform_js__WEBPACK_IMPORTED_MODULE_22__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_texture_transform_js__WEBPACK_IMPORTED_MODULE_22__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_xmp_json_ld_js__WEBPACK_IMPORTED_MODULE_23__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_xmp_json_ld_js__WEBPACK_IMPORTED_MODULE_23__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_animation_pointer_js__WEBPACK_IMPORTED_MODULE_24__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_animation_pointer_js__WEBPACK_IMPORTED_MODULE_24__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _MSFT_audio_emitter_js__WEBPACK_IMPORTED_MODULE_25__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _MSFT_audio_emitter_js__WEBPACK_IMPORTED_MODULE_25__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _MSFT_lod_js__WEBPACK_IMPORTED_MODULE_26__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _MSFT_lod_js__WEBPACK_IMPORTED_MODULE_26__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _MSFT_minecraftMesh_js__WEBPACK_IMPORTED_MODULE_27__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _MSFT_minecraftMesh_js__WEBPACK_IMPORTED_MODULE_27__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _MSFT_sRGBFactors_js__WEBPACK_IMPORTED_MODULE_28__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _MSFT_sRGBFactors_js__WEBPACK_IMPORTED_MODULE_28__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _KHR_interactivity_js__WEBPACK_IMPORTED_MODULE_29__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _KHR_interactivity_js__WEBPACK_IMPORTED_MODULE_29__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _ExtrasAsMetadata_js__WEBPACK_IMPORTED_MODULE_30__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _ExtrasAsMetadata_js__WEBPACK_IMPORTED_MODULE_30__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDQztBQUNBO0FBQ1A7QUFDVTtBQUNQO0FBQ2dCO0FBQ2hCO0FBQ0k7QUFDRTtBQUNEO0FBQ087QUFDWjtBQUNHO0FBQ0w7QUFDSztBQUNJO0FBQ0E7QUFDTjtBQUNJO0FBQ0g7QUFDSDtBQUNHO0FBQ047QUFDTTtBQUNIO0FBQ1Y7QUFDVTtBQUNGO0FBQ0M7QUFDRDtBQUN0QyxpQyIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvaW5kZXguanM/NTc4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9FWFRfbGlnaHRzX2ltYWdlX2Jhc2VkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9FWFRfbWVzaF9ncHVfaW5zdGFuY2luZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRVhUX21lc2hvcHRfY29tcHJlc3Npb24uanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0VYVF90ZXh0dXJlX3dlYnAuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9kcmFjb19tZXNoX2NvbXByZXNzaW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9LSFJfbGlnaHRzX3B1bmN0dWFsLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9LSFJfbWF0ZXJpYWxzX3BiclNwZWN1bGFyR2xvc3NpbmVzcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc191bmxpdC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc19jbGVhcmNvYXQuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9tYXRlcmlhbHNfaXJpZGVzY2VuY2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9tYXRlcmlhbHNfYW5pc290cm9weS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc19lbWlzc2l2ZV9zdHJlbmd0aC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc19zaGVlbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc19zcGVjdWxhci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc19pb3IuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9tYXRlcmlhbHNfdmFyaWFudHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9tYXRlcmlhbHNfdHJhbnNtaXNzaW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9LSFJfbWF0ZXJpYWxzX3RyYW5zbHVjZW5jeS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21hdGVyaWFsc192b2x1bWUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl9tYXRlcmlhbHNfZGlzcGVyc2lvbi5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX21lc2hfcXVhbnRpemF0aW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9LSFJfdGV4dHVyZV9iYXNpc3UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0tIUl90ZXh0dXJlX3RyYW5zZm9ybS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX3htcF9qc29uX2xkLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9LSFJfYW5pbWF0aW9uX3BvaW50ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL01TRlRfYXVkaW9fZW1pdHRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vTVNGVF9sb2QuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL01TRlRfbWluZWNyYWZ0TWVzaC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vTVNGVF9zUkdCRmFjdG9ycy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vS0hSX2ludGVyYWN0aXZpdHkuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0V4dHJhc0FzTWV0YWRhdGEuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/index.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityFunctions.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityFunctions.js ***!
  \***************************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertGLTFToSerializedFlowGraph: () => (/* binding */ convertGLTFToSerializedFlowGraph)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Misc/guid.js */ \"@babylonjs/core/Misc/guid.js\");\n/* harmony import */ var _interactivityUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interactivityUtils.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityUtils.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/flowGraphConnection.js */ \"@babylonjs/core/FlowGraph/flowGraphConnection.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__, _interactivityUtils_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__, _interactivityUtils_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nfunction convertValueWithType(configObject, definition, context) {\n    if (configObject.type !== undefined) {\n        // get the type on the gltf definition\n        const type = definition.types && definition.types[configObject.type];\n        if (!type) {\n            throw new Error(`${context}: Unknown type: ${configObject.type}`);\n        }\n        const signature = type.signature;\n        if (!signature) {\n            throw new Error(`${context}: Type ${configObject.type} has no signature`);\n        }\n        const convertedType = _interactivityUtils_js__WEBPACK_IMPORTED_MODULE_1__.gltfTypeToBabylonType[signature];\n        return {\n            value: configObject.value,\n            className: convertedType,\n        };\n    }\n    else {\n        return configObject.value;\n    }\n}\nfunction convertConfiguration(gltfBlock, definition, id) {\n    const converted = {};\n    const configurationList = gltfBlock.configuration ?? [];\n    for (const configObject of configurationList) {\n        if (configObject.id === \"customEvent\") {\n            const customEvent = definition.customEvents && definition.customEvents[configObject.value];\n            if (!customEvent) {\n                throw new Error(`/extensions/KHR_interactivity/nodes/${id}: Unknown custom event: ${configObject.value}`);\n            }\n            converted.eventId = customEvent.id;\n            converted.eventData = customEvent.values.map((v) => v.id);\n        }\n        else if (configObject.id === \"variable\") {\n            const variable = definition.variables && definition.variables[configObject.value];\n            if (!variable) {\n                throw new Error(`/extensions/KHR_interactivity/nodes/${id}: Unknown variable: ${configObject.value}`);\n            }\n            converted.variableName = variable.id;\n        }\n        else if (configObject.id === \"path\") {\n            // Convert from a GLTF path to a reference to the Babylon.js object\n            const pathValue = configObject.value;\n            converted.path = pathValue;\n        }\n        else {\n            converted[configObject.id] = convertValueWithType(configObject, definition, `/extensions/KHR_interactivity/nodes/${id}`);\n        }\n    }\n    return converted;\n}\nfunction convertBlock(id, gltfBlock, definition) {\n    const className = _interactivityUtils_js__WEBPACK_IMPORTED_MODULE_1__.gltfToFlowGraphTypeMap[gltfBlock.type];\n    if (!className) {\n        throw new Error(`/extensions/KHR_interactivity/nodes/${id}: Unknown block type: ${gltfBlock.type}`);\n    }\n    const uniqueId = id.toString();\n    const config = convertConfiguration(gltfBlock, definition, uniqueId);\n    const metadata = gltfBlock.metadata;\n    const dataInputs = [];\n    const dataOutputs = [];\n    const signalInputs = [];\n    const signalOutputs = [];\n    return {\n        className,\n        config,\n        uniqueId,\n        metadata,\n        dataInputs,\n        dataOutputs,\n        signalInputs,\n        signalOutputs,\n    };\n}\n/**\n * @internal\n * Converts a glTF Interactivity Extension to a serialized flow graph.\n * @param gltf the interactivity data\n * @returns a serialized flow graph\n */\nfunction convertGLTFToSerializedFlowGraph(gltf) {\n    // create an empty serialized context to store the values of the connections\n    const context = {\n        uniqueId: (0,_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__.RandomGUID)(),\n        _userVariables: {},\n        _connectionValues: {},\n    };\n    const executionContexts = [context];\n    // Blocks converted to the flow graph json format\n    const flowGraphJsonBlocks = [];\n    for (let i = 0; i < gltf.nodes.length; i++) {\n        const gltfBlock = gltf.nodes[i];\n        const flowGraphJsonBlock = convertBlock(i, gltfBlock, gltf);\n        flowGraphJsonBlocks.push(flowGraphJsonBlock);\n    }\n    // Parse the connections\n    for (let i = 0; i < gltf.nodes.length; i++) {\n        const gltfBlock = gltf.nodes[i];\n        // get the block that was created in the previous step\n        const fgBlock = flowGraphJsonBlocks[i];\n        const gltfFlows = gltfBlock.flows ?? [];\n        // for each output flow of the gltf block\n        for (const flow of gltfFlows) {\n            const socketOutName = flow.id;\n            // create an output connection for the flow graph block\n            const socketOut = {\n                uniqueId: (0,_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__.RandomGUID)(),\n                name: socketOutName,\n                _connectionType: _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraphConnectionType.Output,\n                connectedPointIds: [],\n            };\n            fgBlock.signalOutputs.push(socketOut);\n            // get the input node of this flow\n            const nodeInId = flow.node;\n            const nodeInSocketName = flow.socket;\n            // find the corresponding flow graph node\n            const nodeIn = flowGraphJsonBlocks[nodeInId];\n            if (!nodeIn) {\n                throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Could not find node with id ${nodeInId} that connects its input with with node ${i}'s output ${socketOutName}`);\n            }\n            // in all of the flow graph input connections, find the one with the same name as the socket\n            let socketIn = nodeIn.signalInputs.find((s) => s.name === nodeInSocketName);\n            // if the socket doesn't exist, create the input socket for the connection\n            if (!socketIn) {\n                socketIn = {\n                    uniqueId: (0,_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__.RandomGUID)(),\n                    name: nodeInSocketName,\n                    _connectionType: _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraphConnectionType.Input,\n                    connectedPointIds: [],\n                };\n                nodeIn.signalInputs.push(socketIn);\n            }\n            // connect the sockets\n            socketIn.connectedPointIds.push(socketOut.uniqueId);\n            socketOut.connectedPointIds.push(socketIn.uniqueId);\n        }\n        // for each input value of the gltf block\n        const gltfValues = gltfBlock.values ?? [];\n        for (const value of gltfValues) {\n            const socketInName = value.id;\n            // create an input data connection for the flow graph block\n            const socketIn = {\n                uniqueId: (0,_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__.RandomGUID)(),\n                name: socketInName,\n                _connectionType: _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraphConnectionType.Input,\n                connectedPointIds: [],\n            };\n            fgBlock.dataInputs.push(socketIn);\n            if (value.value !== undefined) {\n                // if the value is set on the socket itself, store it in the context\n                const convertedValue = convertValueWithType(value, gltf, `/extensions/KHR_interactivity/nodes/${i}`);\n                // convertBlockInputType(gltfBlock, value, convertedValue, `/extensions/KHR_interactivity/nodes/${i}`);\n                context._connectionValues[socketIn.uniqueId] = convertedValue;\n            }\n            else if (value.node !== undefined && value.socket !== undefined) {\n                // if the value is connected with the output data of another socket, connect the two\n                const nodeOutId = value.node;\n                const nodeOutSocketName = value.socket;\n                // find the flow graph node that owns that output socket\n                const nodeOut = flowGraphJsonBlocks[nodeOutId];\n                if (!nodeOut) {\n                    throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Could not find node with id ${nodeOutId} that connects its output with node${i}'s input ${socketInName}`);\n                }\n                let socketOut = nodeOut.dataOutputs.find((s) => s.name === nodeOutSocketName);\n                // if the socket doesn't exist, create it\n                if (!socketOut) {\n                    socketOut = {\n                        uniqueId: (0,_babylonjs_core_Misc_guid_js__WEBPACK_IMPORTED_MODULE_0__.RandomGUID)(),\n                        name: nodeOutSocketName,\n                        _connectionType: _babylonjs_core_FlowGraph_flowGraphConnection_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraphConnectionType.Output,\n                        connectedPointIds: [],\n                    };\n                    nodeOut.dataOutputs.push(socketOut);\n                }\n                // connect the sockets\n                socketIn.connectedPointIds.push(socketOut.uniqueId);\n                socketOut.connectedPointIds.push(socketIn.uniqueId);\n            }\n            else {\n                throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Invalid socket ${socketInName} in node ${i}`);\n            }\n        }\n    }\n    const variables = gltf.variables ?? [];\n    // Parse variables\n    for (let i = 0; i < variables.length; i++) {\n        const variable = variables[i];\n        const variableName = variable.id;\n        context._userVariables[variableName] = convertValueWithType(variable, gltf, `/extensions/KHR_interactivity/variables/${i}`);\n    }\n    return {\n        allBlocks: flowGraphJsonBlocks,\n        executionContexts,\n    };\n}\n//# sourceMappingURL=interactivityFunctions.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityFunctions.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityPathToObjectConverter.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityPathToObjectConverter.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractivityPathToObjectConverter: () => (/* binding */ InteractivityPathToObjectConverter)\n/* harmony export */ });\n/* harmony import */ var _gltfPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gltfPathToObjectConverter.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/gltfPathToObjectConverter.js\");\n\n/**\n * Class to convert an interactivity pointer path to a smart object\n */\nclass InteractivityPathToObjectConverter extends _gltfPathToObjectConverter_js__WEBPACK_IMPORTED_MODULE_0__.GLTFPathToObjectConverter {\n    constructor(gltf) {\n        super(gltf, gltfTree);\n    }\n}\nconst nodesTree = {\n    __array__: {\n        __target__: true,\n        translation: {\n            type: \"Vector3\",\n            get: (node) => {\n                const babylonObject = node._babylonTransformNode;\n                return babylonObject.position;\n            },\n            set: (value, node) => {\n                const babylonObject = node._babylonTransformNode;\n                babylonObject.position = value;\n            },\n            getObject(node) {\n                return node._babylonTransformNode;\n            },\n        },\n    },\n};\nconst gltfTree = {\n    nodes: nodesTree,\n};\n//# sourceMappingURL=interactivityPathToObjectConverter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvaW50ZXJhY3Rpdml0eVBhdGhUb09iamVjdENvbnZlcnRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRTtBQUMzRTtBQUNBO0FBQ0E7QUFDTyxpREFBaUQsb0ZBQXlCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9FeHRlbnNpb25zL2ludGVyYWN0aXZpdHlQYXRoVG9PYmplY3RDb252ZXJ0ZXIuanM/ODIxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTFRGUGF0aFRvT2JqZWN0Q29udmVydGVyIH0gZnJvbSBcIi4vZ2x0ZlBhdGhUb09iamVjdENvbnZlcnRlci5qc1wiO1xuLyoqXG4gKiBDbGFzcyB0byBjb252ZXJ0IGFuIGludGVyYWN0aXZpdHkgcG9pbnRlciBwYXRoIHRvIGEgc21hcnQgb2JqZWN0XG4gKi9cbmV4cG9ydCBjbGFzcyBJbnRlcmFjdGl2aXR5UGF0aFRvT2JqZWN0Q29udmVydGVyIGV4dGVuZHMgR0xURlBhdGhUb09iamVjdENvbnZlcnRlciB7XG4gICAgY29uc3RydWN0b3IoZ2x0Zikge1xuICAgICAgICBzdXBlcihnbHRmLCBnbHRmVHJlZSk7XG4gICAgfVxufVxuY29uc3Qgbm9kZXNUcmVlID0ge1xuICAgIF9fYXJyYXlfXzoge1xuICAgICAgICBfX3RhcmdldF9fOiB0cnVlLFxuICAgICAgICB0cmFuc2xhdGlvbjoge1xuICAgICAgICAgICAgdHlwZTogXCJWZWN0b3IzXCIsXG4gICAgICAgICAgICBnZXQ6IChub2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFieWxvbk9iamVjdCA9IG5vZGUuX2JhYnlsb25UcmFuc2Zvcm1Ob2RlO1xuICAgICAgICAgICAgICAgIHJldHVybiBiYWJ5bG9uT2JqZWN0LnBvc2l0aW9uO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldDogKHZhbHVlLCBub2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFieWxvbk9iamVjdCA9IG5vZGUuX2JhYnlsb25UcmFuc2Zvcm1Ob2RlO1xuICAgICAgICAgICAgICAgIGJhYnlsb25PYmplY3QucG9zaXRpb24gPSB2YWx1ZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXRPYmplY3Qobm9kZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBub2RlLl9iYWJ5bG9uVHJhbnNmb3JtTm9kZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSxcbn07XG5jb25zdCBnbHRmVHJlZSA9IHtcbiAgICBub2Rlczogbm9kZXNUcmVlLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyYWN0aXZpdHlQYXRoVG9PYmplY3RDb252ZXJ0ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityPathToObjectConverter.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityUtils.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityUtils.js ***!
  \***********************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gltfToFlowGraphTypeMap: () => (/* binding */ gltfToFlowGraphTypeMap),\n/* harmony export */   gltfTypeToBabylonType: () => (/* binding */ gltfTypeToBabylonType)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneReadyEventBlock_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Event/flowGraphSceneReadyEventBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneTickEventBlock_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Event/flowGraphSceneTickEventBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphConsoleLogBlock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphConsoleLogBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphTimerBlock_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphTimerBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSendCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSendCustomEventBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Event_flowGraphReceiveCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Event/flowGraphReceiveCustomEventBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphSequenceBlock_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphSequenceBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetPropertyBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetPropertyBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.js */ \"@babylonjs/core/FlowGraph/Blocks/Data/Math/flowGraphMathBlocks.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphDoNBlock_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphDoNBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetVariableBlock_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetVariableBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetVariableBlock_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/flowGraphSetVariableBlock.js\");\n/* harmony import */ var _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphWhileLoopBlock_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.js */ \"@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphWhileLoopBlock.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneReadyEventBlock_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneTickEventBlock_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphConsoleLogBlock_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphTimerBlock_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSendCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_FlowGraph_Blocks_Event_flowGraphReceiveCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphSequenceBlock_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphDoNBlock_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetVariableBlock_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetVariableBlock_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphWhileLoopBlock_js__WEBPACK_IMPORTED_MODULE_13__]);\n([_babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneReadyEventBlock_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneTickEventBlock_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphConsoleLogBlock_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphTimerBlock_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSendCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_FlowGraph_Blocks_Event_flowGraphReceiveCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphSequenceBlock_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphDoNBlock_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetVariableBlock_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetVariableBlock_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphWhileLoopBlock_js__WEBPACK_IMPORTED_MODULE_13__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* eslint-disable @typescript-eslint/naming-convention */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst gltfToFlowGraphTypeMap = {\n    \"lifecycle/onStart\": _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneReadyEventBlock_js__WEBPACK_IMPORTED_MODULE_0__.FlowGraphSceneReadyEventBlock.ClassName,\n    \"lifecycle/onTick\": _babylonjs_core_FlowGraph_Blocks_Event_flowGraphSceneTickEventBlock_js__WEBPACK_IMPORTED_MODULE_1__.FlowGraphSceneTickEventBlock.ClassName,\n    log: _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphConsoleLogBlock_js__WEBPACK_IMPORTED_MODULE_2__.FlowGraphConsoleLogBlock.ClassName,\n    \"flow/delay\": _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphTimerBlock_js__WEBPACK_IMPORTED_MODULE_3__.FlowGraphTimerBlock.ClassName,\n    \"customEvent/send\": _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSendCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_4__.FlowGraphSendCustomEventBlock.ClassName,\n    \"customEvent/receive\": _babylonjs_core_FlowGraph_Blocks_Event_flowGraphReceiveCustomEventBlock_js__WEBPACK_IMPORTED_MODULE_5__.FlowGraphReceiveCustomEventBlock.ClassName,\n    \"flow/sequence\": _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphSequenceBlock_js__WEBPACK_IMPORTED_MODULE_6__.FlowGraphSequenceBlock.ClassName,\n    \"world/get\": _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_7__.FlowGraphGetPropertyBlock.ClassName,\n    \"world/set\": _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetPropertyBlock_js__WEBPACK_IMPORTED_MODULE_8__.FlowGraphSetPropertyBlock.ClassName,\n    \"flow/doN\": _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphDoNBlock_js__WEBPACK_IMPORTED_MODULE_10__.FlowGraphDoNBlock.ClassName,\n    \"variable/get\": _babylonjs_core_FlowGraph_Blocks_Data_flowGraphGetVariableBlock_js__WEBPACK_IMPORTED_MODULE_11__.FlowGraphGetVariableBlock.ClassName,\n    \"variable/set\": _babylonjs_core_FlowGraph_Blocks_Execution_flowGraphSetVariableBlock_js__WEBPACK_IMPORTED_MODULE_12__.FlowGraphSetVariableBlock.ClassName,\n    \"flow/whileLoop\": _babylonjs_core_FlowGraph_Blocks_Execution_ControlFlow_flowGraphWhileLoopBlock_js__WEBPACK_IMPORTED_MODULE_13__.FlowGraphWhileLoopBlock.ClassName,\n    \"math/random\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphRandomBlock.ClassName,\n    \"math/e\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphEBlock.ClassName,\n    \"math/pi\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphPiBlock.ClassName,\n    \"math/inf\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphInfBlock.ClassName,\n    \"math/nan\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphNaNBlock.ClassName,\n    \"math/abs\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAbsBlock.ClassName,\n    \"math/sign\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSignBlock.ClassName,\n    \"math/trunc\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphTruncBlock.ClassName,\n    \"math/floor\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphFloorBlock.ClassName,\n    \"math/ceil\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCeilBlock.ClassName,\n    \"math/fract\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphFractBlock.ClassName,\n    \"math/neg\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphNegBlock.ClassName,\n    \"math/add\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAddBlock.ClassName,\n    \"math/sub\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSubtractBlock.ClassName,\n    \"math/mul\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphMultiplyBlock.ClassName,\n    \"math/div\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphDivideBlock.ClassName,\n    \"math/rem\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphRemainderBlock.ClassName,\n    \"math/min\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphMinBlock.ClassName,\n    \"math/max\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphMaxBlock.ClassName,\n    \"math/clamp\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphClampBlock.ClassName,\n    \"math/saturate\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSaturateBlock.ClassName,\n    \"math/mix\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphInterpolateBlock.ClassName,\n    \"math/eq\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphEqBlock.ClassName,\n    \"math/lt\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLessThanBlock.ClassName,\n    \"math/le\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLessThanOrEqualBlock.ClassName,\n    \"math/gt\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphGreaterThanBlock.ClassName,\n    \"math/ge\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphGreaterThanOrEqualBlock.ClassName,\n    \"math/isnan\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphIsNanBlock.ClassName,\n    \"math/isinf\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphIsInfBlock.ClassName,\n    \"math/rad\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphDegToRadBlock.ClassName,\n    \"math/deg\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphRadToDegBlock.ClassName,\n    \"math/sin\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSinBlock.ClassName,\n    \"math/cos\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCosBlock.ClassName,\n    \"math/tan\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphTanBlock.ClassName,\n    \"math/asin\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAsinBlock.ClassName,\n    \"math/acos\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAcosBlock.ClassName,\n    \"math/atan\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAtanBlock.ClassName,\n    \"math/atan2\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAtan2Block.ClassName,\n    \"math/sinh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSinhBlock.ClassName,\n    \"math/cosh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCoshBlock.ClassName,\n    \"math/tanh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphTanhBlock.ClassName,\n    \"math/asinh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAsinhBlock.ClassName,\n    \"math/acosh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAcoshBlock.ClassName,\n    \"math/atanh\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphAtanhBlock.ClassName,\n    \"math/exp\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphExpBlock.ClassName,\n    \"math/log\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLogBlock.ClassName,\n    \"math/log2\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLog2Block.ClassName,\n    \"math/log10\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLog10Block.ClassName,\n    \"math/sqrt\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphSqrtBlock.ClassName,\n    \"math/cbrt\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCubeRootBlock.ClassName,\n    \"math/pow\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphPowBlock.ClassName,\n    \"math/length\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphLengthBlock.ClassName,\n    \"math/normalize\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphNormalizeBlock.ClassName,\n    \"math/dot\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphDotBlock.ClassName,\n    \"math/cross\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCrossBlock.ClassName,\n    \"math/rotate2d\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphRotate2DBlock.ClassName,\n    \"math/rotate3d\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphRotate3DBlock.ClassName,\n    \"math/transpose\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphTransposeBlock.ClassName,\n    \"math/determinant\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphDeterminantBlock.ClassName,\n    \"math/inverse\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphInvertMatrixBlock.ClassName,\n    \"math/matmul\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphMatMulBlock.ClassName,\n    \"math/not\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseNotBlock.ClassName,\n    \"math/and\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseAndBlock.ClassName,\n    \"math/or\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseOrBlock.ClassName,\n    \"math/xor\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseXorBlock.ClassName,\n    \"math/asr\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseRightShiftBlock.ClassName,\n    \"math/lsl\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphBitwiseLeftShiftBlock.ClassName,\n    \"math/clz\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCountLeadingZerosBlock.ClassName,\n    \"math/ctz\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCountTrailingZerosBlock.ClassName,\n    \"math/popcnt\": _babylonjs_core_FlowGraph_Blocks_Data_Math_flowGraphMathBlocks_js__WEBPACK_IMPORTED_MODULE_9__.FlowGraphCountOneBitsBlock.ClassName,\n};\nconst gltfTypeToBabylonType = {\n    float2: \"Vector2\",\n    float3: \"Vector3\",\n    float4: \"Vector4\",\n    float4x4: \"Matrix\",\n    int: \"FlowGraphInteger\",\n};\n//# sourceMappingURL=interactivityUtils.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvaW50ZXJhY3Rpdml0eVV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN3SDtBQUNGO0FBQ0o7QUFDRTtBQUNRO0FBQ0U7QUFDSjtBQUNYO0FBQ0s7QUFDbWhEO0FBQ3ZoRDtBQUNEO0FBQ0s7QUFDUTtBQUNySDtBQUNQLHlCQUF5QixrSUFBNkI7QUFDdEQsd0JBQXdCLGdJQUE0QjtBQUNwRCxTQUFTLDRIQUF3QjtBQUNqQyxrQkFBa0IsOEhBQW1CO0FBQ3JDLHdCQUF3QixzSUFBNkI7QUFDckQsMkJBQTJCLHdJQUFnQztBQUMzRCxxQkFBcUIsb0lBQXNCO0FBQzNDLGlCQUFpQix5SEFBeUI7QUFDMUMsaUJBQWlCLDhIQUF5QjtBQUMxQyxnQkFBZ0IsMkhBQWlCO0FBQ2pDLG9CQUFvQiwwSEFBeUI7QUFDN0Msb0JBQW9CLCtIQUF5QjtBQUM3QyxzQkFBc0IsdUlBQXVCO0FBQzdDLG1CQUFtQixtSEFBb0I7QUFDdkMsY0FBYyw4R0FBZTtBQUM3QixlQUFlLCtHQUFnQjtBQUMvQixnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGdCQUFnQixnSEFBaUI7QUFDakMsZ0JBQWdCLGdIQUFpQjtBQUNqQyxpQkFBaUIsaUhBQWtCO0FBQ25DLGtCQUFrQixrSEFBbUI7QUFDckMsa0JBQWtCLGtIQUFtQjtBQUNyQyxpQkFBaUIsaUhBQWtCO0FBQ25DLGtCQUFrQixrSEFBbUI7QUFDckMsZ0JBQWdCLGdIQUFpQjtBQUNqQyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGdCQUFnQixxSEFBc0I7QUFDdEMsZ0JBQWdCLHFIQUFzQjtBQUN0QyxnQkFBZ0IsbUhBQW9CO0FBQ3BDLGdCQUFnQixzSEFBdUI7QUFDdkMsZ0JBQWdCLGdIQUFpQjtBQUNqQyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGtCQUFrQixrSEFBbUI7QUFDckMscUJBQXFCLHFIQUFzQjtBQUMzQyxnQkFBZ0Isd0hBQXlCO0FBQ3pDLGVBQWUsK0dBQWdCO0FBQy9CLGVBQWUscUhBQXNCO0FBQ3JDLGVBQWUsNEhBQTZCO0FBQzVDLGVBQWUsd0hBQXlCO0FBQ3hDLGVBQWUsK0hBQWdDO0FBQy9DLGtCQUFrQixrSEFBbUI7QUFDckMsa0JBQWtCLGtIQUFtQjtBQUNyQyxnQkFBZ0IscUhBQXNCO0FBQ3RDLGdCQUFnQixxSEFBc0I7QUFDdEMsZ0JBQWdCLGdIQUFpQjtBQUNqQyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGdCQUFnQixnSEFBaUI7QUFDakMsaUJBQWlCLGlIQUFrQjtBQUNuQyxpQkFBaUIsaUhBQWtCO0FBQ25DLGlCQUFpQixpSEFBa0I7QUFDbkMsa0JBQWtCLGtIQUFtQjtBQUNyQyxpQkFBaUIsaUhBQWtCO0FBQ25DLGlCQUFpQixpSEFBa0I7QUFDbkMsaUJBQWlCLGlIQUFrQjtBQUNuQyxrQkFBa0Isa0hBQW1CO0FBQ3JDLGtCQUFrQixrSEFBbUI7QUFDckMsa0JBQWtCLGtIQUFtQjtBQUNyQyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGdCQUFnQixnSEFBaUI7QUFDakMsaUJBQWlCLGlIQUFrQjtBQUNuQyxrQkFBa0Isa0hBQW1CO0FBQ3JDLGlCQUFpQixpSEFBa0I7QUFDbkMsaUJBQWlCLHFIQUFzQjtBQUN2QyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLG1CQUFtQixtSEFBb0I7QUFDdkMsc0JBQXNCLHNIQUF1QjtBQUM3QyxnQkFBZ0IsZ0hBQWlCO0FBQ2pDLGtCQUFrQixrSEFBbUI7QUFDckMscUJBQXFCLHFIQUFzQjtBQUMzQyxxQkFBcUIscUhBQXNCO0FBQzNDLHNCQUFzQixzSEFBdUI7QUFDN0Msd0JBQXdCLHdIQUF5QjtBQUNqRCxvQkFBb0IseUhBQTBCO0FBQzlDLG1CQUFtQixtSEFBb0I7QUFDdkMsZ0JBQWdCLHVIQUF3QjtBQUN4QyxnQkFBZ0IsdUhBQXdCO0FBQ3hDLGVBQWUsc0hBQXVCO0FBQ3RDLGdCQUFnQix1SEFBd0I7QUFDeEMsZ0JBQWdCLDhIQUErQjtBQUMvQyxnQkFBZ0IsNkhBQThCO0FBQzlDLGdCQUFnQiw4SEFBK0I7QUFDL0MsZ0JBQWdCLCtIQUFnQztBQUNoRCxtQkFBbUIseUhBQTBCO0FBQzdDO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QyIsInNvdXJjZXMiOlsid2VicGFjazovLzNkLW9mZmljZS12aWV3ZXIvLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL0V4dGVuc2lvbnMvaW50ZXJhY3Rpdml0eVV0aWxzLmpzP2Y2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5pbXBvcnQgeyBGbG93R3JhcGhTY2VuZVJlYWR5RXZlbnRCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FdmVudC9mbG93R3JhcGhTY2VuZVJlYWR5RXZlbnRCbG9jay5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoU2NlbmVUaWNrRXZlbnRCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FdmVudC9mbG93R3JhcGhTY2VuZVRpY2tFdmVudEJsb2NrLmpzXCI7XG5pbXBvcnQgeyBGbG93R3JhcGhDb25zb2xlTG9nQmxvY2sgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0Zsb3dHcmFwaC9CbG9ja3MvRXhlY3V0aW9uL2Zsb3dHcmFwaENvbnNvbGVMb2dCbG9jay5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoVGltZXJCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FeGVjdXRpb24vQ29udHJvbEZsb3cvZmxvd0dyYXBoVGltZXJCbG9jay5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoU2VuZEN1c3RvbUV2ZW50QmxvY2sgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0Zsb3dHcmFwaC9CbG9ja3MvRXhlY3V0aW9uL2Zsb3dHcmFwaFNlbmRDdXN0b21FdmVudEJsb2NrLmpzXCI7XG5pbXBvcnQgeyBGbG93R3JhcGhSZWNlaXZlQ3VzdG9tRXZlbnRCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FdmVudC9mbG93R3JhcGhSZWNlaXZlQ3VzdG9tRXZlbnRCbG9jay5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoU2VxdWVuY2VCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FeGVjdXRpb24vQ29udHJvbEZsb3cvZmxvd0dyYXBoU2VxdWVuY2VCbG9jay5qc1wiO1xuaW1wb3J0IHsgRmxvd0dyYXBoR2V0UHJvcGVydHlCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9EYXRhL2Zsb3dHcmFwaEdldFByb3BlcnR5QmxvY2suanNcIjtcbmltcG9ydCB7IEZsb3dHcmFwaFNldFByb3BlcnR5QmxvY2sgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0Zsb3dHcmFwaC9CbG9ja3MvRXhlY3V0aW9uL2Zsb3dHcmFwaFNldFByb3BlcnR5QmxvY2suanNcIjtcbmltcG9ydCB7IEZsb3dHcmFwaEFkZEJsb2NrLCBGbG93R3JhcGhSYW5kb21CbG9jaywgRmxvd0dyYXBoTGVzc1RoYW5CbG9jaywgRmxvd0dyYXBoTXVsdGlwbHlCbG9jaywgRmxvd0dyYXBoU3VidHJhY3RCbG9jaywgRmxvd0dyYXBoRG90QmxvY2ssIEZsb3dHcmFwaEVCbG9jaywgRmxvd0dyYXBoUGlCbG9jaywgRmxvd0dyYXBoSW5mQmxvY2ssIEZsb3dHcmFwaE5hTkJsb2NrLCBGbG93R3JhcGhBYnNCbG9jaywgRmxvd0dyYXBoU2lnbkJsb2NrLCBGbG93R3JhcGhUcnVuY0Jsb2NrLCBGbG93R3JhcGhGbG9vckJsb2NrLCBGbG93R3JhcGhDZWlsQmxvY2ssIEZsb3dHcmFwaEZyYWN0QmxvY2ssIEZsb3dHcmFwaE5lZ0Jsb2NrLCBGbG93R3JhcGhEaXZpZGVCbG9jaywgRmxvd0dyYXBoUmVtYWluZGVyQmxvY2ssIEZsb3dHcmFwaE1pbkJsb2NrLCBGbG93R3JhcGhNYXhCbG9jaywgRmxvd0dyYXBoQ2xhbXBCbG9jaywgRmxvd0dyYXBoU2F0dXJhdGVCbG9jaywgRmxvd0dyYXBoSW50ZXJwb2xhdGVCbG9jaywgRmxvd0dyYXBoRXFCbG9jaywgRmxvd0dyYXBoTGVzc1RoYW5PckVxdWFsQmxvY2ssIEZsb3dHcmFwaEdyZWF0ZXJUaGFuQmxvY2ssIEZsb3dHcmFwaEdyZWF0ZXJUaGFuT3JFcXVhbEJsb2NrLCBGbG93R3JhcGhJc05hbkJsb2NrLCBGbG93R3JhcGhJc0luZkJsb2NrLCBGbG93R3JhcGhEZWdUb1JhZEJsb2NrLCBGbG93R3JhcGhSYWRUb0RlZ0Jsb2NrLCBGbG93R3JhcGhTaW5CbG9jaywgRmxvd0dyYXBoQ29zQmxvY2ssIEZsb3dHcmFwaFRhbkJsb2NrLCBGbG93R3JhcGhBc2luQmxvY2ssIEZsb3dHcmFwaEFjb3NCbG9jaywgRmxvd0dyYXBoQXRhbkJsb2NrLCBGbG93R3JhcGhBdGFuMkJsb2NrLCBGbG93R3JhcGhTaW5oQmxvY2ssIEZsb3dHcmFwaENvc2hCbG9jaywgRmxvd0dyYXBoVGFuaEJsb2NrLCBGbG93R3JhcGhBc2luaEJsb2NrLCBGbG93R3JhcGhBY29zaEJsb2NrLCBGbG93R3JhcGhBdGFuaEJsb2NrLCBGbG93R3JhcGhFeHBCbG9jaywgRmxvd0dyYXBoTG9nMkJsb2NrLCBGbG93R3JhcGhMb2dCbG9jaywgRmxvd0dyYXBoTG9nMTBCbG9jaywgRmxvd0dyYXBoU3FydEJsb2NrLCBGbG93R3JhcGhDdWJlUm9vdEJsb2NrLCBGbG93R3JhcGhQb3dCbG9jaywgRmxvd0dyYXBoTGVuZ3RoQmxvY2ssIEZsb3dHcmFwaE5vcm1hbGl6ZUJsb2NrLCBGbG93R3JhcGhDcm9zc0Jsb2NrLCBGbG93R3JhcGhSb3RhdGUyREJsb2NrLCBGbG93R3JhcGhSb3RhdGUzREJsb2NrLCBGbG93R3JhcGhUcmFuc3Bvc2VCbG9jaywgRmxvd0dyYXBoRGV0ZXJtaW5hbnRCbG9jaywgRmxvd0dyYXBoSW52ZXJ0TWF0cml4QmxvY2ssIEZsb3dHcmFwaE1hdE11bEJsb2NrLCBGbG93R3JhcGhCaXR3aXNlTm90QmxvY2ssIEZsb3dHcmFwaEJpdHdpc2VBbmRCbG9jaywgRmxvd0dyYXBoQml0d2lzZU9yQmxvY2ssIEZsb3dHcmFwaEJpdHdpc2VYb3JCbG9jaywgRmxvd0dyYXBoQml0d2lzZVJpZ2h0U2hpZnRCbG9jaywgRmxvd0dyYXBoQml0d2lzZUxlZnRTaGlmdEJsb2NrLCBGbG93R3JhcGhDb3VudExlYWRpbmdaZXJvc0Jsb2NrLCBGbG93R3JhcGhDb3VudFRyYWlsaW5nWmVyb3NCbG9jaywgRmxvd0dyYXBoQ291bnRPbmVCaXRzQmxvY2ssIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9GbG93R3JhcGgvQmxvY2tzL0RhdGEvTWF0aC9mbG93R3JhcGhNYXRoQmxvY2tzLmpzXCI7XG5pbXBvcnQgeyBGbG93R3JhcGhEb05CbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FeGVjdXRpb24vQ29udHJvbEZsb3cvZmxvd0dyYXBoRG9OQmxvY2suanNcIjtcbmltcG9ydCB7IEZsb3dHcmFwaEdldFZhcmlhYmxlQmxvY2sgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL0Zsb3dHcmFwaC9CbG9ja3MvRGF0YS9mbG93R3JhcGhHZXRWYXJpYWJsZUJsb2NrLmpzXCI7XG5pbXBvcnQgeyBGbG93R3JhcGhTZXRWYXJpYWJsZUJsb2NrIH0gZnJvbSBcIkBiYWJ5bG9uanMvY29yZS9GbG93R3JhcGgvQmxvY2tzL0V4ZWN1dGlvbi9mbG93R3JhcGhTZXRWYXJpYWJsZUJsb2NrLmpzXCI7XG5pbXBvcnQgeyBGbG93R3JhcGhXaGlsZUxvb3BCbG9jayB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvRmxvd0dyYXBoL0Jsb2Nrcy9FeGVjdXRpb24vQ29udHJvbEZsb3cvZmxvd0dyYXBoV2hpbGVMb29wQmxvY2suanNcIjtcbmV4cG9ydCBjb25zdCBnbHRmVG9GbG93R3JhcGhUeXBlTWFwID0ge1xuICAgIFwibGlmZWN5Y2xlL29uU3RhcnRcIjogRmxvd0dyYXBoU2NlbmVSZWFkeUV2ZW50QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibGlmZWN5Y2xlL29uVGlja1wiOiBGbG93R3JhcGhTY2VuZVRpY2tFdmVudEJsb2NrLkNsYXNzTmFtZSxcbiAgICBsb2c6IEZsb3dHcmFwaENvbnNvbGVMb2dCbG9jay5DbGFzc05hbWUsXG4gICAgXCJmbG93L2RlbGF5XCI6IEZsb3dHcmFwaFRpbWVyQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwiY3VzdG9tRXZlbnQvc2VuZFwiOiBGbG93R3JhcGhTZW5kQ3VzdG9tRXZlbnRCbG9jay5DbGFzc05hbWUsXG4gICAgXCJjdXN0b21FdmVudC9yZWNlaXZlXCI6IEZsb3dHcmFwaFJlY2VpdmVDdXN0b21FdmVudEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcImZsb3cvc2VxdWVuY2VcIjogRmxvd0dyYXBoU2VxdWVuY2VCbG9jay5DbGFzc05hbWUsXG4gICAgXCJ3b3JsZC9nZXRcIjogRmxvd0dyYXBoR2V0UHJvcGVydHlCbG9jay5DbGFzc05hbWUsXG4gICAgXCJ3b3JsZC9zZXRcIjogRmxvd0dyYXBoU2V0UHJvcGVydHlCbG9jay5DbGFzc05hbWUsXG4gICAgXCJmbG93L2RvTlwiOiBGbG93R3JhcGhEb05CbG9jay5DbGFzc05hbWUsXG4gICAgXCJ2YXJpYWJsZS9nZXRcIjogRmxvd0dyYXBoR2V0VmFyaWFibGVCbG9jay5DbGFzc05hbWUsXG4gICAgXCJ2YXJpYWJsZS9zZXRcIjogRmxvd0dyYXBoU2V0VmFyaWFibGVCbG9jay5DbGFzc05hbWUsXG4gICAgXCJmbG93L3doaWxlTG9vcFwiOiBGbG93R3JhcGhXaGlsZUxvb3BCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3JhbmRvbVwiOiBGbG93R3JhcGhSYW5kb21CbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2VcIjogRmxvd0dyYXBoRUJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvcGlcIjogRmxvd0dyYXBoUGlCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2luZlwiOiBGbG93R3JhcGhJbmZCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL25hblwiOiBGbG93R3JhcGhOYU5CbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2Fic1wiOiBGbG93R3JhcGhBYnNCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3NpZ25cIjogRmxvd0dyYXBoU2lnbkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvdHJ1bmNcIjogRmxvd0dyYXBoVHJ1bmNCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2Zsb29yXCI6IEZsb3dHcmFwaEZsb29yQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jZWlsXCI6IEZsb3dHcmFwaENlaWxCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2ZyYWN0XCI6IEZsb3dHcmFwaEZyYWN0QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9uZWdcIjogRmxvd0dyYXBoTmVnQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9hZGRcIjogRmxvd0dyYXBoQWRkQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9zdWJcIjogRmxvd0dyYXBoU3VidHJhY3RCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL211bFwiOiBGbG93R3JhcGhNdWx0aXBseUJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvZGl2XCI6IEZsb3dHcmFwaERpdmlkZUJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvcmVtXCI6IEZsb3dHcmFwaFJlbWFpbmRlckJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvbWluXCI6IEZsb3dHcmFwaE1pbkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvbWF4XCI6IEZsb3dHcmFwaE1heEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvY2xhbXBcIjogRmxvd0dyYXBoQ2xhbXBCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3NhdHVyYXRlXCI6IEZsb3dHcmFwaFNhdHVyYXRlQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9taXhcIjogRmxvd0dyYXBoSW50ZXJwb2xhdGVCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2VxXCI6IEZsb3dHcmFwaEVxQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9sdFwiOiBGbG93R3JhcGhMZXNzVGhhbkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvbGVcIjogRmxvd0dyYXBoTGVzc1RoYW5PckVxdWFsQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9ndFwiOiBGbG93R3JhcGhHcmVhdGVyVGhhbkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvZ2VcIjogRmxvd0dyYXBoR3JlYXRlclRoYW5PckVxdWFsQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9pc25hblwiOiBGbG93R3JhcGhJc05hbkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvaXNpbmZcIjogRmxvd0dyYXBoSXNJbmZCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3JhZFwiOiBGbG93R3JhcGhEZWdUb1JhZEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvZGVnXCI6IEZsb3dHcmFwaFJhZFRvRGVnQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9zaW5cIjogRmxvd0dyYXBoU2luQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jb3NcIjogRmxvd0dyYXBoQ29zQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC90YW5cIjogRmxvd0dyYXBoVGFuQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9hc2luXCI6IEZsb3dHcmFwaEFzaW5CbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2Fjb3NcIjogRmxvd0dyYXBoQWNvc0Jsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvYXRhblwiOiBGbG93R3JhcGhBdGFuQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9hdGFuMlwiOiBGbG93R3JhcGhBdGFuMkJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvc2luaFwiOiBGbG93R3JhcGhTaW5oQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jb3NoXCI6IEZsb3dHcmFwaENvc2hCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3RhbmhcIjogRmxvd0dyYXBoVGFuaEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvYXNpbmhcIjogRmxvd0dyYXBoQXNpbmhCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL2Fjb3NoXCI6IEZsb3dHcmFwaEFjb3NoQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9hdGFuaFwiOiBGbG93R3JhcGhBdGFuaEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvZXhwXCI6IEZsb3dHcmFwaEV4cEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvbG9nXCI6IEZsb3dHcmFwaExvZ0Jsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvbG9nMlwiOiBGbG93R3JhcGhMb2cyQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9sb2cxMFwiOiBGbG93R3JhcGhMb2cxMEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvc3FydFwiOiBGbG93R3JhcGhTcXJ0QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jYnJ0XCI6IEZsb3dHcmFwaEN1YmVSb290QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9wb3dcIjogRmxvd0dyYXBoUG93QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9sZW5ndGhcIjogRmxvd0dyYXBoTGVuZ3RoQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9ub3JtYWxpemVcIjogRmxvd0dyYXBoTm9ybWFsaXplQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9kb3RcIjogRmxvd0dyYXBoRG90QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jcm9zc1wiOiBGbG93R3JhcGhDcm9zc0Jsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvcm90YXRlMmRcIjogRmxvd0dyYXBoUm90YXRlMkRCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL3JvdGF0ZTNkXCI6IEZsb3dHcmFwaFJvdGF0ZTNEQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC90cmFuc3Bvc2VcIjogRmxvd0dyYXBoVHJhbnNwb3NlQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9kZXRlcm1pbmFudFwiOiBGbG93R3JhcGhEZXRlcm1pbmFudEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvaW52ZXJzZVwiOiBGbG93R3JhcGhJbnZlcnRNYXRyaXhCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL21hdG11bFwiOiBGbG93R3JhcGhNYXRNdWxCbG9jay5DbGFzc05hbWUsXG4gICAgXCJtYXRoL25vdFwiOiBGbG93R3JhcGhCaXR3aXNlTm90QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9hbmRcIjogRmxvd0dyYXBoQml0d2lzZUFuZEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvb3JcIjogRmxvd0dyYXBoQml0d2lzZU9yQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC94b3JcIjogRmxvd0dyYXBoQml0d2lzZVhvckJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvYXNyXCI6IEZsb3dHcmFwaEJpdHdpc2VSaWdodFNoaWZ0QmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9sc2xcIjogRmxvd0dyYXBoQml0d2lzZUxlZnRTaGlmdEJsb2NrLkNsYXNzTmFtZSxcbiAgICBcIm1hdGgvY2x6XCI6IEZsb3dHcmFwaENvdW50TGVhZGluZ1plcm9zQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9jdHpcIjogRmxvd0dyYXBoQ291bnRUcmFpbGluZ1plcm9zQmxvY2suQ2xhc3NOYW1lLFxuICAgIFwibWF0aC9wb3BjbnRcIjogRmxvd0dyYXBoQ291bnRPbmVCaXRzQmxvY2suQ2xhc3NOYW1lLFxufTtcbmV4cG9ydCBjb25zdCBnbHRmVHlwZVRvQmFieWxvblR5cGUgPSB7XG4gICAgZmxvYXQyOiBcIlZlY3RvcjJcIixcbiAgICBmbG9hdDM6IFwiVmVjdG9yM1wiLFxuICAgIGZsb2F0NDogXCJWZWN0b3I0XCIsXG4gICAgZmxvYXQ0eDQ6IFwiTWF0cml4XCIsXG4gICAgaW50OiBcIkZsb3dHcmFwaEludGVnZXJcIixcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcmFjdGl2aXR5VXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/interactivityUtils.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js ***!
  \****************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayItem: () => (/* binding */ ArrayItem),\n/* harmony export */   GLTFLoader: () => (/* binding */ GLTFLoader)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Misc/deferred.js */ \"@babylonjs/core/Misc/deferred.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Maths/math.color.js */ \"@babylonjs/core/Maths/math.color.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\n/* harmony import */ var _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Cameras/camera.js */ \"@babylonjs/core/Cameras/camera.js\");\n/* harmony import */ var _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Cameras/freeCamera.js */ \"@babylonjs/core/Cameras/freeCamera.js\");\n/* harmony import */ var _babylonjs_core_Animations_animationKey_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babylonjs/core/Animations/animationKey.js */ \"@babylonjs/core/Animations/animationKey.js\");\n/* harmony import */ var _babylonjs_core_Animations_animationGroup_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babylonjs/core/Animations/animationGroup.js */ \"@babylonjs/core/Animations/animationGroup.js\");\n/* harmony import */ var _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babylonjs/core/Bones/bone.js */ \"@babylonjs/core/Bones/bone.js\");\n/* harmony import */ var _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @babylonjs/core/Bones/skeleton.js */ \"@babylonjs/core/Bones/skeleton.js\");\n/* harmony import */ var _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @babylonjs/core/Materials/material.js */ \"@babylonjs/core/Materials/material.js\");\n/* harmony import */ var _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @babylonjs/core/Materials/PBR/pbrMaterial.js */ \"@babylonjs/core/Materials/PBR/pbrMaterial.js\");\n/* harmony import */ var _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @babylonjs/core/Materials/Textures/texture.js */ \"@babylonjs/core/Materials/Textures/texture.js\");\n/* harmony import */ var _babylonjs_core_Meshes_transformNode_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @babylonjs/core/Meshes/transformNode.js */ \"@babylonjs/core/Meshes/transformNode.js\");\n/* harmony import */ var _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @babylonjs/core/Buffers/buffer.js */ \"@babylonjs/core/Buffers/buffer.js\");\n/* harmony import */ var _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @babylonjs/core/Meshes/geometry.js */ \"@babylonjs/core/Meshes/geometry.js\");\n/* harmony import */ var _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @babylonjs/core/Meshes/abstractMesh.js */ \"@babylonjs/core/Meshes/abstractMesh.js\");\n/* harmony import */ var _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @babylonjs/core/Meshes/mesh.js */ \"@babylonjs/core/Meshes/mesh.js\");\n/* harmony import */ var _babylonjs_core_Morph_morphTarget_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @babylonjs/core/Morph/morphTarget.js */ \"@babylonjs/core/Morph/morphTarget.js\");\n/* harmony import */ var _babylonjs_core_Morph_morphTargetManager_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @babylonjs/core/Morph/morphTargetManager.js */ \"@babylonjs/core/Morph/morphTargetManager.js\");\n/* harmony import */ var _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../glTFFileLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js\");\n/* harmony import */ var _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @babylonjs/core/Misc/fileTools.js */ \"@babylonjs/core/Misc/fileTools.js\");\n/* harmony import */ var _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @babylonjs/core/Misc/logger.js */ \"@babylonjs/core/Misc/logger.js\");\n/* harmony import */ var _babylonjs_core_Culling_boundingInfo_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @babylonjs/core/Culling/boundingInfo.js */ \"@babylonjs/core/Culling/boundingInfo.js\");\n/* harmony import */ var _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./glTFLoaderAnimation.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderAnimation.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Animations_animationKey_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Animations_animationGroup_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_Meshes_transformNode_js__WEBPACK_IMPORTED_MODULE_13__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__, _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_15__, _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_16__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_17__, _babylonjs_core_Morph_morphTarget_js__WEBPACK_IMPORTED_MODULE_18__, _babylonjs_core_Morph_morphTargetManager_js__WEBPACK_IMPORTED_MODULE_19__, _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__, _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__, _babylonjs_core_Culling_boundingInfo_js__WEBPACK_IMPORTED_MODULE_23__, _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__]);\n([_babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__, _babylonjs_core_Animations_animationKey_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Animations_animationGroup_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_8__, _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_9__, _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__, _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__, _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__, _babylonjs_core_Meshes_transformNode_js__WEBPACK_IMPORTED_MODULE_13__, _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__, _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_15__, _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_16__, _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_17__, _babylonjs_core_Morph_morphTarget_js__WEBPACK_IMPORTED_MODULE_18__, _babylonjs_core_Morph_morphTargetManager_js__WEBPACK_IMPORTED_MODULE_19__, _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__, _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__, _babylonjs_core_Culling_boundingInfo_js__WEBPACK_IMPORTED_MODULE_23__, _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// https://stackoverflow.com/a/48218209\nfunction mergeDeep(...objects) {\n    const isObject = (obj) => obj && typeof obj === \"object\";\n    return objects.reduce((prev, obj) => {\n        Object.keys(obj).forEach((key) => {\n            const pVal = prev[key];\n            const oVal = obj[key];\n            if (Array.isArray(pVal) && Array.isArray(oVal)) {\n                prev[key] = pVal.concat(...oVal);\n            }\n            else if (isObject(pVal) && isObject(oVal)) {\n                prev[key] = mergeDeep(pVal, oVal);\n            }\n            else {\n                prev[key] = oVal;\n            }\n        });\n        return prev;\n    }, {});\n}\n/**\n * Helper class for working with arrays when loading the glTF asset\n */\nclass ArrayItem {\n    /**\n     * Gets an item from the given array.\n     * @param context The context when loading the asset\n     * @param array The array to get the item from\n     * @param index The index to the array\n     * @returns The array item\n     */\n    static Get(context, array, index) {\n        if (!array || index == undefined || !array[index]) {\n            throw new Error(`${context}: Failed to find index (${index})`);\n        }\n        return array[index];\n    }\n    /**\n     * Gets an item from the given array or returns null if not available.\n     * @param array The array to get the item from\n     * @param index The index to the array\n     * @returns The array item or null\n     */\n    static TryGet(array, index) {\n        if (!array || index == undefined || !array[index]) {\n            return null;\n        }\n        return array[index];\n    }\n    /**\n     * Assign an `index` field to each item of the given array.\n     * @param array The array of items\n     */\n    static Assign(array) {\n        if (array) {\n            for (let index = 0; index < array.length; index++) {\n                array[index].index = index;\n            }\n        }\n    }\n}\n/**\n * The glTF 2.0 loader\n */\nclass GLTFLoader {\n    /**\n     * Registers a loader extension.\n     * @param name The name of the loader extension.\n     * @param factory The factory function that creates the loader extension.\n     */\n    static RegisterExtension(name, factory) {\n        if (GLTFLoader.UnregisterExtension(name)) {\n            _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`Extension with the name '${name}' already exists`);\n        }\n        GLTFLoader._RegisteredExtensions[name] = {\n            factory: factory,\n        };\n    }\n    /**\n     * Unregisters a loader extension.\n     * @param name The name of the loader extension.\n     * @returns A boolean indicating whether the extension has been unregistered\n     */\n    static UnregisterExtension(name) {\n        if (!GLTFLoader._RegisteredExtensions[name]) {\n            return false;\n        }\n        delete GLTFLoader._RegisteredExtensions[name];\n        return true;\n    }\n    /**\n     * The object that represents the glTF JSON.\n     */\n    get gltf() {\n        if (!this._gltf) {\n            throw new Error(\"glTF JSON is not available\");\n        }\n        return this._gltf;\n    }\n    /**\n     * The BIN chunk of a binary glTF.\n     */\n    get bin() {\n        return this._bin;\n    }\n    /**\n     * The parent file loader.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * The Babylon scene when loading the asset.\n     */\n    get babylonScene() {\n        if (!this._babylonScene) {\n            throw new Error(\"Scene is not available\");\n        }\n        return this._babylonScene;\n    }\n    /**\n     * The root Babylon node when loading the asset.\n     */\n    get rootBabylonMesh() {\n        return this._rootBabylonMesh;\n    }\n    /**\n     * The root url when loading the asset.\n     */\n    get rootUrl() {\n        return this._rootUrl;\n    }\n    /**\n     * @internal\n     */\n    constructor(parent) {\n        /** @internal */\n        this._completePromises = new Array();\n        /** @internal */\n        this._assetContainer = null;\n        /** Storage */\n        this._babylonLights = [];\n        /** @internal */\n        this._disableInstancedMesh = 0;\n        /** @internal */\n        this._allMaterialsDirtyRequired = false;\n        this._extensions = new Array();\n        this._disposed = false;\n        this._rootUrl = null;\n        this._fileName = null;\n        this._uniqueRootUrl = null;\n        this._bin = null;\n        this._rootBabylonMesh = null;\n        this._defaultBabylonMaterialData = {};\n        this._postSceneLoadActions = new Array();\n        this._parent = parent;\n    }\n    /** @internal */\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        this._completePromises.length = 0;\n        this._extensions.forEach((extension) => extension.dispose && extension.dispose());\n        this._extensions.length = 0;\n        this._gltf = null; // TODO\n        this._bin = null;\n        this._babylonScene = null; // TODO\n        this._rootBabylonMesh = null;\n        this._defaultBabylonMaterialData = {};\n        this._postSceneLoadActions.length = 0;\n        this._parent.dispose();\n    }\n    /**\n     * @internal\n     */\n    importMeshAsync(meshesNames, scene, container, data, rootUrl, onProgress, fileName = \"\") {\n        return Promise.resolve().then(() => {\n            this._babylonScene = scene;\n            this._assetContainer = container;\n            this._loadData(data);\n            let nodes = null;\n            if (meshesNames) {\n                const nodeMap = {};\n                if (this._gltf.nodes) {\n                    for (const node of this._gltf.nodes) {\n                        if (node.name) {\n                            nodeMap[node.name] = node.index;\n                        }\n                    }\n                }\n                const names = meshesNames instanceof Array ? meshesNames : [meshesNames];\n                nodes = names.map((name) => {\n                    const node = nodeMap[name];\n                    if (node === undefined) {\n                        throw new Error(`Failed to find node '${name}'`);\n                    }\n                    return node;\n                });\n            }\n            return this._loadAsync(rootUrl, fileName, nodes, () => {\n                return {\n                    meshes: this._getMeshes(),\n                    particleSystems: [],\n                    skeletons: this._getSkeletons(),\n                    animationGroups: this._getAnimationGroups(),\n                    lights: this._babylonLights,\n                    transformNodes: this._getTransformNodes(),\n                    geometries: this._getGeometries(),\n                    spriteManagers: [],\n                };\n            });\n        });\n    }\n    /**\n     * @internal\n     */\n    loadAsync(scene, data, rootUrl, onProgress, fileName = \"\") {\n        return Promise.resolve().then(() => {\n            this._babylonScene = scene;\n            this._loadData(data);\n            return this._loadAsync(rootUrl, fileName, null, () => undefined);\n        });\n    }\n    _loadAsync(rootUrl, fileName, nodes, resultFunc) {\n        return Promise.resolve()\n            .then(() => {\n            this._rootUrl = rootUrl;\n            this._uniqueRootUrl = !rootUrl.startsWith(\"file:\") && fileName ? rootUrl : `${rootUrl}${Date.now()}/`;\n            this._fileName = fileName;\n            this._allMaterialsDirtyRequired = false;\n            this._loadExtensions();\n            this._checkExtensions();\n            const loadingToReadyCounterName = `${_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState[_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.LOADING]} => ${_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState[_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.READY]}`;\n            const loadingToCompleteCounterName = `${_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState[_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.LOADING]} => ${_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState[_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.COMPLETE]}`;\n            this._parent._startPerformanceCounter(loadingToReadyCounterName);\n            this._parent._startPerformanceCounter(loadingToCompleteCounterName);\n            this._parent._setState(_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.LOADING);\n            this._extensionsOnLoading();\n            const promises = new Array();\n            // Block the marking of materials dirty until the scene is loaded.\n            const oldBlockMaterialDirtyMechanism = this._babylonScene.blockMaterialDirtyMechanism;\n            this._babylonScene.blockMaterialDirtyMechanism = true;\n            if (!this.parent.loadOnlyMaterials) {\n                if (nodes) {\n                    promises.push(this.loadSceneAsync(\"/nodes\", { nodes: nodes, index: -1 }));\n                }\n                else if (this._gltf.scene != undefined || (this._gltf.scenes && this._gltf.scenes[0])) {\n                    const scene = ArrayItem.Get(`/scene`, this._gltf.scenes, this._gltf.scene || 0);\n                    promises.push(this.loadSceneAsync(`/scenes/${scene.index}`, scene));\n                }\n            }\n            if (!this.parent.skipMaterials && this.parent.loadAllMaterials && this._gltf.materials) {\n                for (let m = 0; m < this._gltf.materials.length; ++m) {\n                    const material = this._gltf.materials[m];\n                    const context = \"/materials/\" + m;\n                    const babylonDrawMode = _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.TriangleFillMode;\n                    promises.push(this._loadMaterialAsync(context, material, null, babylonDrawMode, () => { }));\n                }\n            }\n            // Restore the blocking of material dirty.\n            if (this._allMaterialsDirtyRequired) {\n                // This can happen if we add a light for instance as it will impact the whole scene.\n                // This automatically resets everything if needed.\n                this._babylonScene.blockMaterialDirtyMechanism = oldBlockMaterialDirtyMechanism;\n            }\n            else {\n                // By default a newly created material is dirty so there is no need to flag the full scene as dirty.\n                // For perf reasons, we then bypass blockMaterialDirtyMechanism as this would \"dirty\" the entire scene.\n                this._babylonScene._forceBlockMaterialDirtyMechanism(oldBlockMaterialDirtyMechanism);\n            }\n            if (this._parent.compileMaterials) {\n                promises.push(this._compileMaterialsAsync());\n            }\n            if (this._parent.compileShadowGenerators) {\n                promises.push(this._compileShadowGeneratorsAsync());\n            }\n            const resultPromise = Promise.all(promises).then(() => {\n                if (this._rootBabylonMesh && this._rootBabylonMesh !== this._parent.customRootNode) {\n                    this._rootBabylonMesh.setEnabled(true);\n                }\n                this._extensionsOnReady();\n                this._parent._setState(_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.READY);\n                this._startAnimations();\n                return resultFunc();\n            });\n            return resultPromise.then((result) => {\n                this._parent._endPerformanceCounter(loadingToReadyCounterName);\n                _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.SetImmediate(() => {\n                    if (!this._disposed) {\n                        Promise.all(this._completePromises).then(() => {\n                            this._parent._endPerformanceCounter(loadingToCompleteCounterName);\n                            this._parent._setState(_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderState.COMPLETE);\n                            this._parent.onCompleteObservable.notifyObservers(undefined);\n                            this._parent.onCompleteObservable.clear();\n                            this.dispose();\n                        }, (error) => {\n                            this._parent.onErrorObservable.notifyObservers(error);\n                            this._parent.onErrorObservable.clear();\n                            this.dispose();\n                        });\n                    }\n                });\n                return result;\n            });\n        })\n            .catch((error) => {\n            if (!this._disposed) {\n                this._parent.onErrorObservable.notifyObservers(error);\n                this._parent.onErrorObservable.clear();\n                this.dispose();\n            }\n            throw error;\n        });\n    }\n    _loadData(data) {\n        this._gltf = data.json;\n        this._setupData();\n        if (data.bin) {\n            const buffers = this._gltf.buffers;\n            if (buffers && buffers[0] && !buffers[0].uri) {\n                const binaryBuffer = buffers[0];\n                if (binaryBuffer.byteLength < data.bin.byteLength - 3 || binaryBuffer.byteLength > data.bin.byteLength) {\n                    _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`Binary buffer length (${binaryBuffer.byteLength}) from JSON does not match chunk length (${data.bin.byteLength})`);\n                }\n                this._bin = data.bin;\n            }\n            else {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(\"Unexpected BIN chunk\");\n            }\n        }\n    }\n    _setupData() {\n        ArrayItem.Assign(this._gltf.accessors);\n        ArrayItem.Assign(this._gltf.animations);\n        ArrayItem.Assign(this._gltf.buffers);\n        ArrayItem.Assign(this._gltf.bufferViews);\n        ArrayItem.Assign(this._gltf.cameras);\n        ArrayItem.Assign(this._gltf.images);\n        ArrayItem.Assign(this._gltf.materials);\n        ArrayItem.Assign(this._gltf.meshes);\n        ArrayItem.Assign(this._gltf.nodes);\n        ArrayItem.Assign(this._gltf.samplers);\n        ArrayItem.Assign(this._gltf.scenes);\n        ArrayItem.Assign(this._gltf.skins);\n        ArrayItem.Assign(this._gltf.textures);\n        if (this._gltf.nodes) {\n            const nodeParents = {};\n            for (const node of this._gltf.nodes) {\n                if (node.children) {\n                    for (const index of node.children) {\n                        nodeParents[index] = node.index;\n                    }\n                }\n            }\n            const rootNode = this._createRootNode();\n            for (const node of this._gltf.nodes) {\n                const parentIndex = nodeParents[node.index];\n                node.parent = parentIndex === undefined ? rootNode : this._gltf.nodes[parentIndex];\n            }\n        }\n    }\n    _loadExtensions() {\n        for (const name in GLTFLoader._RegisteredExtensions) {\n            const extension = GLTFLoader._RegisteredExtensions[name].factory(this);\n            if (extension.name !== name) {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`The name of the glTF loader extension instance does not match the registered name: ${extension.name} !== ${name}`);\n            }\n            this._extensions.push(extension);\n            this._parent.onExtensionLoadedObservable.notifyObservers(extension);\n        }\n        this._extensions.sort((a, b) => (a.order || Number.MAX_VALUE) - (b.order || Number.MAX_VALUE));\n        this._parent.onExtensionLoadedObservable.clear();\n    }\n    _checkExtensions() {\n        if (this._gltf.extensionsRequired) {\n            for (const name of this._gltf.extensionsRequired) {\n                const available = this._extensions.some((extension) => extension.name === name && extension.enabled);\n                if (!available) {\n                    throw new Error(`Required extension ${name} is not available`);\n                }\n            }\n        }\n    }\n    _createRootNode() {\n        if (this._parent.customRootNode !== undefined) {\n            this._rootBabylonMesh = this._parent.customRootNode;\n            return {\n                // eslint-disable-next-line @typescript-eslint/naming-convention\n                _babylonTransformNode: this._rootBabylonMesh === null ? undefined : this._rootBabylonMesh,\n                index: -1,\n            };\n        }\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const rootMesh = new _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_17__.Mesh(\"__root__\", this._babylonScene);\n        this._rootBabylonMesh = rootMesh;\n        this._rootBabylonMesh._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        this._rootBabylonMesh.setEnabled(false);\n        const rootNode = {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            _babylonTransformNode: this._rootBabylonMesh,\n            index: -1,\n        };\n        switch (this._parent.coordinateSystemMode) {\n            case _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderCoordinateSystemMode.AUTO: {\n                if (!this._babylonScene.useRightHandedSystem) {\n                    rootNode.rotation = [0, 1, 0, 0];\n                    rootNode.scale = [1, 1, -1];\n                    GLTFLoader._LoadTransform(rootNode, this._rootBabylonMesh);\n                }\n                break;\n            }\n            case _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderCoordinateSystemMode.FORCE_RIGHT_HANDED: {\n                this._babylonScene.useRightHandedSystem = true;\n                break;\n            }\n            default: {\n                throw new Error(`Invalid coordinate system mode (${this._parent.coordinateSystemMode})`);\n            }\n        }\n        this._parent.onMeshLoadedObservable.notifyObservers(rootMesh);\n        return rootNode;\n    }\n    /**\n     * Loads a glTF scene.\n     * @param context The context when loading the asset\n     * @param scene The glTF scene property\n     * @returns A promise that resolves when the load is complete\n     */\n    loadSceneAsync(context, scene) {\n        const extensionPromise = this._extensionsLoadSceneAsync(context, scene);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        const promises = new Array();\n        this.logOpen(`${context} ${scene.name || \"\"}`);\n        if (scene.nodes) {\n            for (const index of scene.nodes) {\n                const node = ArrayItem.Get(`${context}/nodes/${index}`, this._gltf.nodes, index);\n                promises.push(this.loadNodeAsync(`/nodes/${node.index}`, node, (babylonMesh) => {\n                    babylonMesh.parent = this._rootBabylonMesh;\n                }));\n            }\n        }\n        for (const action of this._postSceneLoadActions) {\n            action();\n        }\n        promises.push(this._loadAnimationsAsync());\n        this.logClose();\n        return Promise.all(promises).then(() => { });\n    }\n    _forEachPrimitive(node, callback) {\n        if (node._primitiveBabylonMeshes) {\n            for (const babylonMesh of node._primitiveBabylonMeshes) {\n                callback(babylonMesh);\n            }\n        }\n    }\n    _getGeometries() {\n        const geometries = [];\n        const nodes = this._gltf.nodes;\n        if (nodes) {\n            for (const node of nodes) {\n                this._forEachPrimitive(node, (babylonMesh) => {\n                    const geometry = babylonMesh.geometry;\n                    if (geometry && geometries.indexOf(geometry) === -1) {\n                        geometries.push(geometry);\n                    }\n                });\n            }\n        }\n        return geometries;\n    }\n    _getMeshes() {\n        const meshes = [];\n        // Root mesh is always first, if available.\n        if (this._rootBabylonMesh instanceof _babylonjs_core_Meshes_abstractMesh_js__WEBPACK_IMPORTED_MODULE_16__.AbstractMesh) {\n            meshes.push(this._rootBabylonMesh);\n        }\n        const nodes = this._gltf.nodes;\n        if (nodes) {\n            for (const node of nodes) {\n                this._forEachPrimitive(node, (babylonMesh) => {\n                    meshes.push(babylonMesh);\n                });\n            }\n        }\n        return meshes;\n    }\n    _getTransformNodes() {\n        const transformNodes = [];\n        const nodes = this._gltf.nodes;\n        if (nodes) {\n            for (const node of nodes) {\n                if (node._babylonTransformNode && node._babylonTransformNode.getClassName() === \"TransformNode\") {\n                    transformNodes.push(node._babylonTransformNode);\n                }\n                if (node._babylonTransformNodeForSkin) {\n                    transformNodes.push(node._babylonTransformNodeForSkin);\n                }\n            }\n        }\n        return transformNodes;\n    }\n    _getSkeletons() {\n        const skeletons = [];\n        const skins = this._gltf.skins;\n        if (skins) {\n            for (const skin of skins) {\n                if (skin._data) {\n                    skeletons.push(skin._data.babylonSkeleton);\n                }\n            }\n        }\n        return skeletons;\n    }\n    _getAnimationGroups() {\n        const animationGroups = [];\n        const animations = this._gltf.animations;\n        if (animations) {\n            for (const animation of animations) {\n                if (animation._babylonAnimationGroup) {\n                    animationGroups.push(animation._babylonAnimationGroup);\n                }\n            }\n        }\n        return animationGroups;\n    }\n    _startAnimations() {\n        switch (this._parent.animationStartMode) {\n            case _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderAnimationStartMode.NONE: {\n                // do nothing\n                break;\n            }\n            case _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderAnimationStartMode.FIRST: {\n                const babylonAnimationGroups = this._getAnimationGroups();\n                if (babylonAnimationGroups.length !== 0) {\n                    babylonAnimationGroups[0].start(true);\n                }\n                break;\n            }\n            case _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFLoaderAnimationStartMode.ALL: {\n                const babylonAnimationGroups = this._getAnimationGroups();\n                for (const babylonAnimationGroup of babylonAnimationGroups) {\n                    babylonAnimationGroup.start(true);\n                }\n                break;\n            }\n            default: {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Error(`Invalid animation start mode (${this._parent.animationStartMode})`);\n                return;\n            }\n        }\n    }\n    /**\n     * Loads a glTF node.\n     * @param context The context when loading the asset\n     * @param node The glTF node property\n     * @param assign A function called synchronously after parsing the glTF properties\n     * @returns A promise that resolves with the loaded Babylon mesh when the load is complete\n     */\n    loadNodeAsync(context, node, assign = () => { }) {\n        const extensionPromise = this._extensionsLoadNodeAsync(context, node, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        if (node._babylonTransformNode) {\n            throw new Error(`${context}: Invalid recursive node hierarchy`);\n        }\n        const promises = new Array();\n        this.logOpen(`${context} ${node.name || \"\"}`);\n        const loadNode = (babylonTransformNode) => {\n            GLTFLoader.AddPointerMetadata(babylonTransformNode, context);\n            GLTFLoader._LoadTransform(node, babylonTransformNode);\n            if (node.camera != undefined) {\n                const camera = ArrayItem.Get(`${context}/camera`, this._gltf.cameras, node.camera);\n                promises.push(this.loadCameraAsync(`/cameras/${camera.index}`, camera, (babylonCamera) => {\n                    babylonCamera.parent = babylonTransformNode;\n                }));\n            }\n            if (node.children) {\n                for (const index of node.children) {\n                    const childNode = ArrayItem.Get(`${context}/children/${index}`, this._gltf.nodes, index);\n                    promises.push(this.loadNodeAsync(`/nodes/${childNode.index}`, childNode, (childBabylonMesh) => {\n                        childBabylonMesh.parent = babylonTransformNode;\n                    }));\n                }\n            }\n            assign(babylonTransformNode);\n        };\n        if (node.mesh == undefined || node.skin != undefined) {\n            const nodeName = node.name || `node${node.index}`;\n            this._babylonScene._blockEntityCollection = !!this._assetContainer;\n            const transformNode = new _babylonjs_core_Meshes_transformNode_js__WEBPACK_IMPORTED_MODULE_13__.TransformNode(nodeName, this._babylonScene);\n            transformNode._parentContainer = this._assetContainer;\n            this._babylonScene._blockEntityCollection = false;\n            if (node.mesh == undefined) {\n                node._babylonTransformNode = transformNode;\n            }\n            else {\n                node._babylonTransformNodeForSkin = transformNode;\n            }\n            loadNode(transformNode);\n        }\n        if (node.mesh != undefined) {\n            if (node.skin == undefined) {\n                const mesh = ArrayItem.Get(`${context}/mesh`, this._gltf.meshes, node.mesh);\n                promises.push(this._loadMeshAsync(`/meshes/${mesh.index}`, node, mesh, loadNode));\n            }\n            else {\n                // See https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins (second implementation note)\n                // This code path will place the skinned mesh as a sibling of the skeleton root node without loading the\n                // transform, which effectively ignores the transform of the skinned mesh, as per spec.\n                const mesh = ArrayItem.Get(`${context}/mesh`, this._gltf.meshes, node.mesh);\n                promises.push(this._loadMeshAsync(`/meshes/${mesh.index}`, node, mesh, (babylonTransformNode) => {\n                    const babylonTransformNodeForSkin = node._babylonTransformNodeForSkin;\n                    // Merge the metadata from the skin node to the skinned mesh in case a loader extension added metadata.\n                    babylonTransformNode.metadata = mergeDeep(babylonTransformNodeForSkin.metadata, babylonTransformNode.metadata || {});\n                    const skin = ArrayItem.Get(`${context}/skin`, this._gltf.skins, node.skin);\n                    promises.push(this._loadSkinAsync(`/skins/${skin.index}`, node, skin, (babylonSkeleton) => {\n                        this._forEachPrimitive(node, (babylonMesh) => {\n                            babylonMesh.skeleton = babylonSkeleton;\n                        });\n                        // Wait until all the nodes are parented before parenting the skinned mesh.\n                        this._postSceneLoadActions.push(() => {\n                            if (skin.skeleton != undefined) {\n                                // Place the skinned mesh node as a sibling of the skeleton root node.\n                                // Handle special case when the parent of the skeleton root is the skinned mesh.\n                                const parentNode = ArrayItem.Get(`/skins/${skin.index}/skeleton`, this._gltf.nodes, skin.skeleton).parent;\n                                if (node.index === parentNode.index) {\n                                    babylonTransformNode.parent = babylonTransformNodeForSkin.parent;\n                                }\n                                else {\n                                    babylonTransformNode.parent = parentNode._babylonTransformNode;\n                                }\n                            }\n                            else {\n                                babylonTransformNode.parent = this._rootBabylonMesh;\n                            }\n                            this._parent.onSkinLoadedObservable.notifyObservers({ node: babylonTransformNodeForSkin, skinnedNode: babylonTransformNode });\n                        });\n                    }));\n                }));\n            }\n        }\n        this.logClose();\n        return Promise.all(promises).then(() => {\n            this._forEachPrimitive(node, (babylonMesh) => {\n                if (babylonMesh.geometry && babylonMesh.geometry.useBoundingInfoFromGeometry) {\n                    // simply apply the world matrices to the bounding info - the extends are already ok\n                    babylonMesh._updateBoundingInfo();\n                }\n                else {\n                    babylonMesh.refreshBoundingInfo(true, true);\n                }\n            });\n            return node._babylonTransformNode;\n        });\n    }\n    _loadMeshAsync(context, node, mesh, assign) {\n        const primitives = mesh.primitives;\n        if (!primitives || !primitives.length) {\n            throw new Error(`${context}: Primitives are missing`);\n        }\n        if (primitives[0].index == undefined) {\n            ArrayItem.Assign(primitives);\n        }\n        const promises = new Array();\n        this.logOpen(`${context} ${mesh.name || \"\"}`);\n        const name = node.name || `node${node.index}`;\n        if (primitives.length === 1) {\n            const primitive = mesh.primitives[0];\n            promises.push(this._loadMeshPrimitiveAsync(`${context}/primitives/${primitive.index}`, name, node, mesh, primitive, (babylonMesh) => {\n                node._babylonTransformNode = babylonMesh;\n                node._primitiveBabylonMeshes = [babylonMesh];\n            }));\n        }\n        else {\n            this._babylonScene._blockEntityCollection = !!this._assetContainer;\n            node._babylonTransformNode = new _babylonjs_core_Meshes_transformNode_js__WEBPACK_IMPORTED_MODULE_13__.TransformNode(name, this._babylonScene);\n            node._babylonTransformNode._parentContainer = this._assetContainer;\n            this._babylonScene._blockEntityCollection = false;\n            node._primitiveBabylonMeshes = [];\n            for (const primitive of primitives) {\n                promises.push(this._loadMeshPrimitiveAsync(`${context}/primitives/${primitive.index}`, `${name}_primitive${primitive.index}`, node, mesh, primitive, (babylonMesh) => {\n                    babylonMesh.parent = node._babylonTransformNode;\n                    node._primitiveBabylonMeshes.push(babylonMesh);\n                }));\n            }\n        }\n        assign(node._babylonTransformNode);\n        this.logClose();\n        return Promise.all(promises).then(() => {\n            return node._babylonTransformNode;\n        });\n    }\n    /**\n     * @internal Define this method to modify the default behavior when loading data for mesh primitives.\n     * @param context The context when loading the asset\n     * @param name The mesh name when loading the asset\n     * @param node The glTF node when loading the asset\n     * @param mesh The glTF mesh when loading the asset\n     * @param primitive The glTF mesh primitive property\n     * @param assign A function called synchronously after parsing the glTF properties\n     * @returns A promise that resolves with the loaded mesh when the load is complete or null if not handled\n     */\n    _loadMeshPrimitiveAsync(context, name, node, mesh, primitive, assign) {\n        const extensionPromise = this._extensionsLoadMeshPrimitiveAsync(context, name, node, mesh, primitive, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        this.logOpen(`${context}`);\n        const shouldInstance = this._disableInstancedMesh === 0 && this._parent.createInstances && node.skin == undefined && !mesh.primitives[0].targets;\n        let babylonAbstractMesh;\n        let promise;\n        if (shouldInstance && primitive._instanceData) {\n            this._babylonScene._blockEntityCollection = !!this._assetContainer;\n            babylonAbstractMesh = primitive._instanceData.babylonSourceMesh.createInstance(name);\n            babylonAbstractMesh._parentContainer = this._assetContainer;\n            this._babylonScene._blockEntityCollection = false;\n            promise = primitive._instanceData.promise;\n        }\n        else {\n            const promises = new Array();\n            this._babylonScene._blockEntityCollection = !!this._assetContainer;\n            const babylonMesh = new _babylonjs_core_Meshes_mesh_js__WEBPACK_IMPORTED_MODULE_17__.Mesh(name, this._babylonScene);\n            babylonMesh._parentContainer = this._assetContainer;\n            this._babylonScene._blockEntityCollection = false;\n            babylonMesh.overrideMaterialSideOrientation = this._babylonScene.useRightHandedSystem ? _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.CounterClockWiseSideOrientation : _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.ClockWiseSideOrientation;\n            this._createMorphTargets(context, node, mesh, primitive, babylonMesh);\n            promises.push(this._loadVertexDataAsync(context, primitive, babylonMesh).then((babylonGeometry) => {\n                return this._loadMorphTargetsAsync(context, primitive, babylonMesh, babylonGeometry).then(() => {\n                    if (this._disposed) {\n                        return;\n                    }\n                    this._babylonScene._blockEntityCollection = !!this._assetContainer;\n                    babylonGeometry.applyToMesh(babylonMesh);\n                    babylonGeometry._parentContainer = this._assetContainer;\n                    this._babylonScene._blockEntityCollection = false;\n                });\n            }));\n            const babylonDrawMode = GLTFLoader._GetDrawMode(context, primitive.mode);\n            if (primitive.material == undefined) {\n                let babylonMaterial = this._defaultBabylonMaterialData[babylonDrawMode];\n                if (!babylonMaterial) {\n                    babylonMaterial = this._createDefaultMaterial(\"__GLTFLoader._default\", babylonDrawMode);\n                    this._parent.onMaterialLoadedObservable.notifyObservers(babylonMaterial);\n                    this._defaultBabylonMaterialData[babylonDrawMode] = babylonMaterial;\n                }\n                babylonMesh.material = babylonMaterial;\n            }\n            else if (!this.parent.skipMaterials) {\n                const material = ArrayItem.Get(`${context}/material`, this._gltf.materials, primitive.material);\n                promises.push(this._loadMaterialAsync(`/materials/${material.index}`, material, babylonMesh, babylonDrawMode, (babylonMaterial) => {\n                    babylonMesh.material = babylonMaterial;\n                }));\n            }\n            promise = Promise.all(promises);\n            if (shouldInstance) {\n                primitive._instanceData = {\n                    babylonSourceMesh: babylonMesh,\n                    promise: promise,\n                };\n            }\n            babylonAbstractMesh = babylonMesh;\n        }\n        GLTFLoader.AddPointerMetadata(babylonAbstractMesh, context);\n        this._parent.onMeshLoadedObservable.notifyObservers(babylonAbstractMesh);\n        assign(babylonAbstractMesh);\n        this.logClose();\n        return promise.then(() => {\n            return babylonAbstractMesh;\n        });\n    }\n    _loadVertexDataAsync(context, primitive, babylonMesh) {\n        const extensionPromise = this._extensionsLoadVertexDataAsync(context, primitive, babylonMesh);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        const attributes = primitive.attributes;\n        if (!attributes) {\n            throw new Error(`${context}: Attributes are missing`);\n        }\n        const promises = new Array();\n        const babylonGeometry = new _babylonjs_core_Meshes_geometry_js__WEBPACK_IMPORTED_MODULE_15__.Geometry(babylonMesh.name, this._babylonScene);\n        if (primitive.indices == undefined) {\n            babylonMesh.isUnIndexed = true;\n        }\n        else {\n            const accessor = ArrayItem.Get(`${context}/indices`, this._gltf.accessors, primitive.indices);\n            promises.push(this._loadIndicesAccessorAsync(`/accessors/${accessor.index}`, accessor).then((data) => {\n                babylonGeometry.setIndices(data);\n            }));\n        }\n        const loadAttribute = (name, kind, callback) => {\n            if (attributes[name] == undefined) {\n                return;\n            }\n            babylonMesh._delayInfo = babylonMesh._delayInfo || [];\n            if (babylonMesh._delayInfo.indexOf(kind) === -1) {\n                babylonMesh._delayInfo.push(kind);\n            }\n            const accessor = ArrayItem.Get(`${context}/attributes/${name}`, this._gltf.accessors, attributes[name]);\n            promises.push(this._loadVertexAccessorAsync(`/accessors/${accessor.index}`, accessor, kind).then((babylonVertexBuffer) => {\n                if (babylonVertexBuffer.getKind() === _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.PositionKind && !this.parent.alwaysComputeBoundingBox && !babylonMesh.skeleton) {\n                    if (accessor.min && accessor.max) {\n                        const min = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.TmpVectors.Vector3[0].copyFromFloats(...accessor.min);\n                        const max = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.TmpVectors.Vector3[1].copyFromFloats(...accessor.max);\n                        if (accessor.normalized && accessor.componentType !== 5126 /* AccessorComponentType.FLOAT */) {\n                            let divider = 1;\n                            switch (accessor.componentType) {\n                                case 5120 /* AccessorComponentType.BYTE */:\n                                    divider = 127.0;\n                                    break;\n                                case 5121 /* AccessorComponentType.UNSIGNED_BYTE */:\n                                    divider = 255.0;\n                                    break;\n                                case 5122 /* AccessorComponentType.SHORT */:\n                                    divider = 32767.0;\n                                    break;\n                                case 5123 /* AccessorComponentType.UNSIGNED_SHORT */:\n                                    divider = 65535.0;\n                                    break;\n                            }\n                            const oneOverDivider = 1 / divider;\n                            min.scaleInPlace(oneOverDivider);\n                            max.scaleInPlace(oneOverDivider);\n                        }\n                        babylonGeometry._boundingInfo = new _babylonjs_core_Culling_boundingInfo_js__WEBPACK_IMPORTED_MODULE_23__.BoundingInfo(min, max);\n                        babylonGeometry.useBoundingInfoFromGeometry = true;\n                    }\n                }\n                babylonGeometry.setVerticesBuffer(babylonVertexBuffer, accessor.count);\n            }));\n            if (kind == _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.MatricesIndicesExtraKind) {\n                babylonMesh.numBoneInfluencers = 8;\n            }\n            if (callback) {\n                callback(accessor);\n            }\n        };\n        loadAttribute(\"POSITION\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.PositionKind);\n        loadAttribute(\"NORMAL\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.NormalKind);\n        loadAttribute(\"TANGENT\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.TangentKind);\n        loadAttribute(\"TEXCOORD_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UVKind);\n        loadAttribute(\"TEXCOORD_1\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UV2Kind);\n        loadAttribute(\"TEXCOORD_2\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UV3Kind);\n        loadAttribute(\"TEXCOORD_3\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UV4Kind);\n        loadAttribute(\"TEXCOORD_4\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UV5Kind);\n        loadAttribute(\"TEXCOORD_5\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.UV6Kind);\n        loadAttribute(\"JOINTS_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.MatricesIndicesKind);\n        loadAttribute(\"WEIGHTS_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.MatricesWeightsKind);\n        loadAttribute(\"JOINTS_1\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.MatricesIndicesExtraKind);\n        loadAttribute(\"WEIGHTS_1\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.MatricesWeightsExtraKind);\n        loadAttribute(\"COLOR_0\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.ColorKind, (accessor) => {\n            if (accessor.type === \"VEC4\" /* AccessorType.VEC4 */) {\n                babylonMesh.hasVertexAlpha = true;\n            }\n        });\n        return Promise.all(promises).then(() => {\n            return babylonGeometry;\n        });\n    }\n    _createMorphTargets(context, node, mesh, primitive, babylonMesh) {\n        if (!primitive.targets) {\n            return;\n        }\n        if (node._numMorphTargets == undefined) {\n            node._numMorphTargets = primitive.targets.length;\n        }\n        else if (primitive.targets.length !== node._numMorphTargets) {\n            throw new Error(`${context}: Primitives do not have the same number of targets`);\n        }\n        const targetNames = mesh.extras ? mesh.extras.targetNames : null;\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        babylonMesh.morphTargetManager = new _babylonjs_core_Morph_morphTargetManager_js__WEBPACK_IMPORTED_MODULE_19__.MorphTargetManager(this._babylonScene);\n        babylonMesh.morphTargetManager._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        babylonMesh.morphTargetManager.areUpdatesFrozen = true;\n        for (let index = 0; index < primitive.targets.length; index++) {\n            const weight = node.weights ? node.weights[index] : mesh.weights ? mesh.weights[index] : 0;\n            const name = targetNames ? targetNames[index] : `morphTarget${index}`;\n            babylonMesh.morphTargetManager.addTarget(new _babylonjs_core_Morph_morphTarget_js__WEBPACK_IMPORTED_MODULE_18__.MorphTarget(name, weight, babylonMesh.getScene()));\n            // TODO: tell the target whether it has positions, normals, tangents\n        }\n    }\n    _loadMorphTargetsAsync(context, primitive, babylonMesh, babylonGeometry) {\n        if (!primitive.targets) {\n            return Promise.resolve();\n        }\n        const promises = new Array();\n        const morphTargetManager = babylonMesh.morphTargetManager;\n        for (let index = 0; index < morphTargetManager.numTargets; index++) {\n            const babylonMorphTarget = morphTargetManager.getTarget(index);\n            promises.push(this._loadMorphTargetVertexDataAsync(`${context}/targets/${index}`, babylonGeometry, primitive.targets[index], babylonMorphTarget));\n        }\n        return Promise.all(promises).then(() => {\n            morphTargetManager.areUpdatesFrozen = false;\n        });\n    }\n    _loadMorphTargetVertexDataAsync(context, babylonGeometry, attributes, babylonMorphTarget) {\n        const promises = new Array();\n        const loadAttribute = (attribute, kind, setData) => {\n            if (attributes[attribute] == undefined) {\n                return;\n            }\n            const babylonVertexBuffer = babylonGeometry.getVertexBuffer(kind);\n            if (!babylonVertexBuffer) {\n                return;\n            }\n            const accessor = ArrayItem.Get(`${context}/${attribute}`, this._gltf.accessors, attributes[attribute]);\n            promises.push(this._loadFloatAccessorAsync(`/accessors/${accessor.index}`, accessor).then((data) => {\n                setData(babylonVertexBuffer, data);\n            }));\n        };\n        loadAttribute(\"POSITION\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.PositionKind, (babylonVertexBuffer, data) => {\n            const positions = new Float32Array(data.length);\n            babylonVertexBuffer.forEach(data.length, (value, index) => {\n                positions[index] = data[index] + value;\n            });\n            babylonMorphTarget.setPositions(positions);\n        });\n        loadAttribute(\"NORMAL\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.NormalKind, (babylonVertexBuffer, data) => {\n            const normals = new Float32Array(data.length);\n            babylonVertexBuffer.forEach(normals.length, (value, index) => {\n                normals[index] = data[index] + value;\n            });\n            babylonMorphTarget.setNormals(normals);\n        });\n        loadAttribute(\"TANGENT\", _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.TangentKind, (babylonVertexBuffer, data) => {\n            const tangents = new Float32Array((data.length / 3) * 4);\n            let dataIndex = 0;\n            babylonVertexBuffer.forEach((data.length / 3) * 4, (value, index) => {\n                // Tangent data for morph targets is stored as xyz delta.\n                // The vertexData.tangent is stored as xyzw.\n                // So we need to skip every fourth vertexData.tangent.\n                if ((index + 1) % 4 !== 0) {\n                    tangents[dataIndex] = data[dataIndex] + value;\n                    dataIndex++;\n                }\n            });\n            babylonMorphTarget.setTangents(tangents);\n        });\n        return Promise.all(promises).then(() => { });\n    }\n    static _LoadTransform(node, babylonNode) {\n        // Ignore the TRS of skinned nodes.\n        // See https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins (second implementation note)\n        if (node.skin != undefined) {\n            return;\n        }\n        let position = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero();\n        let rotation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.Identity();\n        let scaling = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.One();\n        if (node.matrix) {\n            const matrix = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.FromArray(node.matrix);\n            matrix.decompose(scaling, rotation, position);\n        }\n        else {\n            if (node.translation) {\n                position = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.translation);\n            }\n            if (node.rotation) {\n                rotation = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(node.rotation);\n            }\n            if (node.scale) {\n                scaling = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.scale);\n            }\n        }\n        babylonNode.position = position;\n        babylonNode.rotationQuaternion = rotation;\n        babylonNode.scaling = scaling;\n    }\n    _loadSkinAsync(context, node, skin, assign) {\n        const extensionPromise = this._extensionsLoadSkinAsync(context, node, skin);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        if (skin._data) {\n            assign(skin._data.babylonSkeleton);\n            return skin._data.promise;\n        }\n        const skeletonId = `skeleton${skin.index}`;\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const babylonSkeleton = new _babylonjs_core_Bones_skeleton_js__WEBPACK_IMPORTED_MODULE_9__.Skeleton(skin.name || skeletonId, skeletonId, this._babylonScene);\n        babylonSkeleton._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        this._loadBones(context, skin, babylonSkeleton);\n        const promise = this._loadSkinInverseBindMatricesDataAsync(context, skin).then((inverseBindMatricesData) => {\n            this._updateBoneMatrices(babylonSkeleton, inverseBindMatricesData);\n        });\n        skin._data = {\n            babylonSkeleton: babylonSkeleton,\n            promise: promise,\n        };\n        assign(babylonSkeleton);\n        return promise;\n    }\n    _loadBones(context, skin, babylonSkeleton) {\n        if (skin.skeleton == undefined || this._parent.alwaysComputeSkeletonRootNode) {\n            const rootNode = this._findSkeletonRootNode(`${context}/joints`, skin.joints);\n            if (rootNode) {\n                if (skin.skeleton === undefined) {\n                    skin.skeleton = rootNode.index;\n                }\n                else {\n                    const isParent = (a, b) => {\n                        for (; b.parent; b = b.parent) {\n                            if (b.parent === a) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                    const skeletonNode = ArrayItem.Get(`${context}/skeleton`, this._gltf.nodes, skin.skeleton);\n                    if (skeletonNode !== rootNode && !isParent(skeletonNode, rootNode)) {\n                        _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}/skeleton: Overriding with nearest common ancestor as skeleton node is not a common root`);\n                        skin.skeleton = rootNode.index;\n                    }\n                }\n            }\n            else {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}: Failed to find common root`);\n            }\n        }\n        const babylonBones = {};\n        for (const index of skin.joints) {\n            const node = ArrayItem.Get(`${context}/joints/${index}`, this._gltf.nodes, index);\n            this._loadBone(node, skin, babylonSkeleton, babylonBones);\n        }\n    }\n    _findSkeletonRootNode(context, joints) {\n        if (joints.length === 0) {\n            return null;\n        }\n        const paths = {};\n        for (const index of joints) {\n            const path = [];\n            let node = ArrayItem.Get(`${context}/${index}`, this._gltf.nodes, index);\n            while (node.index !== -1) {\n                path.unshift(node);\n                node = node.parent;\n            }\n            paths[index] = path;\n        }\n        let rootNode = null;\n        for (let i = 0;; ++i) {\n            let path = paths[joints[0]];\n            if (i >= path.length) {\n                return rootNode;\n            }\n            const node = path[i];\n            for (let j = 1; j < joints.length; ++j) {\n                path = paths[joints[j]];\n                if (i >= path.length || node !== path[i]) {\n                    return rootNode;\n                }\n            }\n            rootNode = node;\n        }\n    }\n    _loadBone(node, skin, babylonSkeleton, babylonBones) {\n        let babylonBone = babylonBones[node.index];\n        if (babylonBone) {\n            return babylonBone;\n        }\n        let parentBabylonBone = null;\n        if (node.index !== skin.skeleton) {\n            if (node.parent && node.parent.index !== -1) {\n                parentBabylonBone = this._loadBone(node.parent, skin, babylonSkeleton, babylonBones);\n            }\n            else if (skin.skeleton !== undefined) {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`/skins/${skin.index}/skeleton: Skeleton node is not a common root`);\n            }\n        }\n        const boneIndex = skin.joints.indexOf(node.index);\n        babylonBone = new _babylonjs_core_Bones_bone_js__WEBPACK_IMPORTED_MODULE_8__.Bone(node.name || `joint${node.index}`, babylonSkeleton, parentBabylonBone, this._getNodeMatrix(node), null, null, boneIndex);\n        babylonBones[node.index] = babylonBone;\n        // Wait until the scene is loaded to ensure the transform nodes are loaded.\n        this._postSceneLoadActions.push(() => {\n            // Link the Babylon bone with the corresponding Babylon transform node.\n            // A glTF joint is a pointer to a glTF node in the glTF node hierarchy similar to Unity3D.\n            babylonBone.linkTransformNode(node._babylonTransformNode);\n        });\n        return babylonBone;\n    }\n    _loadSkinInverseBindMatricesDataAsync(context, skin) {\n        if (skin.inverseBindMatrices == undefined) {\n            return Promise.resolve(null);\n        }\n        const accessor = ArrayItem.Get(`${context}/inverseBindMatrices`, this._gltf.accessors, skin.inverseBindMatrices);\n        return this._loadFloatAccessorAsync(`/accessors/${accessor.index}`, accessor);\n    }\n    _updateBoneMatrices(babylonSkeleton, inverseBindMatricesData) {\n        for (const babylonBone of babylonSkeleton.bones) {\n            const baseMatrix = _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Identity();\n            const boneIndex = babylonBone._index;\n            if (inverseBindMatricesData && boneIndex !== -1) {\n                _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.FromArrayToRef(inverseBindMatricesData, boneIndex * 16, baseMatrix);\n                baseMatrix.invertToRef(baseMatrix);\n            }\n            const babylonParentBone = babylonBone.getParent();\n            if (babylonParentBone) {\n                baseMatrix.multiplyToRef(babylonParentBone.getAbsoluteInverseBindMatrix(), baseMatrix);\n            }\n            babylonBone.updateMatrix(baseMatrix, false, false);\n            babylonBone._updateAbsoluteBindMatrices(undefined, false);\n        }\n    }\n    _getNodeMatrix(node) {\n        return node.matrix\n            ? _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.FromArray(node.matrix)\n            : _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Matrix.Compose(node.scale ? _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.scale) : _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.One(), node.rotation ? _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(node.rotation) : _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.Identity(), node.translation ? _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(node.translation) : _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero());\n    }\n    /**\n     * Loads a glTF camera.\n     * @param context The context when loading the asset\n     * @param camera The glTF camera property\n     * @param assign A function called synchronously after parsing the glTF properties\n     * @returns A promise that resolves with the loaded Babylon camera when the load is complete\n     */\n    loadCameraAsync(context, camera, assign = () => { }) {\n        const extensionPromise = this._extensionsLoadCameraAsync(context, camera, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        const promises = new Array();\n        this.logOpen(`${context} ${camera.name || \"\"}`);\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const babylonCamera = new _babylonjs_core_Cameras_freeCamera_js__WEBPACK_IMPORTED_MODULE_5__.FreeCamera(camera.name || `camera${camera.index}`, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.Zero(), this._babylonScene, false);\n        babylonCamera._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        babylonCamera.ignoreParentScaling = true;\n        camera._babylonCamera = babylonCamera;\n        // Rotation by 180 as glTF has a different convention than Babylon.\n        babylonCamera.rotation.set(0, Math.PI, 0);\n        switch (camera.type) {\n            case \"perspective\" /* CameraType.PERSPECTIVE */: {\n                const perspective = camera.perspective;\n                if (!perspective) {\n                    throw new Error(`${context}: Camera perspective properties are missing`);\n                }\n                babylonCamera.fov = perspective.yfov;\n                babylonCamera.minZ = perspective.znear;\n                babylonCamera.maxZ = perspective.zfar || 0;\n                break;\n            }\n            case \"orthographic\" /* CameraType.ORTHOGRAPHIC */: {\n                if (!camera.orthographic) {\n                    throw new Error(`${context}: Camera orthographic properties are missing`);\n                }\n                babylonCamera.mode = _babylonjs_core_Cameras_camera_js__WEBPACK_IMPORTED_MODULE_4__.Camera.ORTHOGRAPHIC_CAMERA;\n                babylonCamera.orthoLeft = -camera.orthographic.xmag;\n                babylonCamera.orthoRight = camera.orthographic.xmag;\n                babylonCamera.orthoBottom = -camera.orthographic.ymag;\n                babylonCamera.orthoTop = camera.orthographic.ymag;\n                babylonCamera.minZ = camera.orthographic.znear;\n                babylonCamera.maxZ = camera.orthographic.zfar;\n                break;\n            }\n            default: {\n                throw new Error(`${context}: Invalid camera type (${camera.type})`);\n            }\n        }\n        GLTFLoader.AddPointerMetadata(babylonCamera, context);\n        this._parent.onCameraLoadedObservable.notifyObservers(babylonCamera);\n        assign(babylonCamera);\n        this.logClose();\n        return Promise.all(promises).then(() => {\n            return babylonCamera;\n        });\n    }\n    _loadAnimationsAsync() {\n        const animations = this._gltf.animations;\n        if (!animations) {\n            return Promise.resolve();\n        }\n        const promises = new Array();\n        for (let index = 0; index < animations.length; index++) {\n            const animation = animations[index];\n            promises.push(this.loadAnimationAsync(`/animations/${animation.index}`, animation).then((animationGroup) => {\n                // Delete the animation group if it ended up not having any animations in it.\n                if (animationGroup.targetedAnimations.length === 0) {\n                    animationGroup.dispose();\n                }\n            }));\n        }\n        return Promise.all(promises).then(() => { });\n    }\n    /**\n     * Loads a glTF animation.\n     * @param context The context when loading the asset\n     * @param animation The glTF animation property\n     * @returns A promise that resolves with the loaded Babylon animation group when the load is complete\n     */\n    loadAnimationAsync(context, animation) {\n        const promise = this._extensionsLoadAnimationAsync(context, animation);\n        if (promise) {\n            return promise;\n        }\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const babylonAnimationGroup = new _babylonjs_core_Animations_animationGroup_js__WEBPACK_IMPORTED_MODULE_7__.AnimationGroup(animation.name || `animation${animation.index}`, this._babylonScene);\n        babylonAnimationGroup._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        animation._babylonAnimationGroup = babylonAnimationGroup;\n        const promises = new Array();\n        ArrayItem.Assign(animation.channels);\n        ArrayItem.Assign(animation.samplers);\n        for (const channel of animation.channels) {\n            promises.push(this._loadAnimationChannelAsync(`${context}/channels/${channel.index}`, context, animation, channel, (babylonTarget, babylonAnimation) => {\n                babylonTarget.animations = babylonTarget.animations || [];\n                babylonTarget.animations.push(babylonAnimation);\n                babylonAnimationGroup.addTargetedAnimation(babylonAnimation, babylonTarget);\n            }));\n        }\n        return Promise.all(promises).then(() => {\n            babylonAnimationGroup.normalize(0);\n            return babylonAnimationGroup;\n        });\n    }\n    /**\n     * @hidden\n     * Loads a glTF animation channel.\n     * @param context The context when loading the asset\n     * @param animationContext The context of the animation when loading the asset\n     * @param animation The glTF animation property\n     * @param channel The glTF animation channel property\n     * @param onLoad Called for each animation loaded\n     * @returns A void promise that resolves when the load is complete\n     */\n    _loadAnimationChannelAsync(context, animationContext, animation, channel, onLoad) {\n        const promise = this._extensionsLoadAnimationChannelAsync(context, animationContext, animation, channel, onLoad);\n        if (promise) {\n            return promise;\n        }\n        if (channel.target.node == undefined) {\n            return Promise.resolve();\n        }\n        const targetNode = ArrayItem.Get(`${context}/target/node`, this._gltf.nodes, channel.target.node);\n        // Ignore animations that have no animation targets.\n        if ((channel.target.path === \"weights\" /* AnimationChannelTargetPath.WEIGHTS */ && !targetNode._numMorphTargets) ||\n            (channel.target.path !== \"weights\" /* AnimationChannelTargetPath.WEIGHTS */ && !targetNode._babylonTransformNode)) {\n            return Promise.resolve();\n        }\n        let properties;\n        switch (channel.target.path) {\n            case \"translation\" /* AnimationChannelTargetPath.TRANSLATION */: {\n                properties = _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__.nodeAnimationData.translation;\n                break;\n            }\n            case \"rotation\" /* AnimationChannelTargetPath.ROTATION */: {\n                properties = _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__.nodeAnimationData.rotation;\n                break;\n            }\n            case \"scale\" /* AnimationChannelTargetPath.SCALE */: {\n                properties = _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__.nodeAnimationData.scale;\n                break;\n            }\n            case \"weights\" /* AnimationChannelTargetPath.WEIGHTS */: {\n                properties = _glTFLoaderAnimation_js__WEBPACK_IMPORTED_MODULE_24__.nodeAnimationData.weights;\n                break;\n            }\n            default: {\n                throw new Error(`${context}/target/path: Invalid value (${channel.target.path})`);\n            }\n        }\n        const targetInfo = {\n            object: targetNode,\n            info: properties,\n        };\n        return this._loadAnimationChannelFromTargetInfoAsync(context, animationContext, animation, channel, targetInfo, onLoad);\n    }\n    /**\n     * @hidden\n     * Loads a glTF animation channel.\n     * @param context The context when loading the asset\n     * @param animationContext The context of the animation when loading the asset\n     * @param animation The glTF animation property\n     * @param channel The glTF animation channel property\n     * @param targetInfo The glTF target and properties\n     * @param onLoad Called for each animation loaded\n     * @returns A void promise that resolves when the load is complete\n     */\n    _loadAnimationChannelFromTargetInfoAsync(context, animationContext, animation, channel, targetInfo, onLoad) {\n        const fps = this.parent.targetFps;\n        const invfps = 1 / fps;\n        const sampler = ArrayItem.Get(`${context}/sampler`, animation.samplers, channel.sampler);\n        return this._loadAnimationSamplerAsync(`${animationContext}/samplers/${channel.sampler}`, sampler).then((data) => {\n            let numAnimations = 0;\n            const target = targetInfo.object;\n            const propertyInfos = targetInfo.info;\n            // Extract the corresponding values from the read value.\n            // GLTF values may be dispatched to several Babylon properties.\n            // For example, baseColorFactor [`r`, `g`, `b`, `a`] is dispatched to\n            // - albedoColor as Color3(`r`, `g`, `b`)\n            // - alpha as `a`\n            for (const propertyInfo of propertyInfos) {\n                const stride = propertyInfo.getStride(target);\n                const input = data.input;\n                const output = data.output;\n                const keys = new Array(input.length);\n                let outputOffset = 0;\n                switch (data.interpolation) {\n                    case \"STEP\" /* AnimationSamplerInterpolation.STEP */: {\n                        for (let index = 0; index < input.length; index++) {\n                            const value = propertyInfo.getValue(target, output, outputOffset, 1);\n                            outputOffset += stride;\n                            keys[index] = {\n                                frame: input[index] * fps,\n                                value: value,\n                                interpolation: _babylonjs_core_Animations_animationKey_js__WEBPACK_IMPORTED_MODULE_6__.AnimationKeyInterpolation.STEP,\n                            };\n                        }\n                        break;\n                    }\n                    case \"CUBICSPLINE\" /* AnimationSamplerInterpolation.CUBICSPLINE */: {\n                        for (let index = 0; index < input.length; index++) {\n                            const inTangent = propertyInfo.getValue(target, output, outputOffset, invfps);\n                            outputOffset += stride;\n                            const value = propertyInfo.getValue(target, output, outputOffset, 1);\n                            outputOffset += stride;\n                            const outTangent = propertyInfo.getValue(target, output, outputOffset, invfps);\n                            outputOffset += stride;\n                            keys[index] = {\n                                frame: input[index] * fps,\n                                inTangent: inTangent,\n                                value: value,\n                                outTangent: outTangent,\n                            };\n                        }\n                        break;\n                    }\n                    case \"LINEAR\" /* AnimationSamplerInterpolation.LINEAR */: {\n                        for (let index = 0; index < input.length; index++) {\n                            const value = propertyInfo.getValue(target, output, outputOffset, 1);\n                            outputOffset += stride;\n                            keys[index] = {\n                                frame: input[index] * fps,\n                                value: value,\n                            };\n                        }\n                        break;\n                    }\n                }\n                if (outputOffset > 0) {\n                    const name = `${animation.name || `animation${animation.index}`}_channel${channel.index}_${numAnimations}`;\n                    propertyInfo.buildAnimations(target, name, fps, keys, (babylonAnimatable, babylonAnimation) => {\n                        ++numAnimations;\n                        onLoad(babylonAnimatable, babylonAnimation);\n                    });\n                }\n            }\n        });\n    }\n    _loadAnimationSamplerAsync(context, sampler) {\n        if (sampler._data) {\n            return sampler._data;\n        }\n        const interpolation = sampler.interpolation || \"LINEAR\" /* AnimationSamplerInterpolation.LINEAR */;\n        switch (interpolation) {\n            case \"STEP\" /* AnimationSamplerInterpolation.STEP */:\n            case \"LINEAR\" /* AnimationSamplerInterpolation.LINEAR */:\n            case \"CUBICSPLINE\" /* AnimationSamplerInterpolation.CUBICSPLINE */: {\n                break;\n            }\n            default: {\n                throw new Error(`${context}/interpolation: Invalid value (${sampler.interpolation})`);\n            }\n        }\n        const inputAccessor = ArrayItem.Get(`${context}/input`, this._gltf.accessors, sampler.input);\n        const outputAccessor = ArrayItem.Get(`${context}/output`, this._gltf.accessors, sampler.output);\n        sampler._data = Promise.all([\n            this._loadFloatAccessorAsync(`/accessors/${inputAccessor.index}`, inputAccessor),\n            this._loadFloatAccessorAsync(`/accessors/${outputAccessor.index}`, outputAccessor),\n        ]).then(([inputData, outputData]) => {\n            return {\n                input: inputData,\n                interpolation: interpolation,\n                output: outputData,\n            };\n        });\n        return sampler._data;\n    }\n    /**\n     * Loads a glTF buffer.\n     * @param context The context when loading the asset\n     * @param buffer The glTF buffer property\n     * @param byteOffset The byte offset to use\n     * @param byteLength The byte length to use\n     * @returns A promise that resolves with the loaded data when the load is complete\n     */\n    loadBufferAsync(context, buffer, byteOffset, byteLength) {\n        const extensionPromise = this._extensionsLoadBufferAsync(context, buffer, byteOffset, byteLength);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        if (!buffer._data) {\n            if (buffer.uri) {\n                buffer._data = this.loadUriAsync(`${context}/uri`, buffer, buffer.uri);\n            }\n            else {\n                if (!this._bin) {\n                    throw new Error(`${context}: Uri is missing or the binary glTF is missing its binary chunk`);\n                }\n                buffer._data = this._bin.readAsync(0, buffer.byteLength);\n            }\n        }\n        return buffer._data.then((data) => {\n            try {\n                return new Uint8Array(data.buffer, data.byteOffset + byteOffset, byteLength);\n            }\n            catch (e) {\n                throw new Error(`${context}: ${e.message}`);\n            }\n        });\n    }\n    /**\n     * Loads a glTF buffer view.\n     * @param context The context when loading the asset\n     * @param bufferView The glTF buffer view property\n     * @returns A promise that resolves with the loaded data when the load is complete\n     */\n    loadBufferViewAsync(context, bufferView) {\n        const extensionPromise = this._extensionsLoadBufferViewAsync(context, bufferView);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        if (bufferView._data) {\n            return bufferView._data;\n        }\n        const buffer = ArrayItem.Get(`${context}/buffer`, this._gltf.buffers, bufferView.buffer);\n        bufferView._data = this.loadBufferAsync(`/buffers/${buffer.index}`, buffer, bufferView.byteOffset || 0, bufferView.byteLength);\n        return bufferView._data;\n    }\n    _loadAccessorAsync(context, accessor, constructor) {\n        if (accessor._data) {\n            return accessor._data;\n        }\n        const numComponents = GLTFLoader._GetNumComponents(context, accessor.type);\n        const byteStride = numComponents * _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.GetTypeByteLength(accessor.componentType);\n        const length = numComponents * accessor.count;\n        if (accessor.bufferView == undefined) {\n            accessor._data = Promise.resolve(new constructor(length));\n        }\n        else {\n            const bufferView = ArrayItem.Get(`${context}/bufferView`, this._gltf.bufferViews, accessor.bufferView);\n            accessor._data = this.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView).then((data) => {\n                if (accessor.componentType === 5126 /* AccessorComponentType.FLOAT */ && !accessor.normalized && (!bufferView.byteStride || bufferView.byteStride === byteStride)) {\n                    return GLTFLoader._GetTypedArray(context, accessor.componentType, data, accessor.byteOffset, length);\n                }\n                else {\n                    const typedArray = new constructor(length);\n                    _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.ForEach(data, accessor.byteOffset || 0, bufferView.byteStride || byteStride, numComponents, accessor.componentType, typedArray.length, accessor.normalized || false, (value, index) => {\n                        typedArray[index] = value;\n                    });\n                    return typedArray;\n                }\n            });\n        }\n        if (accessor.sparse) {\n            const sparse = accessor.sparse;\n            accessor._data = accessor._data.then((data) => {\n                const typedArray = data;\n                const indicesBufferView = ArrayItem.Get(`${context}/sparse/indices/bufferView`, this._gltf.bufferViews, sparse.indices.bufferView);\n                const valuesBufferView = ArrayItem.Get(`${context}/sparse/values/bufferView`, this._gltf.bufferViews, sparse.values.bufferView);\n                return Promise.all([\n                    this.loadBufferViewAsync(`/bufferViews/${indicesBufferView.index}`, indicesBufferView),\n                    this.loadBufferViewAsync(`/bufferViews/${valuesBufferView.index}`, valuesBufferView),\n                ]).then(([indicesData, valuesData]) => {\n                    const indices = GLTFLoader._GetTypedArray(`${context}/sparse/indices`, sparse.indices.componentType, indicesData, sparse.indices.byteOffset, sparse.count);\n                    const sparseLength = numComponents * sparse.count;\n                    let values;\n                    if (accessor.componentType === 5126 /* AccessorComponentType.FLOAT */ && !accessor.normalized) {\n                        values = GLTFLoader._GetTypedArray(`${context}/sparse/values`, accessor.componentType, valuesData, sparse.values.byteOffset, sparseLength);\n                    }\n                    else {\n                        const sparseData = GLTFLoader._GetTypedArray(`${context}/sparse/values`, accessor.componentType, valuesData, sparse.values.byteOffset, sparseLength);\n                        values = new constructor(sparseLength);\n                        _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.ForEach(sparseData, 0, byteStride, numComponents, accessor.componentType, values.length, accessor.normalized || false, (value, index) => {\n                            values[index] = value;\n                        });\n                    }\n                    let valuesIndex = 0;\n                    for (let indicesIndex = 0; indicesIndex < indices.length; indicesIndex++) {\n                        let dataIndex = indices[indicesIndex] * numComponents;\n                        for (let componentIndex = 0; componentIndex < numComponents; componentIndex++) {\n                            typedArray[dataIndex++] = values[valuesIndex++];\n                        }\n                    }\n                    return typedArray;\n                });\n            });\n        }\n        return accessor._data;\n    }\n    /**\n     * @internal\n     */\n    _loadFloatAccessorAsync(context, accessor) {\n        return this._loadAccessorAsync(context, accessor, Float32Array);\n    }\n    /**\n     * @internal\n     */\n    _loadIndicesAccessorAsync(context, accessor) {\n        if (accessor.type !== \"SCALAR\" /* AccessorType.SCALAR */) {\n            throw new Error(`${context}/type: Invalid value ${accessor.type}`);\n        }\n        if (accessor.componentType !== 5121 /* AccessorComponentType.UNSIGNED_BYTE */ &&\n            accessor.componentType !== 5123 /* AccessorComponentType.UNSIGNED_SHORT */ &&\n            accessor.componentType !== 5125 /* AccessorComponentType.UNSIGNED_INT */) {\n            throw new Error(`${context}/componentType: Invalid value ${accessor.componentType}`);\n        }\n        if (accessor._data) {\n            return accessor._data;\n        }\n        if (accessor.sparse) {\n            const constructor = GLTFLoader._GetTypedArrayConstructor(`${context}/componentType`, accessor.componentType);\n            accessor._data = this._loadAccessorAsync(context, accessor, constructor);\n        }\n        else {\n            const bufferView = ArrayItem.Get(`${context}/bufferView`, this._gltf.bufferViews, accessor.bufferView);\n            accessor._data = this.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView).then((data) => {\n                return GLTFLoader._GetTypedArray(context, accessor.componentType, data, accessor.byteOffset, accessor.count);\n            });\n        }\n        return accessor._data;\n    }\n    /**\n     * @internal\n     */\n    _loadVertexBufferViewAsync(bufferView) {\n        if (bufferView._babylonBuffer) {\n            return bufferView._babylonBuffer;\n        }\n        const engine = this._babylonScene.getEngine();\n        bufferView._babylonBuffer = this.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView).then((data) => {\n            return new _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.Buffer(engine, data, false);\n        });\n        return bufferView._babylonBuffer;\n    }\n    /**\n     * @internal\n     */\n    _loadVertexAccessorAsync(context, accessor, kind) {\n        if (accessor._babylonVertexBuffer?.[kind]) {\n            return accessor._babylonVertexBuffer[kind];\n        }\n        if (!accessor._babylonVertexBuffer) {\n            accessor._babylonVertexBuffer = {};\n        }\n        const engine = this._babylonScene.getEngine();\n        if (accessor.sparse || accessor.bufferView == undefined) {\n            accessor._babylonVertexBuffer[kind] = this._loadFloatAccessorAsync(context, accessor).then((data) => {\n                return new _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer(engine, data, kind, false);\n            });\n        }\n        else {\n            const bufferView = ArrayItem.Get(`${context}/bufferView`, this._gltf.bufferViews, accessor.bufferView);\n            accessor._babylonVertexBuffer[kind] = this._loadVertexBufferViewAsync(bufferView).then((babylonBuffer) => {\n                const numComponents = GLTFLoader._GetNumComponents(context, accessor.type);\n                return new _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer(engine, babylonBuffer, kind, false, undefined, bufferView.byteStride, undefined, accessor.byteOffset, numComponents, accessor.componentType, accessor.normalized, true, undefined, true);\n            });\n        }\n        return accessor._babylonVertexBuffer[kind];\n    }\n    _loadMaterialMetallicRoughnessPropertiesAsync(context, properties, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        if (properties) {\n            if (properties.baseColorFactor) {\n                babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(properties.baseColorFactor);\n                babylonMaterial.alpha = properties.baseColorFactor[3];\n            }\n            else {\n                babylonMaterial.albedoColor = _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.White();\n            }\n            babylonMaterial.metallic = properties.metallicFactor == undefined ? 1 : properties.metallicFactor;\n            babylonMaterial.roughness = properties.roughnessFactor == undefined ? 1 : properties.roughnessFactor;\n            if (properties.baseColorTexture) {\n                promises.push(this.loadTextureInfoAsync(`${context}/baseColorTexture`, properties.baseColorTexture, (texture) => {\n                    texture.name = `${babylonMaterial.name} (Base Color)`;\n                    babylonMaterial.albedoTexture = texture;\n                }));\n            }\n            if (properties.metallicRoughnessTexture) {\n                properties.metallicRoughnessTexture.nonColorData = true;\n                promises.push(this.loadTextureInfoAsync(`${context}/metallicRoughnessTexture`, properties.metallicRoughnessTexture, (texture) => {\n                    texture.name = `${babylonMaterial.name} (Metallic Roughness)`;\n                    babylonMaterial.metallicTexture = texture;\n                }));\n                babylonMaterial.useMetallnessFromMetallicTextureBlue = true;\n                babylonMaterial.useRoughnessFromMetallicTextureGreen = true;\n                babylonMaterial.useRoughnessFromMetallicTextureAlpha = false;\n            }\n        }\n        return Promise.all(promises).then(() => { });\n    }\n    /**\n     * @internal\n     */\n    _loadMaterialAsync(context, material, babylonMesh, babylonDrawMode, assign = () => { }) {\n        const extensionPromise = this._extensionsLoadMaterialAsync(context, material, babylonMesh, babylonDrawMode, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        material._data = material._data || {};\n        let babylonData = material._data[babylonDrawMode];\n        if (!babylonData) {\n            this.logOpen(`${context} ${material.name || \"\"}`);\n            const babylonMaterial = this.createMaterial(context, material, babylonDrawMode);\n            babylonData = {\n                babylonMaterial: babylonMaterial,\n                babylonMeshes: [],\n                promise: this.loadMaterialPropertiesAsync(context, material, babylonMaterial),\n            };\n            material._data[babylonDrawMode] = babylonData;\n            GLTFLoader.AddPointerMetadata(babylonMaterial, context);\n            this._parent.onMaterialLoadedObservable.notifyObservers(babylonMaterial);\n            this.logClose();\n        }\n        if (babylonMesh) {\n            babylonData.babylonMeshes.push(babylonMesh);\n            babylonMesh.onDisposeObservable.addOnce(() => {\n                const index = babylonData.babylonMeshes.indexOf(babylonMesh);\n                if (index !== -1) {\n                    babylonData.babylonMeshes.splice(index, 1);\n                }\n            });\n        }\n        assign(babylonData.babylonMaterial);\n        return babylonData.promise.then(() => {\n            return babylonData.babylonMaterial;\n        });\n    }\n    _createDefaultMaterial(name, babylonDrawMode) {\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const babylonMaterial = new _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial(name, this._babylonScene);\n        babylonMaterial._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        // Moved to mesh so user can change materials on gltf meshes: babylonMaterial.sideOrientation = this._babylonScene.useRightHandedSystem ? Material.CounterClockWiseSideOrientation : Material.ClockWiseSideOrientation;\n        babylonMaterial.fillMode = babylonDrawMode;\n        babylonMaterial.enableSpecularAntiAliasing = true;\n        babylonMaterial.useRadianceOverAlpha = !this._parent.transparencyAsCoverage;\n        babylonMaterial.useSpecularOverAlpha = !this._parent.transparencyAsCoverage;\n        babylonMaterial.transparencyMode = _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial.PBRMATERIAL_OPAQUE;\n        babylonMaterial.metallic = 1;\n        babylonMaterial.roughness = 1;\n        return babylonMaterial;\n    }\n    /**\n     * Creates a Babylon material from a glTF material.\n     * @param context The context when loading the asset\n     * @param material The glTF material property\n     * @param babylonDrawMode The draw mode for the Babylon material\n     * @returns The Babylon material\n     */\n    createMaterial(context, material, babylonDrawMode) {\n        const extensionPromise = this._extensionsCreateMaterial(context, material, babylonDrawMode);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        const name = material.name || `material${material.index}`;\n        const babylonMaterial = this._createDefaultMaterial(name, babylonDrawMode);\n        return babylonMaterial;\n    }\n    /**\n     * Loads properties from a glTF material into a Babylon material.\n     * @param context The context when loading the asset\n     * @param material The glTF material property\n     * @param babylonMaterial The Babylon material\n     * @returns A promise that resolves when the load is complete\n     */\n    loadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        const extensionPromise = this._extensionsLoadMaterialPropertiesAsync(context, material, babylonMaterial);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        const promises = new Array();\n        promises.push(this.loadMaterialBasePropertiesAsync(context, material, babylonMaterial));\n        if (material.pbrMetallicRoughness) {\n            promises.push(this._loadMaterialMetallicRoughnessPropertiesAsync(`${context}/pbrMetallicRoughness`, material.pbrMetallicRoughness, babylonMaterial));\n        }\n        this.loadMaterialAlphaProperties(context, material, babylonMaterial);\n        return Promise.all(promises).then(() => { });\n    }\n    /**\n     * Loads the normal, occlusion, and emissive properties from a glTF material into a Babylon material.\n     * @param context The context when loading the asset\n     * @param material The glTF material property\n     * @param babylonMaterial The Babylon material\n     * @returns A promise that resolves when the load is complete\n     */\n    loadMaterialBasePropertiesAsync(context, material, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const promises = new Array();\n        babylonMaterial.emissiveColor = material.emissiveFactor ? _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3.FromArray(material.emissiveFactor) : new _babylonjs_core_Maths_math_color_js__WEBPACK_IMPORTED_MODULE_2__.Color3(0, 0, 0);\n        if (material.doubleSided) {\n            babylonMaterial.backFaceCulling = false;\n            babylonMaterial.twoSidedLighting = true;\n        }\n        if (material.normalTexture) {\n            material.normalTexture.nonColorData = true;\n            promises.push(this.loadTextureInfoAsync(`${context}/normalTexture`, material.normalTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Normal)`;\n                babylonMaterial.bumpTexture = texture;\n            }));\n            babylonMaterial.invertNormalMapX = !this._babylonScene.useRightHandedSystem;\n            babylonMaterial.invertNormalMapY = this._babylonScene.useRightHandedSystem;\n            if (material.normalTexture.scale != undefined && babylonMaterial.bumpTexture) {\n                babylonMaterial.bumpTexture.level = material.normalTexture.scale;\n            }\n            babylonMaterial.forceIrradianceInFragment = true;\n        }\n        if (material.occlusionTexture) {\n            material.occlusionTexture.nonColorData = true;\n            promises.push(this.loadTextureInfoAsync(`${context}/occlusionTexture`, material.occlusionTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Occlusion)`;\n                babylonMaterial.ambientTexture = texture;\n            }));\n            babylonMaterial.useAmbientInGrayScale = true;\n            if (material.occlusionTexture.strength != undefined) {\n                babylonMaterial.ambientTextureStrength = material.occlusionTexture.strength;\n            }\n        }\n        if (material.emissiveTexture) {\n            promises.push(this.loadTextureInfoAsync(`${context}/emissiveTexture`, material.emissiveTexture, (texture) => {\n                texture.name = `${babylonMaterial.name} (Emissive)`;\n                babylonMaterial.emissiveTexture = texture;\n            }));\n        }\n        return Promise.all(promises).then(() => { });\n    }\n    /**\n     * Loads the alpha properties from a glTF material into a Babylon material.\n     * Must be called after the setting the albedo texture of the Babylon material when the material has an albedo texture.\n     * @param context The context when loading the asset\n     * @param material The glTF material property\n     * @param babylonMaterial The Babylon material\n     */\n    loadMaterialAlphaProperties(context, material, babylonMaterial) {\n        if (!(babylonMaterial instanceof _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial)) {\n            throw new Error(`${context}: Material type not supported`);\n        }\n        const alphaMode = material.alphaMode || \"OPAQUE\" /* MaterialAlphaMode.OPAQUE */;\n        switch (alphaMode) {\n            case \"OPAQUE\" /* MaterialAlphaMode.OPAQUE */: {\n                babylonMaterial.transparencyMode = _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial.PBRMATERIAL_OPAQUE;\n                babylonMaterial.alpha = 1.0; // Force alpha to 1.0 for opaque mode.\n                break;\n            }\n            case \"MASK\" /* MaterialAlphaMode.MASK */: {\n                babylonMaterial.transparencyMode = _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial.PBRMATERIAL_ALPHATEST;\n                babylonMaterial.alphaCutOff = material.alphaCutoff == undefined ? 0.5 : material.alphaCutoff;\n                if (babylonMaterial.albedoTexture) {\n                    babylonMaterial.albedoTexture.hasAlpha = true;\n                }\n                break;\n            }\n            case \"BLEND\" /* MaterialAlphaMode.BLEND */: {\n                babylonMaterial.transparencyMode = _babylonjs_core_Materials_PBR_pbrMaterial_js__WEBPACK_IMPORTED_MODULE_11__.PBRMaterial.PBRMATERIAL_ALPHABLEND;\n                if (babylonMaterial.albedoTexture) {\n                    babylonMaterial.albedoTexture.hasAlpha = true;\n                    babylonMaterial.useAlphaFromAlbedoTexture = true;\n                }\n                break;\n            }\n            default: {\n                throw new Error(`${context}/alphaMode: Invalid value (${material.alphaMode})`);\n            }\n        }\n    }\n    /**\n     * Loads a glTF texture info.\n     * @param context The context when loading the asset\n     * @param textureInfo The glTF texture info property\n     * @param assign A function called synchronously after parsing the glTF properties\n     * @returns A promise that resolves with the loaded Babylon texture when the load is complete\n     */\n    loadTextureInfoAsync(context, textureInfo, assign = () => { }) {\n        const extensionPromise = this._extensionsLoadTextureInfoAsync(context, textureInfo, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        this.logOpen(`${context}`);\n        if (textureInfo.texCoord >= 6) {\n            throw new Error(`${context}/texCoord: Invalid value (${textureInfo.texCoord})`);\n        }\n        const texture = ArrayItem.Get(`${context}/index`, this._gltf.textures, textureInfo.index);\n        texture._textureInfo = textureInfo;\n        const promise = this._loadTextureAsync(`/textures/${textureInfo.index}`, texture, (babylonTexture) => {\n            babylonTexture.coordinatesIndex = textureInfo.texCoord || 0;\n            GLTFLoader.AddPointerMetadata(babylonTexture, context);\n            this._parent.onTextureLoadedObservable.notifyObservers(babylonTexture);\n            assign(babylonTexture);\n        });\n        this.logClose();\n        return promise;\n    }\n    /**\n     * @internal\n     */\n    _loadTextureAsync(context, texture, assign = () => { }) {\n        const extensionPromise = this._extensionsLoadTextureAsync(context, texture, assign);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        this.logOpen(`${context} ${texture.name || \"\"}`);\n        const sampler = texture.sampler == undefined ? GLTFLoader.DefaultSampler : ArrayItem.Get(`${context}/sampler`, this._gltf.samplers, texture.sampler);\n        const image = ArrayItem.Get(`${context}/source`, this._gltf.images, texture.source);\n        const promise = this._createTextureAsync(context, sampler, image, assign, undefined, !texture._textureInfo.nonColorData);\n        this.logClose();\n        return promise;\n    }\n    /**\n     * @internal\n     */\n    _createTextureAsync(context, sampler, image, assign = () => { }, textureLoaderOptions, useSRGBBuffer) {\n        const samplerData = this._loadSampler(`/samplers/${sampler.index}`, sampler);\n        const promises = new Array();\n        const deferred = new _babylonjs_core_Misc_deferred_js__WEBPACK_IMPORTED_MODULE_0__.Deferred();\n        this._babylonScene._blockEntityCollection = !!this._assetContainer;\n        const textureCreationOptions = {\n            noMipmap: samplerData.noMipMaps,\n            invertY: false,\n            samplingMode: samplerData.samplingMode,\n            onLoad: () => {\n                if (!this._disposed) {\n                    deferred.resolve();\n                }\n            },\n            onError: (message, exception) => {\n                if (!this._disposed) {\n                    deferred.reject(new Error(`${context}: ${exception && exception.message ? exception.message : message || \"Failed to load texture\"}`));\n                }\n            },\n            mimeType: image.mimeType,\n            loaderOptions: textureLoaderOptions,\n            useSRGBBuffer: !!useSRGBBuffer && this._parent.useSRGBBuffers,\n        };\n        const babylonTexture = new _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture(null, this._babylonScene, textureCreationOptions);\n        babylonTexture._parentContainer = this._assetContainer;\n        this._babylonScene._blockEntityCollection = false;\n        promises.push(deferred.promise);\n        promises.push(this.loadImageAsync(`/images/${image.index}`, image).then((data) => {\n            const name = image.uri || `${this._fileName}#image${image.index}`;\n            const dataUrl = `data:${this._uniqueRootUrl}${name}`;\n            babylonTexture.updateURL(dataUrl, data);\n        }));\n        babylonTexture.wrapU = samplerData.wrapU;\n        babylonTexture.wrapV = samplerData.wrapV;\n        assign(babylonTexture);\n        return Promise.all(promises).then(() => {\n            return babylonTexture;\n        });\n    }\n    _loadSampler(context, sampler) {\n        if (!sampler._data) {\n            sampler._data = {\n                noMipMaps: sampler.minFilter === 9728 /* TextureMinFilter.NEAREST */ || sampler.minFilter === 9729 /* TextureMinFilter.LINEAR */,\n                samplingMode: GLTFLoader._GetTextureSamplingMode(context, sampler),\n                wrapU: GLTFLoader._GetTextureWrapMode(`${context}/wrapS`, sampler.wrapS),\n                wrapV: GLTFLoader._GetTextureWrapMode(`${context}/wrapT`, sampler.wrapT),\n            };\n        }\n        return sampler._data;\n    }\n    /**\n     * Loads a glTF image.\n     * @param context The context when loading the asset\n     * @param image The glTF image property\n     * @returns A promise that resolves with the loaded data when the load is complete\n     */\n    loadImageAsync(context, image) {\n        if (!image._data) {\n            this.logOpen(`${context} ${image.name || \"\"}`);\n            if (image.uri) {\n                image._data = this.loadUriAsync(`${context}/uri`, image, image.uri);\n            }\n            else {\n                const bufferView = ArrayItem.Get(`${context}/bufferView`, this._gltf.bufferViews, image.bufferView);\n                image._data = this.loadBufferViewAsync(`/bufferViews/${bufferView.index}`, bufferView);\n            }\n            this.logClose();\n        }\n        return image._data;\n    }\n    /**\n     * Loads a glTF uri.\n     * @param context The context when loading the asset\n     * @param property The glTF property associated with the uri\n     * @param uri The base64 or relative uri\n     * @returns A promise that resolves with the loaded data when the load is complete\n     */\n    loadUriAsync(context, property, uri) {\n        const extensionPromise = this._extensionsLoadUriAsync(context, property, uri);\n        if (extensionPromise) {\n            return extensionPromise;\n        }\n        if (!GLTFLoader._ValidateUri(uri)) {\n            throw new Error(`${context}: '${uri}' is invalid`);\n        }\n        if ((0,_babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__.IsBase64DataUrl)(uri)) {\n            const data = new Uint8Array((0,_babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__.DecodeBase64UrlToBinary)(uri));\n            this.log(`${context}: Decoded ${uri.substr(0, 64)}... (${data.length} bytes)`);\n            return Promise.resolve(data);\n        }\n        this.log(`${context}: Loading ${uri}`);\n        return this._parent.preprocessUrlAsync(this._rootUrl + uri).then((url) => {\n            return new Promise((resolve, reject) => {\n                this._parent._loadFile(this._babylonScene, url, (data) => {\n                    if (!this._disposed) {\n                        this.log(`${context}: Loaded ${uri} (${data.byteLength} bytes)`);\n                        resolve(new Uint8Array(data));\n                    }\n                }, true, (request) => {\n                    reject(new _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_21__.LoadFileError(`${context}: Failed to load '${uri}'${request ? \": \" + request.status + \" \" + request.statusText : \"\"}`, request));\n                });\n            });\n        });\n    }\n    /**\n     * Adds a JSON pointer to the _internalMetadata of the Babylon object at `<object>._internalMetadata.gltf.pointers`.\n     * @param babylonObject the Babylon object with _internalMetadata\n     * @param pointer the JSON pointer\n     */\n    static AddPointerMetadata(babylonObject, pointer) {\n        babylonObject.metadata = babylonObject.metadata || {};\n        const metadata = (babylonObject._internalMetadata = babylonObject._internalMetadata || {});\n        const gltf = (metadata.gltf = metadata.gltf || {});\n        const pointers = (gltf.pointers = gltf.pointers || []);\n        pointers.push(pointer);\n    }\n    static _GetTextureWrapMode(context, mode) {\n        // Set defaults if undefined\n        mode = mode == undefined ? 10497 /* TextureWrapMode.REPEAT */ : mode;\n        switch (mode) {\n            case 33071 /* TextureWrapMode.CLAMP_TO_EDGE */:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.CLAMP_ADDRESSMODE;\n            case 33648 /* TextureWrapMode.MIRRORED_REPEAT */:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.MIRROR_ADDRESSMODE;\n            case 10497 /* TextureWrapMode.REPEAT */:\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.WRAP_ADDRESSMODE;\n            default:\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}: Invalid value (${mode})`);\n                return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.WRAP_ADDRESSMODE;\n        }\n    }\n    static _GetTextureSamplingMode(context, sampler) {\n        // Set defaults if undefined\n        const magFilter = sampler.magFilter == undefined ? 9729 /* TextureMagFilter.LINEAR */ : sampler.magFilter;\n        const minFilter = sampler.minFilter == undefined ? 9987 /* TextureMinFilter.LINEAR_MIPMAP_LINEAR */ : sampler.minFilter;\n        if (magFilter === 9729 /* TextureMagFilter.LINEAR */) {\n            switch (minFilter) {\n                case 9728 /* TextureMinFilter.NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_NEAREST;\n                case 9729 /* TextureMinFilter.LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_LINEAR;\n                case 9984 /* TextureMinFilter.NEAREST_MIPMAP_NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_NEAREST_MIPNEAREST;\n                case 9985 /* TextureMinFilter.LINEAR_MIPMAP_NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_LINEAR_MIPNEAREST;\n                case 9986 /* TextureMinFilter.NEAREST_MIPMAP_LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_NEAREST_MIPLINEAR;\n                case 9987 /* TextureMinFilter.LINEAR_MIPMAP_LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_LINEAR_MIPLINEAR;\n                default:\n                    _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}/minFilter: Invalid value (${minFilter})`);\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.LINEAR_LINEAR_MIPLINEAR;\n            }\n        }\n        else {\n            if (magFilter !== 9728 /* TextureMagFilter.NEAREST */) {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}/magFilter: Invalid value (${magFilter})`);\n            }\n            switch (minFilter) {\n                case 9728 /* TextureMinFilter.NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_NEAREST;\n                case 9729 /* TextureMinFilter.LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_LINEAR;\n                case 9984 /* TextureMinFilter.NEAREST_MIPMAP_NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_NEAREST_MIPNEAREST;\n                case 9985 /* TextureMinFilter.LINEAR_MIPMAP_NEAREST */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_LINEAR_MIPNEAREST;\n                case 9986 /* TextureMinFilter.NEAREST_MIPMAP_LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_NEAREST_MIPLINEAR;\n                case 9987 /* TextureMinFilter.LINEAR_MIPMAP_LINEAR */:\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_LINEAR_MIPLINEAR;\n                default:\n                    _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}/minFilter: Invalid value (${minFilter})`);\n                    return _babylonjs_core_Materials_Textures_texture_js__WEBPACK_IMPORTED_MODULE_12__.Texture.NEAREST_NEAREST_MIPNEAREST;\n            }\n        }\n    }\n    static _GetTypedArrayConstructor(context, componentType) {\n        switch (componentType) {\n            case 5120 /* AccessorComponentType.BYTE */:\n                return Int8Array;\n            case 5121 /* AccessorComponentType.UNSIGNED_BYTE */:\n                return Uint8Array;\n            case 5122 /* AccessorComponentType.SHORT */:\n                return Int16Array;\n            case 5123 /* AccessorComponentType.UNSIGNED_SHORT */:\n                return Uint16Array;\n            case 5125 /* AccessorComponentType.UNSIGNED_INT */:\n                return Uint32Array;\n            case 5126 /* AccessorComponentType.FLOAT */:\n                return Float32Array;\n            default:\n                throw new Error(`${context}: Invalid component type ${componentType}`);\n        }\n    }\n    static _GetTypedArray(context, componentType, bufferView, byteOffset, length) {\n        const buffer = bufferView.buffer;\n        byteOffset = bufferView.byteOffset + (byteOffset || 0);\n        const constructor = GLTFLoader._GetTypedArrayConstructor(`${context}/componentType`, componentType);\n        const componentTypeLength = _babylonjs_core_Buffers_buffer_js__WEBPACK_IMPORTED_MODULE_14__.VertexBuffer.GetTypeByteLength(componentType);\n        if (byteOffset % componentTypeLength !== 0) {\n            // HACK: Copy the buffer if byte offset is not a multiple of component type byte length.\n            _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_22__.Logger.Warn(`${context}: Copying buffer as byte offset (${byteOffset}) is not a multiple of component type byte length (${componentTypeLength})`);\n            return new constructor(buffer.slice(byteOffset, byteOffset + length * componentTypeLength), 0);\n        }\n        return new constructor(buffer, byteOffset, length);\n    }\n    static _GetNumComponents(context, type) {\n        switch (type) {\n            case \"SCALAR\":\n                return 1;\n            case \"VEC2\":\n                return 2;\n            case \"VEC3\":\n                return 3;\n            case \"VEC4\":\n                return 4;\n            case \"MAT2\":\n                return 4;\n            case \"MAT3\":\n                return 9;\n            case \"MAT4\":\n                return 16;\n        }\n        throw new Error(`${context}: Invalid type (${type})`);\n    }\n    static _ValidateUri(uri) {\n        return _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_3__.Tools.IsBase64(uri) || uri.indexOf(\"..\") === -1;\n    }\n    /**\n     * @internal\n     */\n    static _GetDrawMode(context, mode) {\n        if (mode == undefined) {\n            mode = 4 /* MeshPrimitiveMode.TRIANGLES */;\n        }\n        switch (mode) {\n            case 0 /* MeshPrimitiveMode.POINTS */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.PointListDrawMode;\n            case 1 /* MeshPrimitiveMode.LINES */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.LineListDrawMode;\n            case 2 /* MeshPrimitiveMode.LINE_LOOP */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.LineLoopDrawMode;\n            case 3 /* MeshPrimitiveMode.LINE_STRIP */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.LineStripDrawMode;\n            case 4 /* MeshPrimitiveMode.TRIANGLES */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.TriangleFillMode;\n            case 5 /* MeshPrimitiveMode.TRIANGLE_STRIP */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.TriangleStripDrawMode;\n            case 6 /* MeshPrimitiveMode.TRIANGLE_FAN */:\n                return _babylonjs_core_Materials_material_js__WEBPACK_IMPORTED_MODULE_10__.Material.TriangleFanDrawMode;\n        }\n        throw new Error(`${context}: Invalid mesh primitive mode (${mode})`);\n    }\n    _compileMaterialsAsync() {\n        this._parent._startPerformanceCounter(\"Compile materials\");\n        const promises = new Array();\n        if (this._gltf.materials) {\n            for (const material of this._gltf.materials) {\n                if (material._data) {\n                    for (const babylonDrawMode in material._data) {\n                        const babylonData = material._data[babylonDrawMode];\n                        for (const babylonMesh of babylonData.babylonMeshes) {\n                            // Ensure nonUniformScaling is set if necessary.\n                            babylonMesh.computeWorldMatrix(true);\n                            const babylonMaterial = babylonData.babylonMaterial;\n                            promises.push(babylonMaterial.forceCompilationAsync(babylonMesh));\n                            promises.push(babylonMaterial.forceCompilationAsync(babylonMesh, { useInstances: true }));\n                            if (this._parent.useClipPlane) {\n                                promises.push(babylonMaterial.forceCompilationAsync(babylonMesh, { clipPlane: true }));\n                                promises.push(babylonMaterial.forceCompilationAsync(babylonMesh, { clipPlane: true, useInstances: true }));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return Promise.all(promises).then(() => {\n            this._parent._endPerformanceCounter(\"Compile materials\");\n        });\n    }\n    _compileShadowGeneratorsAsync() {\n        this._parent._startPerformanceCounter(\"Compile shadow generators\");\n        const promises = new Array();\n        const lights = this._babylonScene.lights;\n        for (const light of lights) {\n            const generator = light.getShadowGenerator();\n            if (generator) {\n                promises.push(generator.forceCompilationAsync());\n            }\n        }\n        return Promise.all(promises).then(() => {\n            this._parent._endPerformanceCounter(\"Compile shadow generators\");\n        });\n    }\n    _forEachExtensions(action) {\n        for (const extension of this._extensions) {\n            if (extension.enabled) {\n                action(extension);\n            }\n        }\n    }\n    _applyExtensions(property, functionName, actionAsync) {\n        for (const extension of this._extensions) {\n            if (extension.enabled) {\n                const id = `${extension.name}.${functionName}`;\n                const loaderProperty = property;\n                loaderProperty._activeLoaderExtensionFunctions = loaderProperty._activeLoaderExtensionFunctions || {};\n                const activeLoaderExtensionFunctions = loaderProperty._activeLoaderExtensionFunctions;\n                if (!activeLoaderExtensionFunctions[id]) {\n                    activeLoaderExtensionFunctions[id] = true;\n                    try {\n                        const result = actionAsync(extension);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    finally {\n                        delete activeLoaderExtensionFunctions[id];\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    _extensionsOnLoading() {\n        this._forEachExtensions((extension) => extension.onLoading && extension.onLoading());\n    }\n    _extensionsOnReady() {\n        this._forEachExtensions((extension) => extension.onReady && extension.onReady());\n    }\n    _extensionsLoadSceneAsync(context, scene) {\n        return this._applyExtensions(scene, \"loadScene\", (extension) => extension.loadSceneAsync && extension.loadSceneAsync(context, scene));\n    }\n    _extensionsLoadNodeAsync(context, node, assign) {\n        return this._applyExtensions(node, \"loadNode\", (extension) => extension.loadNodeAsync && extension.loadNodeAsync(context, node, assign));\n    }\n    _extensionsLoadCameraAsync(context, camera, assign) {\n        return this._applyExtensions(camera, \"loadCamera\", (extension) => extension.loadCameraAsync && extension.loadCameraAsync(context, camera, assign));\n    }\n    _extensionsLoadVertexDataAsync(context, primitive, babylonMesh) {\n        return this._applyExtensions(primitive, \"loadVertexData\", (extension) => extension._loadVertexDataAsync && extension._loadVertexDataAsync(context, primitive, babylonMesh));\n    }\n    _extensionsLoadMeshPrimitiveAsync(context, name, node, mesh, primitive, assign) {\n        return this._applyExtensions(primitive, \"loadMeshPrimitive\", (extension) => extension._loadMeshPrimitiveAsync && extension._loadMeshPrimitiveAsync(context, name, node, mesh, primitive, assign));\n    }\n    _extensionsLoadMaterialAsync(context, material, babylonMesh, babylonDrawMode, assign) {\n        return this._applyExtensions(material, \"loadMaterial\", (extension) => extension._loadMaterialAsync && extension._loadMaterialAsync(context, material, babylonMesh, babylonDrawMode, assign));\n    }\n    _extensionsCreateMaterial(context, material, babylonDrawMode) {\n        return this._applyExtensions(material, \"createMaterial\", (extension) => extension.createMaterial && extension.createMaterial(context, material, babylonDrawMode));\n    }\n    _extensionsLoadMaterialPropertiesAsync(context, material, babylonMaterial) {\n        return this._applyExtensions(material, \"loadMaterialProperties\", (extension) => extension.loadMaterialPropertiesAsync && extension.loadMaterialPropertiesAsync(context, material, babylonMaterial));\n    }\n    _extensionsLoadTextureInfoAsync(context, textureInfo, assign) {\n        return this._applyExtensions(textureInfo, \"loadTextureInfo\", (extension) => extension.loadTextureInfoAsync && extension.loadTextureInfoAsync(context, textureInfo, assign));\n    }\n    _extensionsLoadTextureAsync(context, texture, assign) {\n        return this._applyExtensions(texture, \"loadTexture\", (extension) => extension._loadTextureAsync && extension._loadTextureAsync(context, texture, assign));\n    }\n    _extensionsLoadAnimationAsync(context, animation) {\n        return this._applyExtensions(animation, \"loadAnimation\", (extension) => extension.loadAnimationAsync && extension.loadAnimationAsync(context, animation));\n    }\n    _extensionsLoadAnimationChannelAsync(context, animationContext, animation, channel, onLoad) {\n        return this._applyExtensions(animation, \"loadAnimationChannel\", (extension) => extension._loadAnimationChannelAsync && extension._loadAnimationChannelAsync(context, animationContext, animation, channel, onLoad));\n    }\n    _extensionsLoadSkinAsync(context, node, skin) {\n        return this._applyExtensions(skin, \"loadSkin\", (extension) => extension._loadSkinAsync && extension._loadSkinAsync(context, node, skin));\n    }\n    _extensionsLoadUriAsync(context, property, uri) {\n        return this._applyExtensions(property, \"loadUri\", (extension) => extension._loadUriAsync && extension._loadUriAsync(context, property, uri));\n    }\n    _extensionsLoadBufferViewAsync(context, bufferView) {\n        return this._applyExtensions(bufferView, \"loadBufferView\", (extension) => extension.loadBufferViewAsync && extension.loadBufferViewAsync(context, bufferView));\n    }\n    _extensionsLoadBufferAsync(context, buffer, byteOffset, byteLength) {\n        return this._applyExtensions(buffer, \"loadBuffer\", (extension) => extension.loadBufferAsync && extension.loadBufferAsync(context, buffer, byteOffset, byteLength));\n    }\n    /**\n     * Helper method called by a loader extension to load an glTF extension.\n     * @param context The context when loading the asset\n     * @param property The glTF property to load the extension from\n     * @param extensionName The name of the extension to load\n     * @param actionAsync The action to run\n     * @returns The promise returned by actionAsync or null if the extension does not exist\n     */\n    static LoadExtensionAsync(context, property, extensionName, actionAsync) {\n        if (!property.extensions) {\n            return null;\n        }\n        const extensions = property.extensions;\n        const extension = extensions[extensionName];\n        if (!extension) {\n            return null;\n        }\n        return actionAsync(`${context}/extensions/${extensionName}`, extension);\n    }\n    /**\n     * Helper method called by a loader extension to load a glTF extra.\n     * @param context The context when loading the asset\n     * @param property The glTF property to load the extra from\n     * @param extensionName The name of the extension to load\n     * @param actionAsync The action to run\n     * @returns The promise returned by actionAsync or null if the extra does not exist\n     */\n    static LoadExtraAsync(context, property, extensionName, actionAsync) {\n        if (!property.extras) {\n            return null;\n        }\n        const extras = property.extras;\n        const extra = extras[extensionName];\n        if (!extra) {\n            return null;\n        }\n        return actionAsync(`${context}/extras/${extensionName}`, extra);\n    }\n    /**\n     * Checks for presence of an extension.\n     * @param name The name of the extension to check\n     * @returns A boolean indicating the presence of the given extension name in `extensionsUsed`\n     */\n    isExtensionUsed(name) {\n        return !!this._gltf.extensionsUsed && this._gltf.extensionsUsed.indexOf(name) !== -1;\n    }\n    /**\n     * Increments the indentation level and logs a message.\n     * @param message The message to log\n     */\n    logOpen(message) {\n        this._parent._logOpen(message);\n    }\n    /**\n     * Decrements the indentation level.\n     */\n    logClose() {\n        this._parent._logClose();\n    }\n    /**\n     * Logs a message\n     * @param message The message to log\n     */\n    log(message) {\n        this._parent._log(message);\n    }\n    /**\n     * Starts a performance counter.\n     * @param counterName The name of the performance counter\n     */\n    startPerformanceCounter(counterName) {\n        this._parent._startPerformanceCounter(counterName);\n    }\n    /**\n     * Ends a performance counter.\n     * @param counterName The name of the performance counter\n     */\n    endPerformanceCounter(counterName) {\n        this._parent._endPerformanceCounter(counterName);\n    }\n}\nGLTFLoader._RegisteredExtensions = {};\n/**\n * The default glTF sampler.\n */\nGLTFLoader.DefaultSampler = { index: -1 };\n_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_20__.GLTFFileLoader._CreateGLTF2Loader = (parent) => new GLTFLoader(parent);\n//# sourceMappingURL=glTFLoader.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderAnimation.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderAnimation.js ***!
  \*************************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnimationPropertyInfo: () => (/* binding */ AnimationPropertyInfo),\n/* harmony export */   TransformNodeAnimationPropertyInfo: () => (/* binding */ TransformNodeAnimationPropertyInfo),\n/* harmony export */   WeightAnimationPropertyInfo: () => (/* binding */ WeightAnimationPropertyInfo),\n/* harmony export */   getQuaternion: () => (/* binding */ getQuaternion),\n/* harmony export */   getVector3: () => (/* binding */ getVector3),\n/* harmony export */   getWeights: () => (/* binding */ getWeights),\n/* harmony export */   nodeAnimationData: () => (/* binding */ nodeAnimationData)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Animations/animation.js */ \"@babylonjs/core/Animations/animation.js\");\n/* harmony import */ var _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Maths/math.vector.js */ \"@babylonjs/core/Maths/math.vector.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n/** @internal */\nfunction getVector3(_target, source, offset, scale) {\n    return _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Vector3.FromArray(source, offset).scaleInPlace(scale);\n}\n/** @internal */\nfunction getQuaternion(_target, source, offset, scale) {\n    return _babylonjs_core_Maths_math_vector_js__WEBPACK_IMPORTED_MODULE_1__.Quaternion.FromArray(source, offset).scaleInPlace(scale);\n}\n/** @internal */\nfunction getWeights(target, source, offset, scale) {\n    const value = new Array(target._numMorphTargets);\n    for (let i = 0; i < value.length; i++) {\n        value[i] = source[offset++] * scale;\n    }\n    return value;\n}\n/** @internal */\nclass AnimationPropertyInfo {\n    /** @internal */\n    constructor(type, name, getValue, getStride) {\n        this.type = type;\n        this.name = name;\n        this.getValue = getValue;\n        this.getStride = getStride;\n    }\n    _buildAnimation(name, fps, keys) {\n        const babylonAnimation = new _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation(name, this.name, fps, this.type);\n        babylonAnimation.setKeys(keys);\n        return babylonAnimation;\n    }\n}\n/** @internal */\nclass TransformNodeAnimationPropertyInfo extends AnimationPropertyInfo {\n    /** @internal */\n    buildAnimations(target, name, fps, keys, callback) {\n        callback(target._babylonTransformNode, this._buildAnimation(name, fps, keys));\n    }\n}\n/** @internal */\nclass WeightAnimationPropertyInfo extends AnimationPropertyInfo {\n    buildAnimations(target, name, fps, keys, callback) {\n        if (target._numMorphTargets) {\n            for (let targetIndex = 0; targetIndex < target._numMorphTargets; targetIndex++) {\n                const babylonAnimation = new _babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation(`${name}_${targetIndex}`, this.name, fps, this.type);\n                babylonAnimation.setKeys(keys.map((key) => ({\n                    frame: key.frame,\n                    inTangent: key.inTangent ? key.inTangent[targetIndex] : undefined,\n                    value: key.value[targetIndex],\n                    outTangent: key.outTangent ? key.outTangent[targetIndex] : undefined,\n                    interpolation: key.interpolation,\n                })));\n                if (target._primitiveBabylonMeshes) {\n                    for (const babylonMesh of target._primitiveBabylonMeshes) {\n                        if (babylonMesh.morphTargetManager) {\n                            const morphTarget = babylonMesh.morphTargetManager.getTarget(targetIndex);\n                            const babylonAnimationClone = babylonAnimation.clone();\n                            morphTarget.animations.push(babylonAnimationClone);\n                            callback(morphTarget, babylonAnimationClone);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/** @internal */\nconst nodeAnimationData = {\n    translation: [new TransformNodeAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_VECTOR3, \"position\", getVector3, () => 3)],\n    rotation: [new TransformNodeAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_QUATERNION, \"rotationQuaternion\", getQuaternion, () => 4)],\n    scale: [new TransformNodeAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_VECTOR3, \"scaling\", getVector3, () => 3)],\n    weights: [new WeightAnimationPropertyInfo(_babylonjs_core_Animations_animation_js__WEBPACK_IMPORTED_MODULE_0__.Animation.ANIMATIONTYPE_FLOAT, \"influence\", getWeights, (target) => target._numMorphTargets)],\n};\n//# sourceMappingURL=glTFLoaderAnimation.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL2dsVEZMb2FkZXJBbmltYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW9FO0FBQ087QUFDM0U7QUFDTztBQUNQLFdBQVcseUVBQU87QUFDbEI7QUFDQTtBQUNPO0FBQ1AsV0FBVyw0RUFBVTtBQUNyQjtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyw4RUFBUztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxzQ0FBc0MsdUNBQXVDO0FBQzdFLDZDQUE2Qyw4RUFBUyxJQUFJLEtBQUssR0FBRyxZQUFZO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHlEQUF5RCw4RUFBUztBQUNsRSxzREFBc0QsOEVBQVM7QUFDL0QsbURBQW1ELDhFQUFTO0FBQzVELDhDQUE4Qyw4RUFBUztBQUN2RDtBQUNBLCtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvZ2xURkxvYWRlckFuaW1hdGlvbi5qcz84YTE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFuaW1hdGlvbiB9IGZyb20gXCJAYmFieWxvbmpzL2NvcmUvQW5pbWF0aW9ucy9hbmltYXRpb24uanNcIjtcbmltcG9ydCB7IFF1YXRlcm5pb24sIFZlY3RvcjMgfSBmcm9tIFwiQGJhYnlsb25qcy9jb3JlL01hdGhzL21hdGgudmVjdG9yLmpzXCI7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmVjdG9yMyhfdGFyZ2V0LCBzb3VyY2UsIG9mZnNldCwgc2NhbGUpIHtcbiAgICByZXR1cm4gVmVjdG9yMy5Gcm9tQXJyYXkoc291cmNlLCBvZmZzZXQpLnNjYWxlSW5QbGFjZShzY2FsZSk7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UXVhdGVybmlvbihfdGFyZ2V0LCBzb3VyY2UsIG9mZnNldCwgc2NhbGUpIHtcbiAgICByZXR1cm4gUXVhdGVybmlvbi5Gcm9tQXJyYXkoc291cmNlLCBvZmZzZXQpLnNjYWxlSW5QbGFjZShzY2FsZSk7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0V2VpZ2h0cyh0YXJnZXQsIHNvdXJjZSwgb2Zmc2V0LCBzY2FsZSkge1xuICAgIGNvbnN0IHZhbHVlID0gbmV3IEFycmF5KHRhcmdldC5fbnVtTW9ycGhUYXJnZXRzKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhbHVlW2ldID0gc291cmNlW29mZnNldCsrXSAqIHNjYWxlO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uUHJvcGVydHlJbmZvIHtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgY29uc3RydWN0b3IodHlwZSwgbmFtZSwgZ2V0VmFsdWUsIGdldFN0cmlkZSkge1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmdldFZhbHVlID0gZ2V0VmFsdWU7XG4gICAgICAgIHRoaXMuZ2V0U3RyaWRlID0gZ2V0U3RyaWRlO1xuICAgIH1cbiAgICBfYnVpbGRBbmltYXRpb24obmFtZSwgZnBzLCBrZXlzKSB7XG4gICAgICAgIGNvbnN0IGJhYnlsb25BbmltYXRpb24gPSBuZXcgQW5pbWF0aW9uKG5hbWUsIHRoaXMubmFtZSwgZnBzLCB0aGlzLnR5cGUpO1xuICAgICAgICBiYWJ5bG9uQW5pbWF0aW9uLnNldEtleXMoa2V5cyk7XG4gICAgICAgIHJldHVybiBiYWJ5bG9uQW5pbWF0aW9uO1xuICAgIH1cbn1cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBjbGFzcyBUcmFuc2Zvcm1Ob2RlQW5pbWF0aW9uUHJvcGVydHlJbmZvIGV4dGVuZHMgQW5pbWF0aW9uUHJvcGVydHlJbmZvIHtcbiAgICAvKiogQGludGVybmFsICovXG4gICAgYnVpbGRBbmltYXRpb25zKHRhcmdldCwgbmFtZSwgZnBzLCBrZXlzLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayh0YXJnZXQuX2JhYnlsb25UcmFuc2Zvcm1Ob2RlLCB0aGlzLl9idWlsZEFuaW1hdGlvbihuYW1lLCBmcHMsIGtleXMpKTtcbiAgICB9XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY2xhc3MgV2VpZ2h0QW5pbWF0aW9uUHJvcGVydHlJbmZvIGV4dGVuZHMgQW5pbWF0aW9uUHJvcGVydHlJbmZvIHtcbiAgICBidWlsZEFuaW1hdGlvbnModGFyZ2V0LCBuYW1lLCBmcHMsIGtleXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0YXJnZXQuX251bU1vcnBoVGFyZ2V0cykge1xuICAgICAgICAgICAgZm9yIChsZXQgdGFyZ2V0SW5kZXggPSAwOyB0YXJnZXRJbmRleCA8IHRhcmdldC5fbnVtTW9ycGhUYXJnZXRzOyB0YXJnZXRJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFieWxvbkFuaW1hdGlvbiA9IG5ldyBBbmltYXRpb24oYCR7bmFtZX1fJHt0YXJnZXRJbmRleH1gLCB0aGlzLm5hbWUsIGZwcywgdGhpcy50eXBlKTtcbiAgICAgICAgICAgICAgICBiYWJ5bG9uQW5pbWF0aW9uLnNldEtleXMoa2V5cy5tYXAoKGtleSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgZnJhbWU6IGtleS5mcmFtZSxcbiAgICAgICAgICAgICAgICAgICAgaW5UYW5nZW50OiBrZXkuaW5UYW5nZW50ID8ga2V5LmluVGFuZ2VudFt0YXJnZXRJbmRleF0gOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBrZXkudmFsdWVbdGFyZ2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBvdXRUYW5nZW50OiBrZXkub3V0VGFuZ2VudCA/IGtleS5vdXRUYW5nZW50W3RhcmdldEluZGV4XSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJwb2xhdGlvbjoga2V5LmludGVycG9sYXRpb24sXG4gICAgICAgICAgICAgICAgfSkpKTtcbiAgICAgICAgICAgICAgICBpZiAodGFyZ2V0Ll9wcmltaXRpdmVCYWJ5bG9uTWVzaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYmFieWxvbk1lc2ggb2YgdGFyZ2V0Ll9wcmltaXRpdmVCYWJ5bG9uTWVzaGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmFieWxvbk1lc2gubW9ycGhUYXJnZXRNYW5hZ2VyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbW9ycGhUYXJnZXQgPSBiYWJ5bG9uTWVzaC5tb3JwaFRhcmdldE1hbmFnZXIuZ2V0VGFyZ2V0KHRhcmdldEluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBiYWJ5bG9uQW5pbWF0aW9uQ2xvbmUgPSBiYWJ5bG9uQW5pbWF0aW9uLmNsb25lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9ycGhUYXJnZXQuYW5pbWF0aW9ucy5wdXNoKGJhYnlsb25BbmltYXRpb25DbG9uZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobW9ycGhUYXJnZXQsIGJhYnlsb25BbmltYXRpb25DbG9uZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3Qgbm9kZUFuaW1hdGlvbkRhdGEgPSB7XG4gICAgdHJhbnNsYXRpb246IFtuZXcgVHJhbnNmb3JtTm9kZUFuaW1hdGlvblByb3BlcnR5SW5mbyhBbmltYXRpb24uQU5JTUFUSU9OVFlQRV9WRUNUT1IzLCBcInBvc2l0aW9uXCIsIGdldFZlY3RvcjMsICgpID0+IDMpXSxcbiAgICByb3RhdGlvbjogW25ldyBUcmFuc2Zvcm1Ob2RlQW5pbWF0aW9uUHJvcGVydHlJbmZvKEFuaW1hdGlvbi5BTklNQVRJT05UWVBFX1FVQVRFUk5JT04sIFwicm90YXRpb25RdWF0ZXJuaW9uXCIsIGdldFF1YXRlcm5pb24sICgpID0+IDQpXSxcbiAgICBzY2FsZTogW25ldyBUcmFuc2Zvcm1Ob2RlQW5pbWF0aW9uUHJvcGVydHlJbmZvKEFuaW1hdGlvbi5BTklNQVRJT05UWVBFX1ZFQ1RPUjMsIFwic2NhbGluZ1wiLCBnZXRWZWN0b3IzLCAoKSA9PiAzKV0sXG4gICAgd2VpZ2h0czogW25ldyBXZWlnaHRBbmltYXRpb25Qcm9wZXJ0eUluZm8oQW5pbWF0aW9uLkFOSU1BVElPTlRZUEVfRkxPQVQsIFwiaW5mbHVlbmNlXCIsIGdldFdlaWdodHMsICh0YXJnZXQpID0+IHRhcmdldC5fbnVtTW9ycGhUYXJnZXRzKV0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xURkxvYWRlckFuaW1hdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderAnimation.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderExtension.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderExtension.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=glTFLoaderExtension.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL2dsVEZMb2FkZXJFeHRlbnNpb24uanMiLCJtYXBwaW5ncyI6IjtBQUFVO0FBQ1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9nbFRGTG9hZGVyRXh0ZW5zaW9uLmpzPzdlZWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2xURkxvYWRlckV4dGVuc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderExtension.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderInterfaces.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderInterfaces.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceMappingURL=glTFLoaderInterfaces.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL2dsVEZMb2FkZXJJbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiI7QUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vM2Qtb2ZmaWNlLXZpZXdlci8uL25vZGVfbW9kdWxlcy9AYmFieWxvbmpzL2xvYWRlcnMvZ2xURi8yLjAvZ2xURkxvYWRlckludGVyZmFjZXMuanM/MWQzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbFRGTG9hZGVySW50ZXJmYWNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderInterfaces.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/2.0/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/2.0/index.js ***!
  \***********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoader.js\");\n/* harmony import */ var _glTFLoaderExtension_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glTFLoaderExtension.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderExtension.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoaderExtension_js__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoaderExtension_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./glTFLoaderInterfaces.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/glTFLoaderInterfaces.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoaderInterfaces_js__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _Extensions_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Extensions/index.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/Extensions/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _Extensions_index_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__, _Extensions_index_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFLoader_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Extensions_index_js__WEBPACK_IMPORTED_MODULE_3__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Extensions_index_js__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* eslint-disable import/no-internal-modules */\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvMi4wL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDZ0M7QUFDUztBQUNDO0FBQ0o7QUFDdEMsaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGLzIuMC9pbmRleC5qcz84NDY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGltcG9ydC9uby1pbnRlcm5hbC1tb2R1bGVzICovXG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTG9hZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTG9hZGVyRXh0ZW5zaW9uLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGTG9hZGVySW50ZXJmYWNlcy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vRXh0ZW5zaW9ucy9pbmRleC5qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/2.0/index.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js ***!
  \****************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFFileLoader: () => (/* binding */ GLTFFileLoader),\n/* harmony export */   GLTFLoaderAnimationStartMode: () => (/* binding */ GLTFLoaderAnimationStartMode),\n/* harmony export */   GLTFLoaderCoordinateSystemMode: () => (/* binding */ GLTFLoaderCoordinateSystemMode),\n/* harmony export */   GLTFLoaderState: () => (/* binding */ GLTFLoaderState)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Misc/observable.js */ \"@babylonjs/core/Misc/observable.js\");\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\n/* harmony import */ var _babylonjs_core_Loading_sceneLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babylonjs/core/Loading/sceneLoader.js */ \"@babylonjs/core/Loading/sceneLoader.js\");\n/* harmony import */ var _babylonjs_core_assetContainer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babylonjs/core/assetContainer.js */ \"@babylonjs/core/assetContainer.js\");\n/* harmony import */ var _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babylonjs/core/Misc/logger.js */ \"@babylonjs/core/Misc/logger.js\");\n/* harmony import */ var _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babylonjs/core/Misc/dataReader.js */ \"@babylonjs/core/Misc/dataReader.js\");\n/* harmony import */ var _glTFValidation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./glTFValidation.js */ \"./node_modules/@babylonjs/loaders/glTF/glTFValidation.js\");\n/* harmony import */ var _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babylonjs/core/Misc/fileTools.js */ \"@babylonjs/core/Misc/fileTools.js\");\n/* harmony import */ var _babylonjs_core_Misc_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @babylonjs/core/Misc/error.js */ \"@babylonjs/core/Misc/error.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Loading_sceneLoader_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_assetContainer_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__, _glTFValidation_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Misc_error_js__WEBPACK_IMPORTED_MODULE_8__]);\n([_babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__, _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__, _babylonjs_core_Loading_sceneLoader_js__WEBPACK_IMPORTED_MODULE_2__, _babylonjs_core_assetContainer_js__WEBPACK_IMPORTED_MODULE_3__, _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__, _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__, _glTFValidation_js__WEBPACK_IMPORTED_MODULE_6__, _babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_7__, _babylonjs_core_Misc_error_js__WEBPACK_IMPORTED_MODULE_8__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\nfunction readAsync(arrayBuffer, byteOffset, byteLength) {\n    try {\n        return Promise.resolve(new Uint8Array(arrayBuffer, byteOffset, byteLength));\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n}\nfunction readViewAsync(arrayBufferView, byteOffset, byteLength) {\n    try {\n        if (byteOffset < 0 || byteOffset >= arrayBufferView.byteLength) {\n            throw new RangeError(\"Offset is out of range.\");\n        }\n        if (byteOffset + byteLength > arrayBufferView.byteLength) {\n            throw new RangeError(\"Length is out of range.\");\n        }\n        return Promise.resolve(new Uint8Array(arrayBufferView.buffer, arrayBufferView.byteOffset + byteOffset, byteLength));\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n}\n/**\n * Mode that determines the coordinate system to use.\n */\nvar GLTFLoaderCoordinateSystemMode;\n(function (GLTFLoaderCoordinateSystemMode) {\n    /**\n     * Automatically convert the glTF right-handed data to the appropriate system based on the current coordinate system mode of the scene.\n     */\n    GLTFLoaderCoordinateSystemMode[GLTFLoaderCoordinateSystemMode[\"AUTO\"] = 0] = \"AUTO\";\n    /**\n     * Sets the useRightHandedSystem flag on the scene.\n     */\n    GLTFLoaderCoordinateSystemMode[GLTFLoaderCoordinateSystemMode[\"FORCE_RIGHT_HANDED\"] = 1] = \"FORCE_RIGHT_HANDED\";\n})(GLTFLoaderCoordinateSystemMode || (GLTFLoaderCoordinateSystemMode = {}));\n/**\n * Mode that determines what animations will start.\n */\nvar GLTFLoaderAnimationStartMode;\n(function (GLTFLoaderAnimationStartMode) {\n    /**\n     * No animation will start.\n     */\n    GLTFLoaderAnimationStartMode[GLTFLoaderAnimationStartMode[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * The first animation will start.\n     */\n    GLTFLoaderAnimationStartMode[GLTFLoaderAnimationStartMode[\"FIRST\"] = 1] = \"FIRST\";\n    /**\n     * All animations will start.\n     */\n    GLTFLoaderAnimationStartMode[GLTFLoaderAnimationStartMode[\"ALL\"] = 2] = \"ALL\";\n})(GLTFLoaderAnimationStartMode || (GLTFLoaderAnimationStartMode = {}));\n/**\n * Loader state.\n */\nvar GLTFLoaderState;\n(function (GLTFLoaderState) {\n    /**\n     * The asset is loading.\n     */\n    GLTFLoaderState[GLTFLoaderState[\"LOADING\"] = 0] = \"LOADING\";\n    /**\n     * The asset is ready for rendering.\n     */\n    GLTFLoaderState[GLTFLoaderState[\"READY\"] = 1] = \"READY\";\n    /**\n     * The asset is completely loaded.\n     */\n    GLTFLoaderState[GLTFLoaderState[\"COMPLETE\"] = 2] = \"COMPLETE\";\n})(GLTFLoaderState || (GLTFLoaderState = {}));\n/**\n * File loader for loading glTF files into a scene.\n */\nclass GLTFFileLoader {\n    constructor() {\n        // --------------\n        // Common options\n        // --------------\n        /**\n         * Raised when the asset has been parsed\n         */\n        this.onParsedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        // ----------\n        // V2 options\n        // ----------\n        /**\n         * The coordinate system mode. Defaults to AUTO.\n         */\n        this.coordinateSystemMode = GLTFLoaderCoordinateSystemMode.AUTO;\n        /**\n         * The animation start mode. Defaults to FIRST.\n         */\n        this.animationStartMode = GLTFLoaderAnimationStartMode.FIRST;\n        /**\n         * Defines if the loader should compile materials before raising the success callback. Defaults to false.\n         */\n        this.compileMaterials = false;\n        /**\n         * Defines if the loader should also compile materials with clip planes. Defaults to false.\n         */\n        this.useClipPlane = false;\n        /**\n         * Defines if the loader should compile shadow generators before raising the success callback. Defaults to false.\n         */\n        this.compileShadowGenerators = false;\n        /**\n         * Defines if the Alpha blended materials are only applied as coverage.\n         * If false, (default) The luminance of each pixel will reduce its opacity to simulate the behaviour of most physical materials.\n         * If true, no extra effects are applied to transparent pixels.\n         */\n        this.transparencyAsCoverage = false;\n        /**\n         * Defines if the loader should use range requests when load binary glTF files from HTTP.\n         * Enabling will disable offline support and glTF validator.\n         * Defaults to false.\n         */\n        this.useRangeRequests = false;\n        /**\n         * Defines if the loader should create instances when multiple glTF nodes point to the same glTF mesh. Defaults to true.\n         */\n        this.createInstances = true;\n        /**\n         * Defines if the loader should always compute the bounding boxes of meshes and not use the min/max values from the position accessor. Defaults to false.\n         */\n        this.alwaysComputeBoundingBox = false;\n        /**\n         * If true, load all materials defined in the file, even if not used by any mesh. Defaults to false.\n         */\n        this.loadAllMaterials = false;\n        /**\n         * If true, load only the materials defined in the file. Defaults to false.\n         */\n        this.loadOnlyMaterials = false;\n        /**\n         * If true, do not load any materials defined in the file. Defaults to false.\n         */\n        this.skipMaterials = false;\n        /**\n         * If true, load the color (gamma encoded) textures into sRGB buffers (if supported by the GPU), which will yield more accurate results when sampling the texture. Defaults to true.\n         */\n        this.useSRGBBuffers = true;\n        /**\n         * When loading glTF animations, which are defined in seconds, target them to this FPS. Defaults to 60.\n         */\n        this.targetFps = 60;\n        /**\n         * Defines if the loader should always compute the nearest common ancestor of the skeleton joints instead of using `skin.skeleton`. Defaults to false.\n         * Set this to true if loading assets with invalid `skin.skeleton` values.\n         */\n        this.alwaysComputeSkeletonRootNode = false;\n        /**\n         * Function called before loading a url referenced by the asset.\n         * @param url url referenced by the asset\n         * @returns Async url to load\n         */\n        this.preprocessUrlAsync = (url) => Promise.resolve(url);\n        /**\n         * Observable raised when the loader creates a mesh after parsing the glTF properties of the mesh.\n         * Note that the observable is raised as soon as the mesh object is created, meaning some data may not have been setup yet for this mesh (vertex data, morph targets, material, ...)\n         */\n        this.onMeshLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Callback raised when the loader creates a skin after parsing the glTF properties of the skin node.\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/importers/glTF/glTFSkinning#ignoring-the-transform-of-the-skinned-mesh\n         * @param node - the transform node that corresponds to the original glTF skin node used for animations\n         * @param skinnedNode - the transform node that is the skinned mesh itself or the parent of the skinned meshes\n         */\n        this.onSkinLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when the loader creates a texture after parsing the glTF properties of the texture.\n         */\n        this.onTextureLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when the loader creates a material after parsing the glTF properties of the material.\n         */\n        this.onMaterialLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when the loader creates a camera after parsing the glTF properties of the camera.\n         */\n        this.onCameraLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when the asset is completely loaded, immediately before the loader is disposed.\n         * For assets with LODs, raised when all of the LODs are complete.\n         * For assets without LODs, raised when the model is complete, immediately after the loader resolves the returned promise.\n         */\n        this.onCompleteObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised when an error occurs.\n         */\n        this.onErrorObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised after the loader is disposed.\n         */\n        this.onDisposeObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Observable raised after a loader extension is created.\n         * Set additional options for a loader extension in this event.\n         */\n        this.onExtensionLoadedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        /**\n         * Defines if the loader should validate the asset.\n         */\n        this.validate = false;\n        /**\n         * Observable raised after validation when validate is set to true. The event data is the result of the validation.\n         */\n        this.onValidatedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        this._loader = null;\n        this._state = null;\n        this._requests = new Array();\n        /**\n         * Name of the loader (\"gltf\")\n         */\n        this.name = \"gltf\";\n        /** @internal */\n        this.extensions = {\n            \".gltf\": { isBinary: false },\n            \".glb\": { isBinary: true },\n        };\n        /**\n         * Observable raised when the loader state changes.\n         */\n        this.onLoaderStateChangedObservable = new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable();\n        this._logIndentLevel = 0;\n        this._loggingEnabled = false;\n        /** @internal */\n        this._log = this._logDisabled;\n        this._capturePerformanceCounters = false;\n        /** @internal */\n        this._startPerformanceCounter = this._startPerformanceCounterDisabled;\n        /** @internal */\n        this._endPerformanceCounter = this._endPerformanceCounterDisabled;\n    }\n    /**\n     * Raised when the asset has been parsed\n     */\n    set onParsed(callback) {\n        if (this._onParsedObserver) {\n            this.onParsedObservable.remove(this._onParsedObserver);\n        }\n        this._onParsedObserver = this.onParsedObservable.add(callback);\n    }\n    /**\n     * Callback raised when the loader creates a mesh after parsing the glTF properties of the mesh.\n     * Note that the callback is called as soon as the mesh object is created, meaning some data may not have been setup yet for this mesh (vertex data, morph targets, material, ...)\n     */\n    set onMeshLoaded(callback) {\n        if (this._onMeshLoadedObserver) {\n            this.onMeshLoadedObservable.remove(this._onMeshLoadedObserver);\n        }\n        this._onMeshLoadedObserver = this.onMeshLoadedObservable.add(callback);\n    }\n    /**\n     * Callback raised when the loader creates a texture after parsing the glTF properties of the texture.\n     */\n    set onTextureLoaded(callback) {\n        if (this._onTextureLoadedObserver) {\n            this.onTextureLoadedObservable.remove(this._onTextureLoadedObserver);\n        }\n        this._onTextureLoadedObserver = this.onTextureLoadedObservable.add(callback);\n    }\n    /**\n     * Callback raised when the loader creates a material after parsing the glTF properties of the material.\n     */\n    set onMaterialLoaded(callback) {\n        if (this._onMaterialLoadedObserver) {\n            this.onMaterialLoadedObservable.remove(this._onMaterialLoadedObserver);\n        }\n        this._onMaterialLoadedObserver = this.onMaterialLoadedObservable.add(callback);\n    }\n    /**\n     * Callback raised when the loader creates a camera after parsing the glTF properties of the camera.\n     */\n    set onCameraLoaded(callback) {\n        if (this._onCameraLoadedObserver) {\n            this.onCameraLoadedObservable.remove(this._onCameraLoadedObserver);\n        }\n        this._onCameraLoadedObserver = this.onCameraLoadedObservable.add(callback);\n    }\n    /**\n     * Callback raised when the asset is completely loaded, immediately before the loader is disposed.\n     * For assets with LODs, raised when all of the LODs are complete.\n     * For assets without LODs, raised when the model is complete, immediately after the loader resolves the returned promise.\n     */\n    set onComplete(callback) {\n        if (this._onCompleteObserver) {\n            this.onCompleteObservable.remove(this._onCompleteObserver);\n        }\n        this._onCompleteObserver = this.onCompleteObservable.add(callback);\n    }\n    /**\n     * Callback raised when an error occurs.\n     */\n    set onError(callback) {\n        if (this._onErrorObserver) {\n            this.onErrorObservable.remove(this._onErrorObserver);\n        }\n        this._onErrorObserver = this.onErrorObservable.add(callback);\n    }\n    /**\n     * Callback raised after the loader is disposed.\n     */\n    set onDispose(callback) {\n        if (this._onDisposeObserver) {\n            this.onDisposeObservable.remove(this._onDisposeObserver);\n        }\n        this._onDisposeObserver = this.onDisposeObservable.add(callback);\n    }\n    /**\n     * Callback raised after a loader extension is created.\n     */\n    set onExtensionLoaded(callback) {\n        if (this._onExtensionLoadedObserver) {\n            this.onExtensionLoadedObservable.remove(this._onExtensionLoadedObserver);\n        }\n        this._onExtensionLoadedObserver = this.onExtensionLoadedObservable.add(callback);\n    }\n    /**\n     * Defines if the loader logging is enabled.\n     */\n    get loggingEnabled() {\n        return this._loggingEnabled;\n    }\n    set loggingEnabled(value) {\n        if (this._loggingEnabled === value) {\n            return;\n        }\n        this._loggingEnabled = value;\n        if (this._loggingEnabled) {\n            this._log = this._logEnabled;\n        }\n        else {\n            this._log = this._logDisabled;\n        }\n    }\n    /**\n     * Defines if the loader should capture performance counters.\n     */\n    get capturePerformanceCounters() {\n        return this._capturePerformanceCounters;\n    }\n    set capturePerformanceCounters(value) {\n        if (this._capturePerformanceCounters === value) {\n            return;\n        }\n        this._capturePerformanceCounters = value;\n        if (this._capturePerformanceCounters) {\n            this._startPerformanceCounter = this._startPerformanceCounterEnabled;\n            this._endPerformanceCounter = this._endPerformanceCounterEnabled;\n        }\n        else {\n            this._startPerformanceCounter = this._startPerformanceCounterDisabled;\n            this._endPerformanceCounter = this._endPerformanceCounterDisabled;\n        }\n    }\n    /**\n     * Callback raised after a loader extension is created.\n     */\n    set onValidated(callback) {\n        if (this._onValidatedObserver) {\n            this.onValidatedObservable.remove(this._onValidatedObserver);\n        }\n        this._onValidatedObserver = this.onValidatedObservable.add(callback);\n    }\n    /**\n     * Disposes the loader, releases resources during load, and cancels any outstanding requests.\n     */\n    dispose() {\n        if (this._loader) {\n            this._loader.dispose();\n            this._loader = null;\n        }\n        for (const request of this._requests) {\n            request.abort();\n        }\n        this._requests.length = 0;\n        delete this._progressCallback;\n        this.preprocessUrlAsync = (url) => Promise.resolve(url);\n        this.onMeshLoadedObservable.clear();\n        this.onSkinLoadedObservable.clear();\n        this.onTextureLoadedObservable.clear();\n        this.onMaterialLoadedObservable.clear();\n        this.onCameraLoadedObservable.clear();\n        this.onCompleteObservable.clear();\n        this.onExtensionLoadedObservable.clear();\n        this.onDisposeObservable.notifyObservers(undefined);\n        this.onDisposeObservable.clear();\n    }\n    /**\n     * @internal\n     */\n    loadFile(scene, fileOrUrl, rootUrl, onSuccess, onProgress, useArrayBuffer, onError, name) {\n        if (ArrayBuffer.isView(fileOrUrl)) {\n            this._loadBinary(scene, fileOrUrl, rootUrl, onSuccess, onError, name);\n            return null;\n        }\n        this._progressCallback = onProgress;\n        const fileName = fileOrUrl.name || _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.GetFilename(fileOrUrl);\n        if (useArrayBuffer) {\n            if (this.useRangeRequests) {\n                if (this.validate) {\n                    _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__.Logger.Warn(\"glTF validation is not supported when range requests are enabled\");\n                }\n                const fileRequest = {\n                    abort: () => { },\n                    onCompleteObservable: new _babylonjs_core_Misc_observable_js__WEBPACK_IMPORTED_MODULE_0__.Observable(),\n                };\n                const dataBuffer = {\n                    readAsync: (byteOffset, byteLength) => {\n                        return new Promise((resolve, reject) => {\n                            this._loadFile(scene, fileOrUrl, (data) => {\n                                resolve(new Uint8Array(data));\n                            }, true, (error) => {\n                                reject(error);\n                            }, (webRequest) => {\n                                webRequest.setRequestHeader(\"Range\", `bytes=${byteOffset}-${byteOffset + byteLength - 1}`);\n                            });\n                        });\n                    },\n                    byteLength: 0,\n                };\n                this._unpackBinaryAsync(new _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__.DataReader(dataBuffer)).then((loaderData) => {\n                    fileRequest.onCompleteObservable.notifyObservers(fileRequest);\n                    onSuccess(loaderData);\n                }, onError ? (error) => onError(undefined, error) : undefined);\n                return fileRequest;\n            }\n            return this._loadFile(scene, fileOrUrl, (data) => {\n                this._validate(scene, new Uint8Array(data, 0, data.byteLength), rootUrl, fileName);\n                this._unpackBinaryAsync(new _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__.DataReader({\n                    readAsync: (byteOffset, byteLength) => readAsync(data, byteOffset, byteLength),\n                    byteLength: data.byteLength,\n                })).then((loaderData) => {\n                    onSuccess(loaderData);\n                }, onError ? (error) => onError(undefined, error) : undefined);\n            }, true, onError);\n        }\n        else {\n            return this._loadFile(scene, fileOrUrl, (data) => {\n                this._validate(scene, data, rootUrl, fileName);\n                onSuccess({ json: this._parseJson(data) });\n            }, false, onError);\n        }\n    }\n    _loadBinary(scene, data, rootUrl, onSuccess, onError, fileName) {\n        this._validate(scene, new Uint8Array(data.buffer, data.byteOffset, data.byteLength), rootUrl, fileName);\n        this._unpackBinaryAsync(new _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__.DataReader({\n            readAsync: (byteOffset, byteLength) => readViewAsync(data, byteOffset, byteLength),\n            byteLength: data.byteLength,\n        })).then((loaderData) => {\n            onSuccess(loaderData);\n        }, onError ? (error) => onError(undefined, error) : undefined);\n    }\n    /**\n     * @internal\n     */\n    importMeshAsync(meshesNames, scene, data, rootUrl, onProgress, fileName) {\n        return Promise.resolve().then(() => {\n            this.onParsedObservable.notifyObservers(data);\n            this.onParsedObservable.clear();\n            this._log(`Loading ${fileName || \"\"}`);\n            this._loader = this._getLoader(data);\n            return this._loader.importMeshAsync(meshesNames, scene, null, data, rootUrl, onProgress, fileName);\n        });\n    }\n    /**\n     * @internal\n     */\n    loadAsync(scene, data, rootUrl, onProgress, fileName) {\n        return Promise.resolve().then(() => {\n            this.onParsedObservable.notifyObservers(data);\n            this.onParsedObservable.clear();\n            this._log(`Loading ${fileName || \"\"}`);\n            this._loader = this._getLoader(data);\n            return this._loader.loadAsync(scene, data, rootUrl, onProgress, fileName);\n        });\n    }\n    /**\n     * @internal\n     */\n    loadAssetContainerAsync(scene, data, rootUrl, onProgress, fileName) {\n        return Promise.resolve().then(() => {\n            this.onParsedObservable.notifyObservers(data);\n            this.onParsedObservable.clear();\n            this._log(`Loading ${fileName || \"\"}`);\n            this._loader = this._getLoader(data);\n            // Prepare the asset container.\n            const container = new _babylonjs_core_assetContainer_js__WEBPACK_IMPORTED_MODULE_3__.AssetContainer(scene);\n            // Get materials/textures when loading to add to container\n            const materials = [];\n            this.onMaterialLoadedObservable.add((material) => {\n                materials.push(material);\n            });\n            const textures = [];\n            this.onTextureLoadedObservable.add((texture) => {\n                textures.push(texture);\n            });\n            const cameras = [];\n            this.onCameraLoadedObservable.add((camera) => {\n                cameras.push(camera);\n            });\n            const morphTargetManagers = [];\n            this.onMeshLoadedObservable.add((mesh) => {\n                if (mesh.morphTargetManager) {\n                    morphTargetManagers.push(mesh.morphTargetManager);\n                }\n            });\n            return this._loader.importMeshAsync(null, scene, container, data, rootUrl, onProgress, fileName).then((result) => {\n                Array.prototype.push.apply(container.geometries, result.geometries);\n                Array.prototype.push.apply(container.meshes, result.meshes);\n                Array.prototype.push.apply(container.particleSystems, result.particleSystems);\n                Array.prototype.push.apply(container.skeletons, result.skeletons);\n                Array.prototype.push.apply(container.animationGroups, result.animationGroups);\n                Array.prototype.push.apply(container.materials, materials);\n                Array.prototype.push.apply(container.textures, textures);\n                Array.prototype.push.apply(container.lights, result.lights);\n                Array.prototype.push.apply(container.transformNodes, result.transformNodes);\n                Array.prototype.push.apply(container.cameras, cameras);\n                Array.prototype.push.apply(container.morphTargetManagers, morphTargetManagers);\n                return container;\n            });\n        });\n    }\n    /**\n     * @internal\n     */\n    canDirectLoad(data) {\n        return ((data.indexOf(\"asset\") !== -1 && data.indexOf(\"version\") !== -1) ||\n            data.startsWith(\"data:base64,\" + GLTFFileLoader._MagicBase64Encoded) || // this is technically incorrect, but will continue to support for backcompat.\n            data.startsWith(\"data:;base64,\" + GLTFFileLoader._MagicBase64Encoded) ||\n            data.startsWith(\"data:application/octet-stream;base64,\" + GLTFFileLoader._MagicBase64Encoded) ||\n            data.startsWith(\"data:model/gltf-binary;base64,\" + GLTFFileLoader._MagicBase64Encoded));\n    }\n    /**\n     * @internal\n     */\n    directLoad(scene, data) {\n        if (data.startsWith(\"base64,\" + GLTFFileLoader._MagicBase64Encoded) || // this is technically incorrect, but will continue to support for backcompat.\n            data.startsWith(\";base64,\" + GLTFFileLoader._MagicBase64Encoded) ||\n            data.startsWith(\"application/octet-stream;base64,\" + GLTFFileLoader._MagicBase64Encoded) ||\n            data.startsWith(\"model/gltf-binary;base64,\" + GLTFFileLoader._MagicBase64Encoded)) {\n            const arrayBuffer = (0,_babylonjs_core_Misc_fileTools_js__WEBPACK_IMPORTED_MODULE_7__.DecodeBase64UrlToBinary)(data);\n            this._validate(scene, new Uint8Array(arrayBuffer, 0, arrayBuffer.byteLength));\n            return this._unpackBinaryAsync(new _babylonjs_core_Misc_dataReader_js__WEBPACK_IMPORTED_MODULE_5__.DataReader({\n                readAsync: (byteOffset, byteLength) => readAsync(arrayBuffer, byteOffset, byteLength),\n                byteLength: arrayBuffer.byteLength,\n            }));\n        }\n        this._validate(scene, data);\n        return Promise.resolve({ json: this._parseJson(data) });\n    }\n    /** @internal */\n    createPlugin() {\n        return new GLTFFileLoader();\n    }\n    /**\n     * The loader state or null if the loader is not active.\n     */\n    get loaderState() {\n        return this._state;\n    }\n    /**\n     * Returns a promise that resolves when the asset is completely loaded.\n     * @returns a promise that resolves when the asset is completely loaded.\n     */\n    whenCompleteAsync() {\n        return new Promise((resolve, reject) => {\n            this.onCompleteObservable.addOnce(() => {\n                resolve();\n            });\n            this.onErrorObservable.addOnce((reason) => {\n                reject(reason);\n            });\n        });\n    }\n    /**\n     * @internal\n     */\n    _setState(state) {\n        if (this._state === state) {\n            return;\n        }\n        this._state = state;\n        this.onLoaderStateChangedObservable.notifyObservers(this._state);\n        this._log(GLTFLoaderState[this._state]);\n    }\n    /**\n     * @internal\n     */\n    _loadFile(scene, fileOrUrl, onSuccess, useArrayBuffer, onError, onOpened) {\n        const request = scene._loadFile(fileOrUrl, onSuccess, (event) => {\n            this._onProgress(event, request);\n        }, true, useArrayBuffer, onError, onOpened);\n        request.onCompleteObservable.add((request) => {\n            this._requests.splice(this._requests.indexOf(request), 1);\n        });\n        this._requests.push(request);\n        return request;\n    }\n    _onProgress(event, request) {\n        if (!this._progressCallback) {\n            return;\n        }\n        request._lengthComputable = event.lengthComputable;\n        request._loaded = event.loaded;\n        request._total = event.total;\n        let lengthComputable = true;\n        let loaded = 0;\n        let total = 0;\n        for (const request of this._requests) {\n            if (request._lengthComputable === undefined || request._loaded === undefined || request._total === undefined) {\n                return;\n            }\n            lengthComputable = lengthComputable && request._lengthComputable;\n            loaded += request._loaded;\n            total += request._total;\n        }\n        this._progressCallback({\n            lengthComputable: lengthComputable,\n            loaded: loaded,\n            total: lengthComputable ? total : 0,\n        });\n    }\n    _validate(scene, data, rootUrl = \"\", fileName = \"\") {\n        if (!this.validate) {\n            return;\n        }\n        this._startPerformanceCounter(\"Validate JSON\");\n        _glTFValidation_js__WEBPACK_IMPORTED_MODULE_6__.GLTFValidation.ValidateAsync(data, rootUrl, fileName, (uri) => {\n            return this.preprocessUrlAsync(rootUrl + uri).then((url) => {\n                return scene._loadFileAsync(url, undefined, true, true).then((data) => {\n                    return new Uint8Array(data, 0, data.byteLength);\n                });\n            });\n        }).then((result) => {\n            this._endPerformanceCounter(\"Validate JSON\");\n            this.onValidatedObservable.notifyObservers(result);\n            this.onValidatedObservable.clear();\n        }, (reason) => {\n            this._endPerformanceCounter(\"Validate JSON\");\n            _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.Warn(`Failed to validate: ${reason.message}`);\n            this.onValidatedObservable.clear();\n        });\n    }\n    _getLoader(loaderData) {\n        const asset = loaderData.json.asset || {};\n        this._log(`Asset version: ${asset.version}`);\n        asset.minVersion && this._log(`Asset minimum version: ${asset.minVersion}`);\n        asset.generator && this._log(`Asset generator: ${asset.generator}`);\n        const version = GLTFFileLoader._parseVersion(asset.version);\n        if (!version) {\n            throw new Error(\"Invalid version: \" + asset.version);\n        }\n        if (asset.minVersion !== undefined) {\n            const minVersion = GLTFFileLoader._parseVersion(asset.minVersion);\n            if (!minVersion) {\n                throw new Error(\"Invalid minimum version: \" + asset.minVersion);\n            }\n            if (GLTFFileLoader._compareVersion(minVersion, { major: 2, minor: 0 }) > 0) {\n                throw new Error(\"Incompatible minimum version: \" + asset.minVersion);\n            }\n        }\n        const createLoaders = {\n            1: GLTFFileLoader._CreateGLTF1Loader,\n            2: GLTFFileLoader._CreateGLTF2Loader,\n        };\n        const createLoader = createLoaders[version.major];\n        if (!createLoader) {\n            throw new Error(\"Unsupported version: \" + asset.version);\n        }\n        return createLoader(this);\n    }\n    _parseJson(json) {\n        this._startPerformanceCounter(\"Parse JSON\");\n        this._log(`JSON length: ${json.length}`);\n        const parsed = JSON.parse(json);\n        this._endPerformanceCounter(\"Parse JSON\");\n        return parsed;\n    }\n    _unpackBinaryAsync(dataReader) {\n        this._startPerformanceCounter(\"Unpack Binary\");\n        // Read magic + version + length + json length + json format\n        return dataReader.loadAsync(20).then(() => {\n            const Binary = {\n                Magic: 0x46546c67,\n            };\n            const magic = dataReader.readUint32();\n            if (magic !== Binary.Magic) {\n                throw new _babylonjs_core_Misc_error_js__WEBPACK_IMPORTED_MODULE_8__.RuntimeError(\"Unexpected magic: \" + magic, _babylonjs_core_Misc_error_js__WEBPACK_IMPORTED_MODULE_8__.ErrorCodes.GLTFLoaderUnexpectedMagicError);\n            }\n            const version = dataReader.readUint32();\n            if (this.loggingEnabled) {\n                this._log(`Binary version: ${version}`);\n            }\n            const length = dataReader.readUint32();\n            if (!this.useRangeRequests && length !== dataReader.buffer.byteLength) {\n                _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__.Logger.Warn(`Length in header does not match actual data length: ${length} != ${dataReader.buffer.byteLength}`);\n            }\n            let unpacked;\n            switch (version) {\n                case 1: {\n                    unpacked = this._unpackBinaryV1Async(dataReader, length);\n                    break;\n                }\n                case 2: {\n                    unpacked = this._unpackBinaryV2Async(dataReader, length);\n                    break;\n                }\n                default: {\n                    throw new Error(\"Unsupported version: \" + version);\n                }\n            }\n            this._endPerformanceCounter(\"Unpack Binary\");\n            return unpacked;\n        });\n    }\n    _unpackBinaryV1Async(dataReader, length) {\n        const ContentFormat = {\n            JSON: 0,\n        };\n        const contentLength = dataReader.readUint32();\n        const contentFormat = dataReader.readUint32();\n        if (contentFormat !== ContentFormat.JSON) {\n            throw new Error(`Unexpected content format: ${contentFormat}`);\n        }\n        const bodyLength = length - dataReader.byteOffset;\n        const data = { json: this._parseJson(dataReader.readString(contentLength)), bin: null };\n        if (bodyLength !== 0) {\n            const startByteOffset = dataReader.byteOffset;\n            data.bin = {\n                readAsync: (byteOffset, byteLength) => dataReader.buffer.readAsync(startByteOffset + byteOffset, byteLength),\n                byteLength: bodyLength,\n            };\n        }\n        return Promise.resolve(data);\n    }\n    _unpackBinaryV2Async(dataReader, length) {\n        const ChunkFormat = {\n            JSON: 0x4e4f534a,\n            BIN: 0x004e4942,\n        };\n        // Read the JSON chunk header.\n        const chunkLength = dataReader.readUint32();\n        const chunkFormat = dataReader.readUint32();\n        if (chunkFormat !== ChunkFormat.JSON) {\n            throw new Error(\"First chunk format is not JSON\");\n        }\n        // Bail if there are no other chunks.\n        if (dataReader.byteOffset + chunkLength === length) {\n            return dataReader.loadAsync(chunkLength).then(() => {\n                return { json: this._parseJson(dataReader.readString(chunkLength)), bin: null };\n            });\n        }\n        // Read the JSON chunk and the length and type of the next chunk.\n        return dataReader.loadAsync(chunkLength + 8).then(() => {\n            const data = { json: this._parseJson(dataReader.readString(chunkLength)), bin: null };\n            const readAsync = () => {\n                const chunkLength = dataReader.readUint32();\n                const chunkFormat = dataReader.readUint32();\n                switch (chunkFormat) {\n                    case ChunkFormat.JSON: {\n                        throw new Error(\"Unexpected JSON chunk\");\n                    }\n                    case ChunkFormat.BIN: {\n                        const startByteOffset = dataReader.byteOffset;\n                        data.bin = {\n                            readAsync: (byteOffset, byteLength) => dataReader.buffer.readAsync(startByteOffset + byteOffset, byteLength),\n                            byteLength: chunkLength,\n                        };\n                        dataReader.skipBytes(chunkLength);\n                        break;\n                    }\n                    default: {\n                        // ignore unrecognized chunkFormat\n                        dataReader.skipBytes(chunkLength);\n                        break;\n                    }\n                }\n                if (dataReader.byteOffset !== length) {\n                    return dataReader.loadAsync(8).then(readAsync);\n                }\n                return Promise.resolve(data);\n            };\n            return readAsync();\n        });\n    }\n    static _parseVersion(version) {\n        if (version === \"1.0\" || version === \"1.0.1\") {\n            return {\n                major: 1,\n                minor: 0,\n            };\n        }\n        const match = (version + \"\").match(/^(\\d+)\\.(\\d+)/);\n        if (!match) {\n            return null;\n        }\n        return {\n            major: parseInt(match[1]),\n            minor: parseInt(match[2]),\n        };\n    }\n    static _compareVersion(a, b) {\n        if (a.major > b.major) {\n            return 1;\n        }\n        if (a.major < b.major) {\n            return -1;\n        }\n        if (a.minor > b.minor) {\n            return 1;\n        }\n        if (a.minor < b.minor) {\n            return -1;\n        }\n        return 0;\n    }\n    /**\n     * @internal\n     */\n    _logOpen(message) {\n        this._log(message);\n        this._logIndentLevel++;\n    }\n    /** @internal */\n    _logClose() {\n        --this._logIndentLevel;\n    }\n    _logEnabled(message) {\n        const spaces = GLTFFileLoader._logSpaces.substr(0, this._logIndentLevel * 2);\n        _babylonjs_core_Misc_logger_js__WEBPACK_IMPORTED_MODULE_4__.Logger.Log(`${spaces}${message}`);\n    }\n    _logDisabled(message) { }\n    _startPerformanceCounterEnabled(counterName) {\n        _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.StartPerformanceCounter(counterName);\n    }\n    _startPerformanceCounterDisabled(counterName) { }\n    _endPerformanceCounterEnabled(counterName) {\n        _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_1__.Tools.EndPerformanceCounter(counterName);\n    }\n    _endPerformanceCounterDisabled(counterName) { }\n}\n// ----------\n// V1 options\n// ----------\n/**\n * Set this property to false to disable incremental loading which delays the loader from calling the success callback until after loading the meshes and shaders.\n * Textures always loads asynchronously. For example, the success callback can compute the bounding information of the loaded meshes when incremental loading is disabled.\n * Defaults to true.\n * @internal\n */\nGLTFFileLoader.IncrementalLoading = true;\n/**\n * Set this property to true in order to work with homogeneous coordinates, available with some converters and exporters.\n * Defaults to false. See https://en.wikipedia.org/wiki/Homogeneous_coordinates.\n * @internal\n */\nGLTFFileLoader.HomogeneousCoordinates = false;\nGLTFFileLoader._MagicBase64Encoded = \"Z2xURg\"; // \"glTF\" base64 encoded (without the quotes!)\nGLTFFileLoader._logSpaces = \"                                \";\nif (_babylonjs_core_Loading_sceneLoader_js__WEBPACK_IMPORTED_MODULE_2__.SceneLoader) {\n    _babylonjs_core_Loading_sceneLoader_js__WEBPACK_IMPORTED_MODULE_2__.SceneLoader.RegisterPlugin(new GLTFFileLoader());\n}\n//# sourceMappingURL=glTFFileLoader.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/glTFValidation.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/glTFValidation.js ***!
  \****************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTFValidation: () => (/* binding */ GLTFValidation)\n/* harmony export */ });\n/* harmony import */ var _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babylonjs/core/Misc/tools.js */ \"@babylonjs/core/Misc/tools.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__]);\n_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nfunction validateAsync(data, rootUrl, fileName, getExternalResource) {\n    const options = {\n        externalResourceFunction: getExternalResource,\n    };\n    if (fileName) {\n        options.uri = rootUrl === \"file:\" ? fileName : rootUrl + fileName;\n    }\n    return ArrayBuffer.isView(data) ? GLTFValidator.validateBytes(data, options) : GLTFValidator.validateString(data, options);\n}\n/**\n * The worker function that gets converted to a blob url to pass into a worker.\n */\nfunction workerFunc() {\n    const pendingExternalResources = [];\n    onmessage = (message) => {\n        const data = message.data;\n        switch (data.id) {\n            case \"init\": {\n                importScripts(data.url);\n                break;\n            }\n            case \"validate\": {\n                validateAsync(data.data, data.rootUrl, data.fileName, (uri) => new Promise((resolve, reject) => {\n                    const index = pendingExternalResources.length;\n                    pendingExternalResources.push({ resolve, reject });\n                    postMessage({ id: \"getExternalResource\", index: index, uri: uri });\n                })).then((value) => {\n                    postMessage({ id: \"validate.resolve\", value: value });\n                }, (reason) => {\n                    postMessage({ id: \"validate.reject\", reason: reason });\n                });\n                break;\n            }\n            case \"getExternalResource.resolve\": {\n                pendingExternalResources[data.index].resolve(data.value);\n                break;\n            }\n            case \"getExternalResource.reject\": {\n                pendingExternalResources[data.index].reject(data.reason);\n                break;\n            }\n        }\n    };\n}\n/**\n * glTF validation\n */\nclass GLTFValidation {\n    /**\n     * Validate a glTF asset using the glTF-Validator.\n     * @param data The JSON of a glTF or the array buffer of a binary glTF\n     * @param rootUrl The root url for the glTF\n     * @param fileName The file name for the glTF\n     * @param getExternalResource The callback to get external resources for the glTF validator\n     * @returns A promise that resolves with the glTF validation results once complete\n     */\n    static ValidateAsync(data, rootUrl, fileName, getExternalResource) {\n        if (typeof Worker === \"function\") {\n            return new Promise((resolve, reject) => {\n                const workerContent = `${validateAsync}(${workerFunc})()`;\n                const workerBlobUrl = URL.createObjectURL(new Blob([workerContent], { type: \"application/javascript\" }));\n                const worker = new Worker(workerBlobUrl);\n                const onError = (error) => {\n                    worker.removeEventListener(\"error\", onError);\n                    worker.removeEventListener(\"message\", onMessage);\n                    reject(error);\n                };\n                const onMessage = (message) => {\n                    const data = message.data;\n                    switch (data.id) {\n                        case \"getExternalResource\": {\n                            getExternalResource(data.uri).then((value) => {\n                                worker.postMessage({ id: \"getExternalResource.resolve\", index: data.index, value: value }, [value]);\n                            }, (reason) => {\n                                worker.postMessage({ id: \"getExternalResource.reject\", index: data.index, reason: reason });\n                            });\n                            break;\n                        }\n                        case \"validate.resolve\": {\n                            worker.removeEventListener(\"error\", onError);\n                            worker.removeEventListener(\"message\", onMessage);\n                            resolve(data.value);\n                            worker.terminate();\n                            break;\n                        }\n                        case \"validate.reject\": {\n                            worker.removeEventListener(\"error\", onError);\n                            worker.removeEventListener(\"message\", onMessage);\n                            reject(data.reason);\n                            worker.terminate();\n                        }\n                    }\n                };\n                worker.addEventListener(\"error\", onError);\n                worker.addEventListener(\"message\", onMessage);\n                worker.postMessage({ id: \"init\", url: _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__.Tools.GetBabylonScriptURL(this.Configuration.url) });\n                if (ArrayBuffer.isView(data)) {\n                    // Slice the data to avoid copying the whole array buffer.\n                    const slicedData = data.slice();\n                    worker.postMessage({ id: \"validate\", data: slicedData, rootUrl: rootUrl, fileName: fileName }, [slicedData.buffer]);\n                }\n                else {\n                    worker.postMessage({ id: \"validate\", data: data, rootUrl: rootUrl, fileName: fileName });\n                }\n            });\n        }\n        else {\n            if (!this._LoadScriptPromise) {\n                this._LoadScriptPromise = _babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__.Tools.LoadBabylonScriptAsync(this.Configuration.url);\n            }\n            return this._LoadScriptPromise.then(() => {\n                return validateAsync(data, rootUrl, fileName, getExternalResource);\n            });\n        }\n    }\n}\n/**\n * The configuration. Defaults to `{ url: \"https://cdn.babylonjs.com/gltf_validator.js\" }`.\n */\nGLTFValidation.Configuration = {\n    url: `${_babylonjs_core_Misc_tools_js__WEBPACK_IMPORTED_MODULE_0__.Tools._DefaultCdnUrl}/gltf_validator.js`,\n};\n//# sourceMappingURL=glTFValidation.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/glTFValidation.js\n");

/***/ }),

/***/ "./node_modules/@babylonjs/loaders/glTF/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babylonjs/loaders/glTF/index.js ***!
  \*******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTF1: () => (/* reexport module object */ _1_0_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   GLTF2: () => (/* reexport module object */ _2_0_index_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./glTFFileLoader.js */ \"./node_modules/@babylonjs/loaders/glTF/glTFFileLoader.js\");\n/* harmony import */ var _glTFValidation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./glTFValidation.js */ \"./node_modules/@babylonjs/loaders/glTF/glTFValidation.js\");\n/* harmony import */ var _1_0_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./1.0/index.js */ \"./node_modules/@babylonjs/loaders/glTF/1.0/index.js\");\n/* harmony import */ var _2_0_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./2.0/index.js */ \"./node_modules/@babylonjs/loaders/glTF/2.0/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_0__, _glTFValidation_js__WEBPACK_IMPORTED_MODULE_1__, _1_0_index_js__WEBPACK_IMPORTED_MODULE_2__, _2_0_index_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_0__, _glTFValidation_js__WEBPACK_IMPORTED_MODULE_1__, _1_0_index_js__WEBPACK_IMPORTED_MODULE_2__, _2_0_index_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"GLTF1\",\"GLTF2\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFFileLoader_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _glTFValidation_js__WEBPACK_IMPORTED_MODULE_1__) if([\"default\",\"GLTF1\",\"GLTF2\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _glTFValidation_js__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* eslint-disable import/no-internal-modules */\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYnlsb25qcy9sb2FkZXJzL2dsVEYvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDb0M7QUFDQTtBQUNJO0FBQ0E7QUFDaEI7QUFDeEIsaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8zZC1vZmZpY2Utdmlld2VyLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvbG9hZGVycy9nbFRGL2luZGV4LmpzPzU3ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWludGVybmFsLW1vZHVsZXMgKi9cbmV4cG9ydCAqIGZyb20gXCIuL2dsVEZGaWxlTG9hZGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nbFRGVmFsaWRhdGlvbi5qc1wiO1xuaW1wb3J0ICogYXMgR0xURjEgZnJvbSBcIi4vMS4wL2luZGV4LmpzXCI7XG5pbXBvcnQgKiBhcyBHTFRGMiBmcm9tIFwiLi8yLjAvaW5kZXguanNcIjtcbmV4cG9ydCB7IEdMVEYxLCBHTFRGMiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@babylonjs/loaders/glTF/index.js\n");

/***/ })

};
;